webpackJsonp([7],{

/***/ 1000:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddTransporterPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_transporter__ = __webpack_require__(500);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__helpers_common__ = __webpack_require__(31);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












/**
 * Generated class for the AddTransporterPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddTransporterPage = /** @class */ (function () {
    function AddTransporterPage(navCtrl, navParams, transporter, loader, toast, fb, trucks, events, mapsAPILoader, ngZone) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.transporter = transporter;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.trucks = trucks;
        this.events = events;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.transportFlag = true;
        this.bankFlag = false;
        this.addressFlag = false;
        this.locationFlag = false;
        this.routeFlag = false;
        this.acountNo = false;
        this.address_location = {
            type: "Point",
            coordinates: []
        };
        this.DestinationsArray = [];
        this.getTo = "";
        this.submitted = false;
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_7_rxjs__["Observable"].of([]);
            }
        };
        this.addForm = this.fb.group({
            agency_name: [''],
            transport_name: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            website: [''],
            owner_name: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            // location: ['', Validators.compose([Validators.required, Validators.minLength(2)])],
            omobile_no_1: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            omobile_no_2: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            contact_person: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            cmobile_no_1: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            cmobile_no_2: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            account_holder_name: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(25)])],
            account_number: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(16)])],
            confirm_account_number: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(16)])],
            ifsc: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(11), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(11)])],
            address: this.fb.array([this.createAddressForm()]),
            location_allotment: [''],
            location_restriction: [''],
            latitude: [''],
            longitude: [''],
            route_desired: this.fb.array([this.routeDesiredForm()]),
            location_to: ['']
        });
    }
    AddTransporterPage.prototype.ngOnInit = function () {
    };
    AddTransporterPage.prototype.confirmAccount = function () {
        console.log(this.addForm.value);
        if (this.addForm.value.account_number == this.addForm.value.confirm_account_number) {
            console.log("Same");
            this.acountNo = false;
        }
        else {
            console.log("Not Same");
            this.acountNo = true;
        }
    };
    Object.defineProperty(AddTransporterPage.prototype, "routeDesired", {
        get: function () { return this.addForm.get('route_desired'); },
        enumerable: true,
        configurable: true
    });
    AddTransporterPage.prototype.routeDesiredForm = function () {
        return this.fb.group({
            location: ['']
        });
    };
    AddTransporterPage.prototype.addTo = function () {
        this.route_desired = this.addForm.get('route_desired');
        this.route_desired.push(this.routeDesiredForm());
    };
    AddTransporterPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_10__home_home__["a" /* HomePage */]);
    };
    AddTransporterPage.prototype.removeTo = function (index) {
        if (index === 0) {
            this.toast.error({ 'message': 'Cannot remove this form.' });
        }
        else {
            this.route_desired.removeAt(index);
        }
    };
    AddTransporterPage.prototype.addToArray = function () {
        var obj = { "location": this.getTo };
        this.DestinationsArray.push(obj);
        this.addForm.get('location_to').setValue('');
    };
    AddTransporterPage.prototype.removeToArray = function (index) {
        this.DestinationsArray.splice(index, 1);
        console.log("array >>>", this.DestinationsArray);
    };
    // getIndex(ind) {
    //   console.log(ind);
    //   this.toIndex = ind;
    // }
    AddTransporterPage.prototype.getLocation = function (e) {
        e.preventDefault();
        this.events.broadcast('location');
    };
    AddTransporterPage.prototype.createAddressForm = function () {
        return this.fb.group({
            address_line_1: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            address_line_2: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            city: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            state: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            pincode: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(6), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(6)])]
        });
    };
    AddTransporterPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddTransporterPage');
    };
    Object.defineProperty(AddTransporterPage.prototype, "addressForm", {
        // Get controls for form array for address
        get: function () {
            return this.addForm.get('address')['controls'][0].controls;
        },
        enumerable: true,
        configurable: true
    });
    AddTransporterPage.prototype.addressData = function (e) {
        this.formValues = this.addForm.value;
        this.addressForm['address_line_1'].setValue(e.address_line1);
        this.addressForm['address_line_2'].setValue(e.address_line2);
        this.addressForm['city'].setValue(e.city);
        this.addressForm['state'].setValue(e.state);
        this.addressForm['pincode'].setValue(e.pincode);
        this.address_location.coordinates = [];
        this.address_location.coordinates.push(e.lng);
        this.address_location.coordinates.push(e.lat);
        this.formValues.address[0].address_location = this.address_location;
    };
    AddTransporterPage.prototype.save = function (isValid, value) {
        var _this = this;
        var route_desired = [];
        console.log("isValid >>>>>>>>>", this.addForm);
        this.addForm.value.route_desired.forEach(function (r) {
            console.log(">>>>>>>>>", r);
            route_desired.push(r);
        });
        this.submitted = true;
        if (isValid) {
            this.formValues = value;
            this.formValues.address[0].address_location = this.address_location;
            this.formValues.route_desired = this.DestinationsArray;
            this.formValues.agency_name = this.addForm.value.agency_name.agency_name;
            console.log(">>>>>>>>>FormValue", this.formValues);
            this.loader.show();
            this.transporter.addTransporterDetails(this.formValues).subscribe(function (res) {
                console.log("res >>>>>", res);
                _this.addForm.reset();
                _this.loader.hide();
                _this.toast.show({ 'message': 'Added successfully.' });
                _this.navCtrl.setRoot('ManageTransportPage');
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }
    };
    AddTransporterPage.prototype.preTransport = function () {
        this.transportFlag = true;
        this.bankFlag = false;
        this.addressFlag = false;
        this.locationFlag = false;
        this.routeFlag = false;
    };
    AddTransporterPage.prototype.nextBank = function () {
        this.transportFlag = false;
        this.bankFlag = true;
        this.addressFlag = false;
        this.locationFlag = false;
        this.routeFlag = false;
    };
    AddTransporterPage.prototype.nextAddress = function () {
        var _this = this;
        this.transportFlag = false;
        this.bankFlag = false;
        this.addressFlag = true;
        this.locationFlag = false;
        this.routeFlag = false;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var presentCity = new google.maps.places.Autocomplete(_this.searchElementRefCity.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentCity.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('City').value = pre_city;
                        var addr = _this.addForm.get('address');
                        var first = addr.at(0);
                        first.get('city').setValue(pre_city);
                    });
                });
                var presentState = new google.maps.places.Autocomplete(_this.searchElementRefState.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentState.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentState.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        document.getElementById('State').value = components.administrative_area_level_1;
                        var addr = _this.addForm.get('address');
                        var first = addr.at(0);
                        first.get('state').setValue(components.administrative_area_level_1);
                    });
                });
            });
        }, 2000);
    };
    AddTransporterPage.prototype.nextLocation = function () {
        var _this = this;
        this.transportFlag = false;
        this.bankFlag = false;
        this.addressFlag = false;
        this.locationFlag = true;
        this.routeFlag = false;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var presentCity = new google.maps.places.Autocomplete(_this.searchElementRef.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentCity.getPlace();
                        var lat = place.geometry.location.lat();
                        var lng = place.geometry.location.lng();
                        localStorage.setItem('latlng', JSON.stringify({
                            lat: lat,
                            lng: lng
                        }));
                        _this.events.broadcast('location');
                        _this.addForm.controls['latitude'].setValue(lat);
                        _this.addForm.controls['longitude'].setValue(lng);
                        var components = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('Location').value = pre_city;
                        _this.addForm.controls['location_allotment'].setValue(pre_city);
                    });
                });
            });
        }, 1000);
    };
    AddTransporterPage.prototype.nextRoute = function () {
        var _this = this;
        this.transportFlag = false;
        this.bankFlag = false;
        this.addressFlag = false;
        this.locationFlag = false;
        this.routeFlag = true;
        setTimeout(function () {
            var toSearch = new google.maps.places.Autocomplete(_this.searchElementRefTo.nativeElement, {
                componentRestrictions: { "country": "IN" },
                types: []
            });
            toSearch.addListener("place_changed", function () {
                _this.ngZone.run(function () {
                    //get the place result
                    var place = toSearch.getPlace();
                    var components = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].extract_components(place);
                    var pre_city = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                    console.log(components, pre_city);
                    document.getElementById('TO').value = pre_city;
                    _this.getTo = pre_city;
                });
            });
        }, 2000);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchCity"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddTransporterPage.prototype, "searchElementRefCity", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchStatue"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddTransporterPage.prototype, "searchElementRefState", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddTransporterPage.prototype, "searchElementRef", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchTo"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddTransporterPage.prototype, "searchElementRefTo", void 0);
    AddTransporterPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-transporter',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\add-transporter\add-transporter.html"*/'<!--\n  Generated template for the AddTransporterPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add Transporter</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="addForm" (ngSubmit)="save(addForm.valid, addForm.value)" novalidate>\n\n    <!----------- transport Flag ------------>\n\n    <div *ngIf="transportFlag">\n      <label class="fonts-size">Transport Details </label><br>\n      <div class="form-group">\n        <label class=" label">Agency name <span style="color:red">*</span> </label> \n        <!-- <input name="agency_name" type="text" formControlName="agency_name" class="form-control">  -->\n\n        <input class="form-control"\n          ng2-auto-complete\n          formControlName="agency_name"\n          [source]="agencyName.bind(this)"\n          list-formatter="agency_name"/>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Transporter name <span style="color:red">*</span> </label> \n        <input name="transport_name" type="text" autocomplete="off" formControlName="transport_name" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.transport_name.invalid && (addForm.controls.transport_name.dirty || addForm.controls.transport_name.touched))">\n        <div *ngIf="addForm.controls[\'transport_name\'].hasError(\'required\')">\n          <label>Transporter name is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'transport_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Owner name <span style="color:red">*</span> </label> \n        <input name="owner_name" type="text" autocomplete="off" formControlName="owner_name" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.owner_name.invalid && (addForm.controls.owner_name.dirty || addForm.controls.owner_name.touched))">\n        <div *ngIf="addForm.controls[\'owner_name\'].hasError(\'required\')">\n          <label>Owner name is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'owner_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile no 1 <span style="color:red">*</span> </label> \n        <input name="omobile_no_1" type="text" autocomplete="off" OnlyNumber="true" placeholder="" formControlName="omobile_no_1" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.omobile_no_1.invalid && (addForm.controls.omobile_no_1.dirty || addForm.controls.omobile_no_1.touched))">\n        <div *ngIf="addForm.controls[\'omobile_no_1\'].hasError(\'required\')">\n          <label>Mobile number is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'omobile_no_1\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'omobile_no_1\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile no 2 </label> \n        <input name="omobile_no_2" type="text" autocomplete="off" OnlyNumber="true" placeholder="" formControlName="omobile_no_2" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.omobile_no_2.invalid && (addForm.controls.omobile_no_2.dirty || addForm.controls.omobile_no_2.touched))">\n        <div *ngIf="addForm.controls[\'omobile_no_2\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'omobile_no_2\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Contact person name <span style="color:red">*</span> </label> \n        <input name="contact_person" type="text" autocomplete="off" placeholder="" formControlName="contact_person" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.contact_person.invalid && (addForm.controls.contact_person.dirty || addForm.controls.contact_person.touched))">\n        <div *ngIf="addForm.controls[\'contact_person\'].hasError(\'required\')">\n          <label>Contact person name is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'contact_person\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Contact Mobile no 1 <span style="color:red">*</span> </label> \n        <input name="cmobile_no_1" type="text" autocomplete="off" OnlyNumber="true" placeholder="" formControlName="cmobile_no_1" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.cmobile_no_1.invalid && (addForm.controls.cmobile_no_1.dirty || addForm.controls.cmobile_no_1.touched))">\n        <div *ngIf="addForm.controls[\'cmobile_no_1\'].hasError(\'required\')">\n          <label>Contact person mobile number is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'cmobile_no_1\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'cmobile_no_1\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Contact Mobile no 2 </label> \n        <input name="cmobile_no_2" type="text" autocomplete="off" OnlyNumber="true" placeholder="" formControlName="cmobile_no_2" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.cmobile_no_2.invalid && (addForm.controls.cmobile_no_2.dirty || addForm.controls.cmobile_no_2.touched))">\n        <div *ngIf="addForm.controls[\'cmobile_no_2\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'cmobile_no_2\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <br>\n      <button ion-button class="next-button" (click)="nextBank()" type="button" expand="block">Next</button>\n    </div>\n\n    <!----------- Bank Flag ------------>\n    \n    <div *ngIf="bankFlag">\n      <label class="fonts-size">Bank Details </label><br>\n      <div class="form-group">\n        <label class=" label">Account holder name </label> \n        <input name="account_holder_name" autocomplete="off" type="text" placeholder="" formControlName="account_holder_name" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.account_holder_name.invalid && (addForm.controls.account_holder_name.dirty || addForm.controls.account_holder_name.touched))">\n        <div *ngIf="addForm.controls[\'account_holder_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'account_holder_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Account no </label> \n        <input name="account_number" type="text" autocomplete="off" placeholder="" formControlName="account_number" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.account_number.invalid && (addForm.controls.account_number.dirty || addForm.controls.account_number.touched))">\n        <div *ngIf="addForm.controls[\'account_number\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 16 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Confrim account no </label>\n        <input name="confirm_account_number" type="text" autocomplete="off" (change)="confirmAccount()" placeholder="" formControlName="confirm_account_number" class="form-control"> \n      </div>\n      <div *ngIf="acountNo" class="error-msg"><label>Your account no and confirm account no do not match.</label></div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.confirm_account_number.invalid && (addForm.controls.confirm_account_number.dirty || addForm.controls.confirm_account_number.touched))">\n        <div *ngIf="addForm.controls[\'confirm_account_number\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 16 letters.</label>\n        </div>\n      </div>\n    \n      <div class="form-group">\n        <label class=" label">Ifsc code </label>\n        <input name="ifsc" type="text" placeholder="" autocomplete="off" formControlName="ifsc" class="form-control upper"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.get(\'ifsc\').invalid && (addForm.get(\'ifsc\').dirty || addForm.get(\'ifsc\').touched))">\n        <div *ngIf="addForm.controls[\'ifsc\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 11 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'ifsc\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 11 letters.</label>\n        </div>\n      </div>\n      <br>\n      <br>\n      <button ion-button class="pre-button" (click)="preTransport()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="nextAddress()" type="button" expand="block">Next</button>\n    </div>\n\n    <!----------- Location Flag ------------>\n    <div *ngIf="locationFlag">\n      <div class="width-full">\n      <label class="fonts-size">Location Allotment</label>\n      </div>\n      <div class="form-group">\n        <input name="location_allotment" id="Location" type="text" placeholder="Search Location" #search formControlName="location_allotment" class="form-control">\n      </div>\n      <div class="width-full">\n      <ion-row right>  \n        <ion-col text-right>   \n          <button ion-button (click)="getLocation($event)"><ion-icon name="locate"></ion-icon></button>\n        </ion-col> \n      </ion-row>\n      \n      <google-maps></google-maps>\n      <br>\n    </div>\n\n      <div class="form-group">\n        <label class=" label">Location Restriction (meters)</label>\n        <input name="location_restriction" type="number" autocomplete="off" placeholder="" formControlName="location_restriction" class="form-control"> \n      </div>\n      <div class="form-group">\n        <label class=" label">Latitude </label>\n        <input name="latitude" type="text" placeholder="" autocomplete="off" formControlName="latitude" class="form-control"> \n      </div>\n      <div class="form-group">\n        <label class=" label">Longitude </label>\n        <input name="longitude" type="text" placeholder="" autocomplete="off" formControlName="longitude" class="form-control"> \n      </div>\n      \n      <div class="form-group">\n        <label class=" label">Website </label> \n        <input name="website" type="text" autocomplete="off" formControlName="website" class="form-control"> \n      </div>\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="nextAddress()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="nextRoute()" type="button" expand="block">Next</button>\n    </div>\n    </div>\n\n    <!----------- Address Flag ------------>\n    <div *ngIf="addressFlag">\n      <div class="width-full">\n      <label class="fonts-size">Address Information </label>\n      </div><br>\n      <div formArrayName="address" *ngFor="let item of addForm.get(\'address\').controls; let i = index;">\n        <div [formGroupName]="i">\n          <div class="form-group">\n            <label class=" label">Address line 1 <span style="color:red">*</span></label>\n            <input type="text" formControlName="address_line_1" autocomplete="off" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.address_line_1.invalid && (item.controls.address_line_1.dirty || item.controls.address_line_1.touched))">\n            <div *ngIf="item.controls[\'address_line_1\'].hasError(\'required\')">\n              <label>Address line 1 is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'address_line_1\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <label class=" label">Address line 2 <span style="color:red">*</span></label>\n            <input type="text" formControlName="address_line_2" autocomplete="off" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.address_line_2.invalid && (item.controls.address_line_2.dirty || item.controls.address_line_2.touched))">\n            <div *ngIf="item.controls[\'address_line_2\'].hasError(\'required\')">\n              <label>Address line 2 is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'address_line_2\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">City <span style="color:red">*</span></label>\n            <input id="City" type="text" formControlName="city" class="form-control" #searchCity>            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.city.invalid && (item.controls.city.dirty || item.controls.city.touched))">\n            <div *ngIf="item.controls[\'city\'].hasError(\'required\')">\n              <label>City is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'city\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">State <span style="color:red">*</span></label>\n            <input id="State" type="text" formControlName="state" class="form-control" #searchStatue>            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.state.invalid && (item.controls.state.dirty || item.controls.state.touched))">\n            <div *ngIf="item.controls[\'state\'].hasError(\'required\')">\n              <label>State is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'state\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">Pincode <span style="color:red">*</span></label>\n            <input type="text" OnlyNumber="true" autocomplete="off" formControlName="pincode" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.pincode.invalid && (item.controls.pincode.dirty || item.controls.pincode.touched))">\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'required\')">\n              <label>Pincode is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 6 letters.</label>\n            </div>\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'maxlength\')">\n              <label>Maximum length is upto 6 letters.</label>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="nextBank()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="nextLocation()" type="button" expand="block">Next</button>\n   </div>\n    </div>\n\n\n    <!----------- Routs Flag ------------>\n    <div *ngIf="routeFlag">\n        <!-- <label class="fonts-size">Route Prefferred </label>\n        <div formArrayName="route_desired" class="form-group">            \n          <div *ngFor="let r of routeDesired.controls; let i = index;">\n            <div [formGroupName]="i">\n              <ion-grid>\n                <ion-row>\n                  <ion-col>                            {{ i + 1}}  -->\n                    <!-- <label class=" label mg-top-13">Location <span style="color:red">*</span> </label> -->\n                  <!--</ion-col>\n                  <ion-col>\n                    <ion-row right>\n                      <ion-col text-right>\n                        <button class="btn-size" ion-button color="secondary" (click)="addTo()"><ion-icon name="add"></ion-icon></button>\n                        <button class="btn-size" ion-button color="danger" (click)="removeTo(i)"><ion-icon name="close"></ion-icon></button>\n                      </ion-col>\n                    </ion-row>\n                  </ion-col>\n                </ion-row>\n              </ion-grid>\n              <input type="text" formControlName="location" class="form-control" />\n            </div>\n          </div>\n        </div> -->\n<div class="width-full">\n      <label class="fonts-size">Route Prefferred </label>\n      </div>\n      <hr>\n      <div class="form-group">\n        <button ion-button (click)="addToArray()" type="button" class="add-al">Add</button>\n        <label class=" label mg-top-13">Location </label> \n        <input type="text" id="TO" formControlName="location_to" class="form-control" #searchTo />\n      </div>\n      <hr>\n      <br>\n\n      <div *ngFor="let d of DestinationsArray; let i = index">\n        <ion-row>\n          <ion-col class="col-pad">\n            {{ d.location }}\n          </ion-col>\n        \n          <ion-col>\n              <button class="btn-size" (click)="removeToArray(i)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button>\n          </ion-col>\n        </ion-row>\n      </div>\n\n      <br>\n      \n\n      <div class="width-full">\n        <button ion-button class="pre-button" (click)="nextLocation()" type="button" expand="block">Previous</button>\n        <button ion-button block class="up-button" type="submit" expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Transporter</button>\n      </div>\n\n\n    </div>\n  </form>\n</ion-content>'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\add-transporter\add-transporter.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_transporter__["a" /* Transporter */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_8__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_6__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_9__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], AddTransporterPage);
    return AddTransporterPage;
}());

//# sourceMappingURL=add-transporter.js.map

/***/ }),

/***/ 1001:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddUserPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the AddUserPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddUserPage = /** @class */ (function () {
    function AddUserPage(navCtrl, navParams, loader, toast, fb, admin) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.admin = admin;
        this.agenciesNameList = [];
        this.permissionsList = [];
        this.userRoles = ['Admin', 'Office Staff', 'Marketing Staff', 'Cluster Manager'];
        this.assignList = ['Backoffice', 'Agencies', 'Marketing', 'Investor'];
        this.groupnames = [];
        this.grouppermissions_row = [];
        this.AgenciesArray = [];
        this.addAssignArray = [];
        this.addUserForm = this.fb.group({
            user_name: [''],
            password: [''],
            cpassword: [''],
            user_role: [''],
            assign: [''],
            agencies: [''],
            permissions: ['']
        });
        this.getAgenciesNameList();
        this.getUserPermissionList();
    }
    AddUserPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddUserPage');
    };
    AddUserPage.prototype.ngOnInit = function () {
    };
    AddUserPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */]);
    };
    AddUserPage.prototype.getAgenciesNameList = function () {
        var _this = this;
        this.admin.getAgenciesNameList().subscribe(function (res) {
            var data = res.json();
            data.results.forEach(function (r) {
                var obj = { "name": r.name };
                _this.agenciesNameList.push(obj);
            });
            console.log("data >>>", _this.agenciesNameList);
        }, function (err) {
            console.log("err >>>", err);
        });
    };
    AddUserPage.prototype.getUserPermissionList = function () {
        var _this = this;
        this.loader.show();
        this.admin.getUserPermissionList().subscribe(function (res) {
            var data = res.json();
            _this.loader.hide();
            data.result.forEach(function (r) {
                _this.permissionsList.push(r);
            });
            console.log("data >>>", _this.permissionsList);
        }, function (err) {
            console.log("err >>>", err);
        });
    };
    AddUserPage.prototype.addPermissions = function (event, gn, pname, pvalue) {
        var _this = this;
        if (event.target.checked) {
            var obj = { "group": gn, "name": pname, "value": pvalue };
            this.groupnames.push(gn);
            this.grouppermissions_row.push(obj);
        }
        else {
            var i = 0;
            this.grouppermissions_row.forEach(function (element) {
                if (element.name == pname && element.group == gn) {
                    console.log(" IN    >>>>", i);
                    _this.grouppermissions_row.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.grouppermissions_row >>>>", this.grouppermissions_row);
        }
    };
    AddUserPage.prototype.addAgencies = function (event, aname, avalue) {
        var _this = this;
        if (event.target.checked) {
            var obj = { "name": aname };
            // , "value": avalue
            this.AgenciesArray.push(obj);
        }
        else {
            var i = 0;
            this.AgenciesArray.forEach(function (element) {
                if (element.name == aname) {
                    console.log(" IN    >>>>", i);
                    _this.AgenciesArray.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.AgenciesArray >>>>", this.AgenciesArray);
        }
    };
    AddUserPage.prototype.addAssignfor = function (event, aname) {
        var _this = this;
        if (event.target.checked) {
            var obj = { "assign": aname };
            this.addAssignArray.push(obj);
        }
        else {
            var i = 0;
            this.addAssignArray.forEach(function (element) {
                if (element.assign == aname) {
                    console.log(" IN    >>>>", i);
                    _this.addAssignArray.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.addAssignArray >>>>", this.addAssignArray);
        }
    };
    AddUserPage.prototype.save = function () {
        // console.log("data >>>", this.addUserForm.value);
        var _this = this;
        if (this.addUserForm.value.password == this.addUserForm.value.cpassword) {
            var new_groupnames = Array.from(new Set(this.groupnames)); // remove duplicate groupname from array
            var priviligesArray = [];
            new_groupnames.forEach(function (r) {
                var permissionsGroupArray = [];
                _this.grouppermissions_row.forEach(function (d) {
                    if (d.group == r) {
                        var p = { "name": d.name, "value": d.value };
                        permissionsGroupArray.push(p);
                    }
                });
                var obj = { "group_name": r, "permissions_group": permissionsGroupArray };
                priviligesArray.push(obj);
            });
            var obj = {
                "user_name": this.addUserForm.value.user_name,
                "password": this.addUserForm.value.password,
                "user_role": this.addUserForm.value.user_role,
                "assigns": this.addAssignArray,
                "agencies": this.AgenciesArray,
                "priviliges": priviligesArray
            };
            console.log("Final  >>>", obj);
            this.loader.show();
            this.admin.addUser(obj).subscribe(function (res) {
                _this.loader.hide();
                _this.addUserForm.reset();
                _this.toast.show({ 'message': 'Added Successfully.' });
                _this.navCtrl.setRoot('ManageUserPage');
            }, function (err) {
                console.log("err >>>", err);
            });
        }
        else {
            this.toast.show({ 'message': 'Password/confirm password not matching..!' });
        }
    };
    AddUserPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-user',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\add-user\add-user.html"*/'<!--\n  Generated template for the AddUserPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add User</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n    <form [formGroup]="addUserForm">\n\n      <div class="form-group">\n        <label class=" label">User Name <span style="color:red">*</span></label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="user_name" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Password <span style="color:red">*</span></label>\n        <input type="password" placeholder="" autocomplete="off" formControlName="password" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Confirm Password <span style="color:red">*</span></label>\n        <input type="password" placeholder="" formControlName="cpassword" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">User Role <span style="color:red">*</span></label>\n        <select class="form-control drop-down" formControlName="user_role">\n          <option value="">Select Role</option>\n          <option *ngFor="let role of userRoles" value="{{role}}">{{ role }}</option>\n        </select>        \n      </div>\n      <!-- multiple -->\n      <div class="form-group">\n        <label class=" label"><b>Assign for </b><span style="color:red">*</span></label>\n        <br>\n        <div *ngFor="let assignfor of assignList" class="add-padding">\n            <input type="checkbox" formControlName="assign" (change)="addAssignfor($event, assignfor)"> &nbsp;{{ assignfor}}\n        </div>\n        <!-- <select class="form-control drop-down" formControlName="assign">\n          <option value="">Select Assign for User</option>\n          <option *ngFor="let assignfor of assignList" value="{{ assignfor }}">{{ assignfor }}</option>\n        </select>         -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label"><b>Agencies </b><span style="color:red">*</span></label>\n        <br>\n        <div *ngFor="let agency of agenciesNameList" class="add-padding" >\n            <input type="checkbox" formControlName="agencies" (change)="addAgencies($event, agency.name, agency.value)"> &nbsp;{{ agency.name }}\n        </div>\n\n          <!-- <option value="">Select Agencies</option>\n          <option *ngFor="let agency of agenciesNameList" value="{{agency}}">{{ agency }}</option>\n        </select>        \n        (change)="getCapacity()" required    -->\n      </div>\n      <br>\n      <br>\n      <hr>\n\n      <div class="form-group">\n        <label class=" label"><b>Priviliges Section: </b></label>\n\n        <br>\n        <div *ngFor="let pl of permissionsList">\n          <br>\n          <b>{{ pl.group_name }} : </b>\n          <!-- <br>\n          <br>  -->\n          <div *ngFor="let p of pl.permissions_group" class="add-padding">\n            <input type="checkbox"  formControlName="permissions" value="p.name" (change)="addPermissions($event, pl.group_name, p.name, p.value)"> &nbsp;{{ p.name }}\n          </div>\n        </div> \n      </div>\n      <hr>\n\n      <div padding>\n        <button ion-button block size="large" type="button" expand="block" (click)="save()"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add User</button>\n      </div>\n\n    </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\add-user\add-user.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], AddUserPage);
    return AddUserPage;
}());

//# sourceMappingURL=add-user.js.map

/***/ }),

/***/ 1002:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminPrivilegesAddTruckPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs__ = __webpack_require__(1);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the AdminPrivilegesAddTruckPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AdminPrivilegesAddTruckPage = /** @class */ (function () {
    function AdminPrivilegesAddTruckPage(navCtrl, navParams, trucks, loader, toast, fb) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.trucks = trucks;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.types = [
            { name: 'OPEN', value: 'OPEN' },
            { name: 'CONTAINER', value: 'CONTAINER' },
            { name: 'TRAILER', value: 'TRAILER' },
        ];
        this.capacity = [];
        this.transporterNames = [];
        this.driverNames = [];
        this.submitted = false;
        this.data = {
            truck_no: '',
            truck_type: '',
            truck_capacity: '',
            transporter_id: '',
            driver_id: ''
        };
        this.fetchFlag = false;
        this.otpFlag = false;
        this.transporterFlag = true;
        this.agencyFlag = false;
        this.driverFlag = false;
        this.guaranterName = "";
        this.guaranterType = "";
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_7_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Transporter Name list
        this.transporterName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTransporterName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_7_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Transporter Name list
        this.DriverName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchDriverName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_7_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_7_rxjs__["Observable"].of([]);
            }
        };
        this.addForm = this.fb.group({
            truck_no: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].pattern(/^((?!\s{1,}).)*$/)])],
            truck_type: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required])],
            truck_capacity: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required])],
            transporter_id: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required])],
            driver_id: [''],
            // driver_id: ['', Validators.compose([Validators.required])],
            transport_srno: [''],
            agency_name: [''],
            user_name: [''],
            otp: [''],
            guaranter_name: [''],
            guaranter_type: [''],
            authorised_by: [''],
            mobile_no: ['']
        });
        this.addForm.controls['user_name'].setValue(localStorage.getItem('user_name'));
    }
    AdminPrivilegesAddTruckPage.prototype.ionViewDidLoad = function () {
        this.getTransporterNames();
        this.getDriverNames();
        console.log('ionViewDidLoad AdminPrivilegesAddTruckPage');
    };
    AdminPrivilegesAddTruckPage.prototype.noWhitespaceValidator = function (control) {
        var isWhitespace = (control.value || '').trim().length === 0;
        var isValid = !isWhitespace;
        return isValid ? null : { 'whitespace': true };
    };
    AdminPrivilegesAddTruckPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_3__home_home__["a" /* HomePage */]);
    };
    AdminPrivilegesAddTruckPage.prototype.onSelectTruck = function (e) {
        console.log("Select truck >>>", e);
    };
    AdminPrivilegesAddTruckPage.prototype.radioSelect = function (event) {
        console.log("Here ->", event);
        if (event == "transporter") {
            this.transporterFlag = true;
            this.agencyFlag = false;
            this.driverFlag = false;
            this.addForm.controls['guaranter_type'].setValue('transporter');
        }
        if (event == "agency") {
            this.transporterFlag = false;
            this.agencyFlag = true;
            this.driverFlag = false;
            this.addForm.controls['guaranter_type'].setValue('agency');
        }
        if (event == "driver") {
            this.transporterFlag = false;
            this.agencyFlag = false;
            this.driverFlag = true;
            this.addForm.controls['guaranter_type'].setValue('driver');
        }
    };
    AdminPrivilegesAddTruckPage.prototype.getDetailsByRadio = function () {
        var _this = this;
        console.log("Here In Details");
        this.guaranterType = this.addForm.value.guaranter_type;
        if (this.guaranterType == "transporter") {
            this.loader.show();
            this.guaranterName = this.addForm.value.guaranter_name.transport_name;
            this.trucks.getTransporterDetailsByName(this.addForm.value.guaranter_name.transport_name).subscribe(function (res) {
                var data = res.json();
                console.log("data >>", data);
                _this.addForm.controls['mobile_no'].setValue(data.cmobile_no_1);
                _this.loader.hide();
            }, function (err) {
                console.log(">>>error", err);
            });
        }
        if (this.guaranterType == "agency") {
            this.loader.show();
            this.guaranterName = this.addForm.value.guaranter_name.agency_name;
            this.trucks.getAgencyDetailsByName(this.addForm.value.guaranter_name.agency_name).subscribe(function (res) {
                var data = res.json();
                console.log("data >>", data);
                _this.addForm.controls['mobile_no'].setValue(data.cmobile_no_1);
                _this.loader.hide();
            }, function (err) {
                console.log(">>>error", err);
            });
        }
        if (this.guaranterType == "driver") {
            this.loader.show();
            this.guaranterName = this.addForm.value.guaranter_name.driver_name;
            this.trucks.getDriverDetailsByName(this.addForm.value.guaranter_name.driver_name).subscribe(function (res) {
                var data = res.json();
                console.log("data >>", data);
                _this.addForm.controls['mobile_no'].setValue(data.mobile_no_1);
                _this.loader.hide();
            }, function (err) {
                console.log(">>>error", err);
            });
        }
    };
    AdminPrivilegesAddTruckPage.prototype.getCapacity = function () {
        var _this = this;
        var ttype = this.addForm.value.truck_type;
        this.trucks.getCapacityOfTruck().subscribe(function (res) {
            var data = res.json();
            // console.log('res >>>>>>> ', res);
            _this.capacity = [];
            data.results.forEach(function (r) {
                if (r.type == ttype) {
                    r.capacity.forEach(function (a) {
                        var obj = {
                            "name": a.ton,
                            "value": a.ton,
                        };
                        _this.capacity.push(obj);
                    });
                }
            });
            console.log('capacity >>>>>>> ', _this.capacity);
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    AdminPrivilegesAddTruckPage.prototype.getTransporterNames = function () {
        var _this = this;
        this.trucks.getTransporterNames().subscribe(function (res) {
            var data = res.json();
            data.result.forEach(function (r) {
                var obj = {
                    "name": r.transport_name,
                    "value": r._id
                };
                _this.transporterNames.push(obj);
            });
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    AdminPrivilegesAddTruckPage.prototype.getDriverNames = function () {
        var _this = this;
        this.trucks.getDriverNames().subscribe(function (res) {
            var data = res.json();
            data.result.forEach(function (r) {
                var obj = {
                    "name": r.driver_name,
                    "value": r._id
                };
                _this.driverNames.push(obj);
            });
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    AdminPrivilegesAddTruckPage.prototype.fetch = function () {
        var _this = this;
        var srNo = this.addForm.value.transport_srno;
        this.loader.show();
        this.trucks.getBySrnoTransporter(srNo).subscribe(function (res) {
            var data = res.json();
            _this.transporterDetails = data.results;
            console.log("Srno >>>", data.results);
            _this.fetchFlag = true;
            _this.loader.hide();
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    AdminPrivilegesAddTruckPage.prototype.sendOTP = function () {
        var _this = this;
        var mobileNo = this.addForm.value.mobile_no;
        var otpNo = Math.floor(1000 + Math.random() * 9000);
        console.log("MobileNo >>>", mobileNo);
        console.log("otpNo >>>", otpNo);
        this.otp_no = otpNo;
        this.trucks.sendOTP(mobileNo, otpNo).subscribe(function (res) {
            var data = res.json();
            console.log("res >>>", res);
            _this.fetchFlag = true;
            _this.loader.hide();
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    AdminPrivilegesAddTruckPage.prototype.checkOTP = function () {
        if (this.addForm.value.otp == this.otp_no) {
            this.otpFlag = false;
        }
        else {
            this.otpFlag = true;
        }
    };
    AdminPrivilegesAddTruckPage.prototype.manualVerified = function () {
    };
    AdminPrivilegesAddTruckPage.prototype.save = function (isValid, value) {
        var _this = this;
        this.submitted = true;
        if (isValid && this.addForm.value.otp) {
            if (value.truck_no.truck_no) {
                this.toast.error({ 'message': 'Truck Already Exist..!' });
            }
            else {
                var obj = {
                    "truck_no": value.truck_no,
                    "type": value.truck_type,
                    "capacity": value.truck_capacity,
                    "agency_name": value.agency_name.agency_name ? value.agency_name.agency_name : value.agency_name,
                    "transport_id": value.transporter_id._id,
                    "driver_id": value.driver_id._id,
                    "guaranter_name": this.guaranterName,
                    "guaranter_type": this.guaranterType,
                    "authorised_by": value.authorised_by,
                    "mobile_no": value.mobile_no,
                    "user_name": value.user_name
                };
                console.log("obj >>>>>", obj);
                this.loader.show();
                this.trucks.addTruck(obj).subscribe(function (res) {
                    _this.capacity = [];
                    _this.addForm.reset();
                    _this.loader.hide();
                    _this.toast.show({ 'message': 'Added successfully.' });
                    _this.navCtrl.setRoot('ManageTruckListPage');
                }, function (err) {
                    _this.toast.error({ 'message': 'Something went wrong.' });
                    console.log(">>>>>Err", err);
                });
            }
        }
    };
    AdminPrivilegesAddTruckPage.prototype.addNewDriver = function () {
        this.navCtrl.push('AddDriverPage');
    };
    AdminPrivilegesAddTruckPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-admin-privileges-add-truck',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\admin-privileges-add-truck\admin-privileges-add-truck.html"*/'<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add Truck</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="addForm" (ngSubmit)="save(addForm.valid, addForm.value)" novalidate>\n\n    <div class="form-group">\n      <label class=" label">Truck No. <span style="color:red">*</span> </label>                 \n      <input\n        class="form-control"\n        ng2-auto-complete\n        formControlName="truck_no"\n        autocomplete="off"\n        name="truck_no" \n        [source]="truckNo.bind(this)"\n        list-formatter="truck_no"\n        (valueSelected)="addToAddrs($event)" \n        required\n      /> \n      \n    <div *ngIf="submitted || (addForm.controls.truck_no.dirty && addForm.controls.truck_no.invalid)" class="alert alert-danger">\n        <p class="error-msg" *ngIf="addForm.controls[\'truck_no\'].hasError(\'required\')">\n          Truck number is required.\n        </p>\n        <p class="error-msg" *ngIf="addForm.controls[\'truck_no\'].hasError(\'pattern\')">\n          White Space Do Not Allow.\n        </p>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Truck Type <span style="color:red">*</span></label>\n      <select class="form-control drop-down" autocomplete="off" name="truck_type" formControlName="truck_type" (change)="getCapacity()" required  >\n        <option value="">Select Truck Type</option>\n        <option *ngFor="let t of types" [ngValue]="t.value">{{t.name}}</option>\n      </select> \n      \n    <div *ngIf="submitted || (addForm.controls.truck_type.dirty && addForm.controls.truck_type.invalid)" class="alert alert-danger">\n        <p class="error-msg" *ngIf="addForm.controls[\'truck_type\'].hasError(\'required\')">\n          Truck type is required.\n        </p>\n      </div>         \n    </div>\n\n    <div class="form-group">\n      <label class=" label">Truck Capacity <span style="color:red">*</span></label>\n      <select class="form-control drop-down" autocomplete="off" name="truck_capacity" formControlName="truck_capacity" required  >\n        <option *ngFor="let c of capacity" [ngValue]="c.value">{{c.name}}</option>\n      </select> \n      \n    <div *ngIf="submitted || (addForm.controls.truck_capacity.dirty && addForm.controls.truck_capacity.invalid)" class="alert alert-danger">\n        <p class="error-msg" *ngIf="addForm.controls[\'truck_capacity\'].hasError(\'required\')">\n          Truck Capacity is required.\n        </p>\n      </div>         \n    </div>\n\n    <div class="form-group">\n      <label class=" label">Transporter <span style="color:red">*</span></label>\n      <input\n        class="form-control"\n        ng2-auto-complete\n        autocomplete="off"\n        formControlName="transporter_id"\n        name="transporter_id" \n        [source]="transporterName.bind(this)"\n        list-formatter="transport_name" \n        required\n      /> \n\n      <!-- <select class="form-control drop-down" name="transporter_id" formControlName="transporter_id" required  >\n          <option value="">Select Transporter</option>\n        <option *ngFor="let tn of transporterNames" [ngValue]="tn.value">{{tn.name}}</option>\n      </select>           -->\n      \n    <div *ngIf="submitted || (addForm.controls.transporter_id.dirty && addForm.controls.transporter_id.invalid)" class="alert alert-danger">\n        <p class="error-msg" *ngIf="addForm.controls[\'transporter_id\'].hasError(\'required\')">\n          Transporter name is required.\n        </p>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Driver </label>\n         <!-- <span style="color:red">*</span></label> -->\n      \n      <input\n        class="form-control"\n        ng2-auto-complete\n        formControlName="driver_id"\n        autocomplete="off"\n        name="driver_id" \n        [source]="DriverName.bind(this)"\n        list-formatter="driver_name"         \n      />\n      <button ion-button type="button" (click)="addNewDriver()" expand="block">Add Driver</button>\n\n\n\n      <!-- <select class="form-control drop-down" name="driver_id" formControlName="driver_id" required  >\n        <option value="">Select Truck Type</option>\n        <option *ngFor="let d of driverNames" [ngValue]="d.value">{{d.name}}</option>\n      </select>           -->\n      \n      <!-- <div *ngIf="submitted || (addForm.controls.driver_id.dirty && addForm.controls.driver_id.invalid)" class="alert alert-danger">\n        <p class="error-msg" *ngIf="addForm.controls[\'driver_id\'].hasError(\'required\')">\n          Driver name is required.\n        </p>\n      </div> -->\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Agency name</label> \n      <input class="form-control"\n        ng2-auto-complete\n        formControlName="agency_name"\n        [source] = "agencyName.bind(this)"\n        list-formatter="agency_name"/>\n    </div>\n\n\n    <br><br>\n    <div class="width-full">\n    <label class="fonts-size">Transport (Guarantor)</label>\n    </div>\n    <!-- <div class="form-group">\n    <ion-row>\n      <ion-col class="transportid">\n        <span>Transport Id</span>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col class="transportid col9">\n        <input type="text" placeholder="" formControlName="transport_srno" class="form-control">\n      </ion-col>\n      <ion-col class="col3 fetchbtn">\n        <div>\n          <button ion-button type="button" (click)="fetch()" expand="block">Fetch</button>\n        </div>\n      </ion-col>\n    </ion-row>\n  </div>\n    <div *ngIf="fetchFlag">\n      <ion-card>\n        <ion-card-content>\n          <p class="card-header">\n            <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ transporterDetails.sr_no }} {{ transporterDetails.transport_name  }}</span><br>\n          </p>\n          <div padding>\n\n            <ion-row>\n              <ion-col col-6>\n                <span><b>Owner Name:</b></span>\n              </ion-col>\n              <ion-col col-6>\n                <span class="fright"><b>Contact Person:</b></span>\n              </ion-col>\n    \n              <ion-col col-6>\n                <span>{{ transporterDetails.owner_name  }}</span>\n              </ion-col>\n              <ion-col col-6>\n                <span class="fright">{{ transporterDetails.contact_person }}</span>\n              </ion-col>\n    \n              <ion-col col-6>\n                <span>{{ transporterDetails.omobile_no_1 }}</span>\n              </ion-col>\n              <ion-col col-6>\n                <span class="fright">{{ transporterDetails.cmobile_no_1 }}</span>\n              </ion-col>\n    \n              <ion-col col-12>\n                <b>Address:</b><br>\n                <span *ngFor="let add of transporterDetails.address">\n                  <p>{{add.address_line_1 + \', \' + add.address_line_2 }}</p>\n                  <p>{{ add.city + \' - \' + add.pincode }}</p>\n                  <p>{{ add.state }}</p>\n                </span>\n              </ion-col>\n            </ion-row>\n\n          </div>\n        </ion-card-content>\n      </ion-card>\n    </div> -->\n\n\n    <ion-list radio-group class="radio-size">      \n      <ion-item>\n        <ion-radio value="transporter" (ionSelect)="radioSelect($event)"></ion-radio>\n        <ion-label>Transporter</ion-label>\n      </ion-item>\n  \n      <ion-item>\n        <ion-radio value="agency" (ionSelect)="radioSelect($event)"></ion-radio>\n        <ion-label>Agency</ion-label>\n      </ion-item>\n\n      <ion-item>\n        <ion-radio value="driver" (ionSelect)="radioSelect($event)"></ion-radio>\n        <ion-label>Driver</ion-label>\n      </ion-item>\n    </ion-list>\n\n    <ion-row style="width: 100%;">\n      <!-- 1 -->\n      <ion-col col-4>\n        <label class=" label">Guaranter Name</label>\n      </ion-col>\n\n      <ion-col col-4>\n        <label class=" label">Authorised By</label>\n      </ion-col>\n\n      <ion-col col-4>\n        <label class=" label">Mobile No</label>\n      </ion-col>\n\n\n      <!-- 2 -->\n      <ion-col col-4>\n        <div *ngIf="transporterFlag" class="sub-form-group">\n          <input class="form-control" ng2-auto-complete  autocomplete="off" formControlName="guaranter_name" [source]="transporterName.bind(this)" list-formatter="transport_name" (change)="getDetailsByRadio()" /> \n        </div>\n\n        <div *ngIf="agencyFlag" class="sub-form-group">\n          <input class="form-control" ng2-auto-complete  autocomplete="off" formControlName="guaranter_name" [source] = "agencyName.bind(this)" list-formatter="agency_name" (change)="getDetailsByRadio()" />\n        </div>\n\n        <div *ngIf="driverFlag" class="sub-form-group">\n          <input class="form-control" ng2-auto-complete autocomplete="off" formControlName="guaranter_name" [source]="DriverName.bind(this)" list-formatter="driver_name" (change)="getDetailsByRadio()" />\n        </div>\n      </ion-col>\n\n      <ion-col col-4>\n        <input type="text" formControlName="authorised_by" class="form-control">\n      </ion-col>\n\n      <ion-col col-4>\n        <input type="text" formControlName="mobile_no" class="form-control">\n      </ion-col>\n\n      <!-- 3 -->\n      <ion-col col-4 class="wrapper">\n        <button ion-button type="button" (click)="sendOTP()" expand="block">Send OTP</button>\n      </ion-col>\n\n      <ion-col col-4>\n        <input type="text" placeholder="Enter OTP" formControlName="otp" class="form-control">\n        <div *ngIf="otpFlag">\n          <p class="error-msg">\n            The OTP entered is incorrect.\n          </p>\n        </div>\n      </ion-col>\n\n      <ion-col col-4 class="wrapper">\n        <button ion-button type="button" (click)="checkOTP()" expand="block">Verify</button>\n      </ion-col>\n\n    </ion-row>\n\n\n    <!--<br>\n    <ion-row class="width-full">\n      <ion-col col-6 class="wrapper sendotp">\n        <button ion-button type="button" (click)="sendOTP()" expand="block">Send OTP</button>\n      </ion-col>\n\n      <ion-col col-6 class="manalvarify" >\n        <button ion-button type="button" (click)="manualVerified()" expand="block">Manual Verified</button>\n      </ion-col>\n\n      <ion-col col-6>\n        <input type="text" placeholder="Enter OTP" (change)="checkOTP()" formControlName="otp" class="form-control">\n      </ion-col>\n      <div *ngIf="otpFlag">\n        <p class="error-msg">\n          The OTP entered is incorrect.\n        </p>\n      </div>\n\n      <ion-col col-6>\n          <input type="text" placeholder="" formControlName="transport_srno" class="form-control">\n        </ion-col>\n    </ion-row> -->\n\n    <br>\n    <div class="form-group">\n        <label class=" label">User Name</label>\n        <input type="text" placeholder="" formControlName="user_name" class="form-control">\n      </div>\n\n    <div class="width-full" padding>\n      <button ion-button block size="large" type="submit" expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Truck</button>\n    </div>\n\n\n    </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\admin-privileges-add-truck\admin-privileges-add-truck.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_6__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormBuilder"]])
    ], AdminPrivilegesAddTruckPage);
    return AdminPrivilegesAddTruckPage;
}());

//# sourceMappingURL=admin-privileges-add-truck.js.map

/***/ }),

/***/ 1003:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminPrivilegesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the AdminPrivilegesPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AdminPrivilegesPage = /** @class */ (function () {
    function AdminPrivilegesPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    AdminPrivilegesPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AdminPrivilegesPage');
    };
    AdminPrivilegesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-admin-privileges',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\admin-privileges.html"*/'<!--\n  Generated template for the AdminPrivilegesPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>admin-privileges</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\admin-privileges.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], AdminPrivilegesPage);
    return AdminPrivilegesPage;
}());

//# sourceMappingURL=admin-privileges.js.map

/***/ }),

/***/ 1004:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestLoadPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__helpers_common__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the RequestLoadPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var RequestLoadPage = /** @class */ (function () {
    function RequestLoadPage(navCtrl, navParams, formBuilder, requestLoad, trucks, loader, toast, mapsAPILoader, ngZone, admin) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.formBuilder = formBuilder;
        this.requestLoad = requestLoad;
        this.trucks = trucks;
        this.loader = loader;
        this.toast = toast;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.admin = admin;
        this.toDate = new Date().toISOString();
        this.data = {
            destinations: []
        };
        this.statuses = ['Pending', 'Cancel', 'Deal Final'];
        this.submitted = false;
        this.DestinationsArray = [];
        this.getTo = "";
        this.salesmanList = [];
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].of([]);
            }
        };
        // Search query for Transporter Name list
        this.transporterName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTransporterName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].of([]);
            }
        };
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].of([]);
            }
        };
        this.getSalesmanList();
        this.addForm = this.formBuilder.group({
            date: [this.toDate],
            agency_name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            transporter_name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            truck_no: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            from: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            status: [''],
            // loading_place: [''],
            location_to: [''],
            addMultipleDestinations: this.formBuilder.array([this.createItem()]),
            salesman: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
        });
    }
    Object.defineProperty(RequestLoadPage.prototype, "destinationsData", {
        get: function () { return this.addForm.get('addMultipleDestinations'); },
        enumerable: true,
        configurable: true
    });
    RequestLoadPage.prototype.createItem = function () {
        return this.formBuilder.group({
            to: ['']
            // to: ['', Validators.compose([Validators.required, Validators.minLength(2)])]
        });
    };
    RequestLoadPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__home_home__["a" /* HomePage */]);
    };
    RequestLoadPage.prototype.addTo = function () {
        this.addMultipleDestinations = this.addForm.get('addMultipleDestinations');
        this.addMultipleDestinations.push(this.createItem());
    };
    RequestLoadPage.prototype.removeTo = function (index) {
        if (index === 0) {
            this.toast.error({ 'message': 'Cannot remove this form.' });
        }
        else {
            this.addMultipleDestinations.removeAt(index);
        }
    };
    RequestLoadPage.prototype.addToArray = function () {
        var obj = { "to": this.getTo };
        this.DestinationsArray.push(obj);
        this.addForm.get('location_to').setValue('');
    };
    RequestLoadPage.prototype.removeToArray = function (index) {
        this.DestinationsArray.splice(index, 1);
        console.log("array >>>", this.DestinationsArray);
    };
    RequestLoadPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log('ionViewDidLoad RequestLoadPage', this.toDate);
        setTimeout(function () {
            var toSearch = new google.maps.places.Autocomplete(_this.searchElementRefTo.nativeElement, {
                componentRestrictions: { "country": "IN" },
                types: []
            });
            toSearch.addListener("place_changed", function () {
                _this.ngZone.run(function () {
                    //get the place result
                    var place = toSearch.getPlace();
                    var components = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].extract_components(place);
                    var pre_city = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                    console.log(components, pre_city);
                    document.getElementById('TO').value = pre_city;
                    _this.getTo = pre_city;
                });
            });
            var fromLoction = new google.maps.places.Autocomplete(_this.searchElementRefFrom.nativeElement, {
                componentRestrictions: { "country": "IN" },
                types: []
            });
            fromLoction.addListener("place_changed", function () {
                _this.ngZone.run(function () {
                    //get the place result
                    var place = fromLoction.getPlace();
                    var components = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].extract_components(place);
                    var pre_city = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                    console.log(components, pre_city);
                    document.getElementById('From').value = pre_city;
                    _this.addForm.controls['from'].setValue(pre_city);
                });
            });
        }, 1000);
    };
    RequestLoadPage.prototype.getSalesmanList = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        this.admin.getListByAgency(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.salesmanList.push(element.first_name);
            });
            console.log("salesmanList >>>>", _this.salesmanList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    RequestLoadPage.prototype.onSelectTruck = function () {
        console.log("Select truck >>>");
    };
    RequestLoadPage.prototype.save = function (isValid) {
        var _this = this;
        console.log(" Here >>>>>", this.addForm);
        // console.log(" isValid >>>>>", isValid);
        this.submitted = true;
        if (isValid) {
            // console.log(" If isValid >>>>>");
            var getFromData = this.addForm.value;
            if (getFromData.truck_no.truck_no) {
                // console.log(" If Truck >>>>>");
                var obj = {
                    "date": getFromData.date,
                    "agency_name": getFromData.agency_name.agency_name,
                    "transporter_name": getFromData.transporter_name.transport_name,
                    "truck_no": getFromData.truck_no.truck_no,
                    "from": getFromData.from,
                    // // "loading_place": getFromData.loading_place,
                    // "destinations": getFromData.addMultipleDestinations,
                    "destinations": this.DestinationsArray,
                    "status": getFromData.status,
                    "salesman": getFromData.salesman,
                };
                console.log(" obj >>>>>", obj);
                this.loader.show();
                this.requestLoad.addRequestLoad(obj).subscribe(function (res) {
                    _this.loader.hide();
                    _this.addForm.reset();
                    _this.toast.show({ 'message': 'Added successfully.' });
                    _this.navCtrl.setRoot('ManageRequestLoadPage');
                }, function (err) {
                    _this.loader.hide();
                    _this.toast.error({ 'message': 'Something went wrong.' });
                    console.log(">>>>>Err", err);
                });
            }
            else {
                this.toast.error({ 'message': 'Please Add New Truck OR Select Truck from List.' });
            }
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchTo"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], RequestLoadPage.prototype, "searchElementRefTo", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchFrom"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], RequestLoadPage.prototype, "searchElementRefFrom", void 0);
    RequestLoadPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-request-load',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\request-load\request-load.html"*/'<!--\n  Generated template for the RequestLoadPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add Request Load</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="addForm" (ngSubmit)="save(addForm.valid)" novalidate>\n    <div class="form-group">\n      <label class=" label">Date</label> \n      <ion-item class="form-control">\n        <ion-datetime name="date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="date" required></ion-datetime>\n      </ion-item>\n    </div>\n\n    <!-- <div class="form-group">\n      <div class="input-group">\n        <input class="form-control" placeholder="yyyy-mm-dd"\n                name="dp" [(ngModel)]="model" ngbDatepicker #d="ngbDatepicker">\n        <div class="input-group-append">\n          <button class="btn btn-outline-secondary calendar" (click)="d.toggle()" type="button"></button>\n        </div>\n      </div>\n    </div> -->\n  \n    <div class="form-group">\n      <label class=" label">Agency name <span style="color:red">*</span> </label> \n      <!-- <input name="agency_name" type="text" placeholder="" formControlName="agency_name" class="form-control" required />  -->\n      <input class="form-control"\n      ng2-auto-complete\n      formControlName="agency_name"\n      [source]="agencyName.bind(this)"\n      list-formatter="agency_name" /> \n    </div>\n    <div class="error-msg" *ngIf="submitted || (addForm.controls.agency_name.invalid && (addForm.controls.agency_name.dirty || addForm.controls.agency_name.touched))">\n      <div *ngIf="addForm.controls[\'agency_name\'].hasError(\'required\')">\n        <label>Agency name is required.</label>\n      </div>\n      <div *ngIf="addForm.controls[\'agency_name\'].hasError(\'minlength\')">\n        <label>Minimum length is upto 2 letters.</label>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Transporter name <span style="color:red">*</span> </label> \n      <!-- <input name="transporter_name" type="text" placeholder="" formControlName="transporter_name" class="form-control" required />  -->\n      <input class="form-control"\n      ng2-auto-complete\n      formControlName="transporter_name"\n      [source]="transporterName.bind(this)"\n      list-formatter="transport_name" /> \n    </div>\n    <div class="error-msg" *ngIf="submitted || (addForm.controls.transporter_name.invalid && (addForm.controls.transporter_name.dirty || addForm.controls.transporter_name.touched))">\n      <div *ngIf="addForm.controls[\'transporter_name\'].hasError(\'required\')">\n        <label>Transporter name is required.</label>\n      </div>\n      <div *ngIf="addForm.controls[\'transporter_name\'].hasError(\'minlength\')">\n        <label>Minimum length is upto 2 letters.</label>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Truck No <span style="color:red">*</span> </label>                 \n      <input class="form-control"\n      ng2-auto-complete\n      formControlName="truck_no"\n      [source]="truckNo.bind(this)"\n      list-formatter="truck_no"\n      (select)="onSelectTruck()" /> \n    </div>\n    <div class="error-msg" *ngIf="submitted || (addForm.controls.truck_no.invalid && (addForm.controls.truck_no.dirty || addForm.controls.truck_no.touched))">\n      <div *ngIf="addForm.controls[\'truck_no\'].hasError(\'required\')">\n        <label>Truck number is required.</label>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">From <span style="color:red">*</span> </label> \n      <input name="from" id="From" type="text" formControlName="from" class="form-control" #searchFrom required  /> \n    </div>\n    <div class="error-msg" *ngIf="submitted || (addForm.controls.from.invalid && (addForm.controls.from.dirty || addForm.controls.from.touched))">\n      <div *ngIf="addForm.controls[\'from\'].hasError(\'required\')">\n        <label>From is required.</label>\n      </div>\n    </div>\n\n    \n    <!-- <div class="form-group">\n      <label class=" label">Loading Place </label> \n      <input name="loading_place" type="text" formControlName="loading_place" class="form-control" required /> \n    </div> -->\n\n    <!-- <div formArrayName="addMultipleDestinations" class="form-group">            \n      <div *ngFor="let d of destinationsData.controls; let i = index" [formGroup]="d">\n        <ion-grid>\n          <ion-row>\n            <ion-col>\n              <label class=" label mg-top-13">Destination {{ i + 1}}  <span style="color:red">*</span></label>\n            </ion-col>\n            <ion-col>\n              <ion-row right>\n                <ion-col text-right>\n                  <button class="btn-size" ion-button type="button" color="secondary" (click)="addTo()"><ion-icon name="add"></ion-icon></button>\n                  <button class="btn-size" ion-button type="button" color="danger" (click)="removeTo(i)"><ion-icon name="close"></ion-icon></button>\n                </ion-col>\n              </ion-row>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n        <input type="text" formControlName="to" class="form-control" required />\n        <div class="error-msg" *ngIf="submitted || (d.controls.to.invalid && (d.controls.to.dirty || d.controls.to.touched))">\n          <div *ngIf="d.controls[\'to\'].hasError(\'required\')">\n            <label>To is required.</label>\n          </div>\n          <div *ngIf="d.controls[\'to\'].hasError(\'minlength\')">\n            <label>Minimum length is upto 2 letters.</label>\n          </div>\n        </div>\n      </div>\n    </div> -->\n\n\n    <hr>\n    <div class="form-group">\n      <button ion-button (click)="addToArray()" type="button" class="add-al">Add</button>\n      <label class=" label mg-top-13">Location <span style="color:red">*</span></label> \n      <input type="text" id="TO" formControlName="location_to" class="form-control" #searchTo />\n    \n      <div *ngFor="let d of DestinationsArray; let i = index" class="btmmargin">\n        <ion-row>\n          <ion-col class="col-pad">\n            {{ d.to }}\n          </ion-col>\n        \n          <ion-col>\n              <button class="btn-size" (click)="removeToArray(i)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button>\n          </ion-col>\n        </ion-row>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Status <span style="color:red">*</span></label>\n      <select class="form-control drop-down" name="status" formControlName="status" required  >\n        <option value="">Select Status</option>\n        <option *ngFor="let st of statuses" [ngValue]="st">{{st}}</option>\n      </select>\n    </div>\n    <div class="error-msg" *ngIf="submitted || (addForm.controls.status.invalid && (addForm.controls.status.dirty || addForm.controls.status.touched))">\n      <div *ngIf="addForm.controls[\'status\'].hasError(\'required\')">\n        <label>Status is required.</label>\n      </div>\n    </div>\n\n    <!-- <div class="form-group">\n      <label class=" label mg-top-13">Salesman </label> \n      <input type="text" formControlName="salesman" class="form-control" />\n    </div> -->\n\n    <div class="form-group">\n      <label class=" label">Salesman <span style="color:red">*</span></label>\n      <select class="form-control drop-down" name="salesman" formControlName="salesman" >\n        <option value="">Select Salesman</option>\n        <option *ngFor="let sml of salesmanList" [ngValue]="sml">{{sml}}</option>\n      </select>\n    </div>\n    <div class="error-msg" *ngIf="submitted || (addForm.controls.salesman.invalid && (addForm.controls.salesman.dirty || addForm.controls.salesman.touched))">\n      <div *ngIf="addForm.controls[\'salesman\'].hasError(\'required\')">\n        <label>Salesman is required.</label>\n      </div>\n    </div>\n    \n    <div padding class="button-submit width-full">\n      <button ion-button block size="large" type="submit" expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Request Load</button>\n    </div>\n    \n\n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\request-load\request-load.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_8__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_10__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"],
            __WEBPACK_IMPORTED_MODULE_12__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], RequestLoadPage);
    return RequestLoadPage;
}());

//# sourceMappingURL=request-load.js.map

/***/ }),

/***/ 1005:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CallBookingRequestLoadPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the CallBookingRequestLoadPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var CallBookingRequestLoadPage = /** @class */ (function () {
    function CallBookingRequestLoadPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    CallBookingRequestLoadPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad CallBookingRequestLoadPage');
    };
    CallBookingRequestLoadPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-call-booking-request-load',template:/*ion-inline-start:"D:\truck\src\pages\call-booking-request-load\call-booking-request-load.html"*/'<!--\n  Generated template for the CallBookingRequestLoadPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>call-booking-request-load</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\call-booking-request-load\call-booking-request-load.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], CallBookingRequestLoadPage);
    return CallBookingRequestLoadPage;
}());

//# sourceMappingURL=call-booking-request-load.js.map

/***/ }),

/***/ 1006:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DealFinalDashboardPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/**
 * Generated class for the DealFinalDashboardPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DealFinalDashboardPage = /** @class */ (function () {
    function DealFinalDashboardPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
    }
    DealFinalDashboardPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DealFinalDashboardPage');
    };
    DealFinalDashboardPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-deal-final-dashboard',template:/*ion-inline-start:"D:\truck\src\pages\deal-final-dashboard\deal-final-dashboard.html"*/'<!--\n  Generated template for the DealFinalDashboardPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>deal-final-dashboard</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\deal-final-dashboard\deal-final-dashboard.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], DealFinalDashboardPage);
    return DealFinalDashboardPage;
}());

//# sourceMappingURL=deal-final-dashboard.js.map

/***/ }),

/***/ 1024:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MyApp; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ionic_native_status_bar__ = __webpack_require__(605);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__ = __webpack_require__(608);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_auth_login_auth_login__ = __webpack_require__(527);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__pages_manage_transport_manage_transport__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__pages_manage_company_list_manage_company_list__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__pages_manage_driver_manage_driver__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__pages_manage_truck_list_manage_truck_list__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pages_manage_request_load_manage_request_load__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__pages_manage_agencies_manage_agencies__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__pages_manage_user_manage_user__ = __webpack_require__(196);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__pages_manage_employees_manage_employees__ = __webpack_require__(197);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__pages_manage_post_load_manage_post_load__ = __webpack_require__(91);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};















var MyApp = /** @class */ (function () {
    function MyApp(platform, statusBar, splashScreen, menuCtrl) {
        this.platform = platform;
        this.statusBar = statusBar;
        this.splashScreen = splashScreen;
        this.menuCtrl = menuCtrl;
        this.rootPage = localStorage.getItem('login') ? __WEBPACK_IMPORTED_MODULE_4__pages_home_home__["a" /* HomePage */] : __WEBPACK_IMPORTED_MODULE_5__pages_auth_login_auth_login__["a" /* AuthLoginPage */];
        this.initializeApp();
        // used for an example of ngFor and navigation
        this.pages = [
            { title: 'Dashboard', component: __WEBPACK_IMPORTED_MODULE_4__pages_home_home__["a" /* HomePage */] },
            { title: 'Post Load', sub_pages: [
                    { title: 'Post Load', component: __WEBPACK_IMPORTED_MODULE_14__pages_manage_post_load_manage_post_load__["a" /* ManagePostLoadPage */] },
                    { title: 'Trucks Availability' }
                ]
            },
            { title: 'Loads', sub_pages: [
                    { title: 'Request Load', component: __WEBPACK_IMPORTED_MODULE_10__pages_manage_request_load_manage_request_load__["a" /* ManageRequestLoadPage */] },
                    { title: 'Loads Availability' }
                ]
            },
            { title: 'Accounts', sub_pages: [
                    { title: 'Ledger' },
                    { title: 'POD' }
                ]
            },
            { title: 'Marketing', sub_pages: [
                    { title: 'Add Company', component: __WEBPACK_IMPORTED_MODULE_7__pages_manage_company_list_manage_company_list__["a" /* ManageCompanyListPage */] },
                    { title: 'Add Transporter', component: __WEBPACK_IMPORTED_MODULE_6__pages_manage_transport_manage_transport__["a" /* ManageTransportPage */] },
                    { title: 'Add Employee', component: __WEBPACK_IMPORTED_MODULE_13__pages_manage_employees_manage_employees__["a" /* ManageEmployeesPage */] },
                    { title: 'Post Driver Vacancy' },
                    { title: 'Employee Target' },
                    { title: 'Mkt.Reports' },
                    { title: 'Employee Performance' },
                    { title: 'Employee Tracking' },
                    { title: 'State Wise Business' },
                    { title: 'Inventory' }
                ]
            },
            { title: 'Company Bidding' },
            { title: 'Truck Bidding' },
            { title: 'Fin.Reports', sub_pages: [
                    { title: 'Rate of Return' },
                    { title: 'Yield' }
                ]
            },
            { title: 'Fleet Management', sub_pages: [
                    { title: 'Add Trucks', component: __WEBPACK_IMPORTED_MODULE_9__pages_manage_truck_list_manage_truck_list__["a" /* ManageTruckListPage */] },
                    { title: 'Add Drivers', component: __WEBPACK_IMPORTED_MODULE_8__pages_manage_driver_manage_driver__["a" /* ManageDriverPage */] },
                    { title: 'Attach Document' },
                    { title: 'Document Expiry / Reminder' },
                    { title: 'Truck Verification' },
                    { title: 'Drivers Availability' }
                ]
            },
            { title: 'Admin Priviliges', sub_pages: [
                    { title: 'Add Agencies', component: __WEBPACK_IMPORTED_MODULE_11__pages_manage_agencies_manage_agencies__["a" /* ManageAgenciesPage */] },
                    { title: 'Digital Marketing' },
                    { title: 'Vision Target' },
                    { title: 'Fastag' },
                    { title: 'User Creation', component: __WEBPACK_IMPORTED_MODULE_12__pages_manage_user_manage_user__["a" /* ManageUserPage */] }
                ]
            },
            { title: 'Driver App' },
            { title: 'Deal Final' },
            { title: 'Log Out', component: __WEBPACK_IMPORTED_MODULE_5__pages_auth_login_auth_login__["a" /* AuthLoginPage */] }
            // component: ManageTransportPage 
            // { title: 'Call Booking', component: CallBookingRequestLoadPage },
            // { title: 'Admin Privileges', sub_pages: [
            //     { title: 'Manage Request Load', component: ManageRequestLoadPage },
            //     { title: 'Manage Transporters', component: ManageTransportPage },
            //     { title: 'Manage Companies', component: ManageCompanyListPage },
            //     { title: 'Manage Drivers', component: ManageDriverPage },
            //     { title: 'Manage Trucks', component: ManageTruckListPage },
            //     { title: 'Manage Agencies', component: ManageAgenciesPage }
            //   ]
            // },
            // // Post Load, Load Request, Transporter, Agencies, Drivers, Employee, Documents, Users
            // { title: 'Load Request', component: ManageRequestLoadPage  },
            // { title: 'Transporter', component: ManageTransportPage },
            // { title: 'Agencies', component: ManageAgenciesPage },
            // { title: 'Drivers', component: ManageDriverPage },
            // { title: 'Employee', component: ManageEmployeesPage },
            // { title: 'Documents' },
            // { title: 'Users', component: ManageUserPage },
            // { title: 'Login', component: AuthLoginPage },
        ];
    }
    MyApp.prototype.initializeApp = function () {
        var _this = this;
        this.platform.ready().then(function () {
            // Okay, so the platform is ready and our plugins are available.
            // Here you can do any higher level native things you might need.
            _this.statusBar.styleDefault();
            _this.splashScreen.hide();
        });
    };
    MyApp.prototype.openPage = function (page, index) {
        if (page.component) {
            // Reset the content nav to have just this page
            // we wouldn't want the back button to show in this scenario
            this.nav.setRoot(page.component);
            this.menuCtrl.close();
        }
        else {
            if (this.selectedMenu) {
                this.selectedMenu = undefined;
            }
            else {
                this.selectedMenu = index;
            }
        }
    };
    MyApp.prototype.openSubPage = function (page) {
        this.nav.push(page.component);
        this.menuCtrl.close();
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Nav */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["l" /* Nav */])
    ], MyApp.prototype, "nav", void 0);
    MyApp = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({template:/*ion-inline-start:"D:\truck\src\app\app.html"*/'<ion-menu [content]="content">\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>Menu</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-content>\n    <ion-item ion-item *ngFor="let p of pages;  let i=index" (click)="openPage(p, i);">\n      <ion-row>\n        <!-- Parent Pages  -->\n        <ion-col col-9 class="menu-name">\n          <span ion-text>\n            {{p.title}}\n            <ion-icon [name]="selectedMenu == i? \'arrow-down\' : \'arrow-forward\'" *ngIf="p.sub_pages" float-right></ion-icon>\n          </span>\n\n          <!-- Child Pages  -->\n          <ion-list no-lines [hidden]="selectedMenu != i">\n              <br>\n              <ion-row *ngFor="let subPage of p.sub_pages;let i2=index" text-wrap (click)="openSubPage(subPage)">\n                <ion-col col-10 class="menu-name"><span ion-text color="color2">&nbsp;{{subPage.title}}</span></ion-col>\n              </ion-row>\n          </ion-list>\n        </ion-col>\n      </ion-row>\n    </ion-item>\n\n  </ion-content>\n\n</ion-menu>\n\n<!-- Disable swipe-to-go-back because it\'s poor UX to combine STGB with side menus -->\n<ion-nav [root]="rootPage" #content swipeBackEnabled="false"></ion-nav>'/*ion-inline-end:"D:\truck\src\app\app.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* Platform */],
            __WEBPACK_IMPORTED_MODULE_2__ionic_native_status_bar__["a" /* StatusBar */],
            __WEBPACK_IMPORTED_MODULE_3__ionic_native_splash_screen__["a" /* SplashScreen */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* MenuController */]])
    ], MyApp);
    return MyApp;
}());

//# sourceMappingURL=app.component.js.map

/***/ }),

/***/ 1032:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ListPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ListPage = /** @class */ (function () {
    function ListPage(navCtrl, navParams) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        // If we navigated to this page, we will have an item available as a nav param
        this.selectedItem = navParams.get('item');
        // Let's populate this page with some filler content for funzies
        this.icons = ['flask', 'wifi', 'beer', 'football', 'basketball', 'paper-plane',
            'american-football', 'boat', 'bluetooth', 'build'];
        this.items = [];
        for (var i = 1; i < 11; i++) {
            this.items.push({
                title: 'Item ' + i,
                note: 'This is item #' + i,
                icon: this.icons[Math.floor(Math.random() * this.icons.length)]
            });
        }
    }
    ListPage_1 = ListPage;
    ListPage.prototype.itemTapped = function (event, item) {
        // That's right, we're pushing to ourselves!
        this.navCtrl.push(ListPage_1, {
            item: item
        });
    };
    ListPage = ListPage_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-list',template:/*ion-inline-start:"D:\truck\src\pages\list\list.html"*/'<ion-header>\n  <ion-navbar>\n    <button ion-button menuToggle>\n      <ion-icon name="menu"></ion-icon>\n    </button>\n    <ion-title>List</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content>\n  <ion-list>\n    <button ion-item *ngFor="let item of items" (click)="itemTapped($event, item)">\n      <ion-icon [name]="item.icon" item-start></ion-icon>\n      {{item.title}}\n      <div class="item-note" item-end>\n        {{item.note}}\n      </div>\n    </button>\n  </ion-list>\n  <div *ngIf="selectedItem" padding>\n    You navigated here from <b>{{selectedItem.title}}</b>\n  </div>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\list\list.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */]])
    ], ListPage);
    return ListPage;
    var ListPage_1;
}());

//# sourceMappingURL=list.js.map

/***/ }),

/***/ 109:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageDealFinalNewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__add_deal_final_new_add_deal_final_new__ = __webpack_require__(189);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__edit_deal_final_new_edit_deal_final_new__ = __webpack_require__(456);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__traffic_operations_traffic_operations__ = __webpack_require__(193);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};









/**
 * Generated class for the ManageDealFinalNewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageDealFinalNewPage = /** @class */ (function () {
    function ManageDealFinalNewPage(navCtrl, navParams, requestLoad, actionSheetController, admin, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.dataList = [];
        this.getDealFinalList();
    }
    ManageDealFinalNewPage_1 = ManageDealFinalNewPage;
    ManageDealFinalNewPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManageDealFinalNewPage');
    };
    ManageDealFinalNewPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */]);
    };
    ManageDealFinalNewPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add Deal Final',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__add_deal_final_new_add_deal_final_new__["a" /* AddDealFinalNewPage */]);
                return [2 /*return*/];
            });
        });
    };
    ManageDealFinalNewPage.prototype.presentActionSheet = function (data, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit Deal Final',
                                        icon: 'ios-create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__edit_deal_final_new_edit_deal_final_new__["a" /* EditDealFinalNewPage */], { "data": data });
                                        }
                                    }, {
                                        text: 'Traffic Operation',
                                        icon: 'ios-clipboard',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__traffic_operations_traffic_operations__["a" /* TrafficOperationsPage */], { "data": data });
                                        }
                                    }, {
                                        text: 'Remove',
                                        icon: 'ios-trash',
                                        handler: function () {
                                            _this.deleteApi(data);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageDealFinalNewPage.prototype.getDealFinalList = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getDealFinalNewListSorted().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.dataList = data.results;
            console.log('Data >>>>>>>', _this.dataList);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    ManageDealFinalNewPage.prototype.deleteApi = function (id) {
        var _this = this;
        console.log("Data  >>>", id);
        var load_id = id._id;
        console.log("id  >>>", load_id);
        this.getPostLoadById(id.company_ticket_no);
        this.getRequestLoadById(id.transporter_ticket_no);
        this.loader.show();
        // // ------>> Update Post Load 
        // var postLoadObj = {"status": "Pending"};
        // this.requestLoad.updatePostLoadStatus(id.company_ticket_no, postLoadObj).subscribe(res => {
        //   console.log("Updated Post Load>>>>>");
        // }, err => {
        //   console.log(">>>>>Err", err);
        // });
        // // ------>> Update Request Load 
        // var requestLoadObj = {"status": "Pending"};
        // this.requestLoad.updateRequestLoadStatus(id.transporter_ticket_no, requestLoadObj).subscribe(res => {
        //   console.log("Updated Request Load>>>>>");
        // }, err => {
        //   console.log(">>>>>Err", err);
        // });
        // Delete Deal Final Record
        this.requestLoad.deleteDealFinalNew(load_id).subscribe(function (res) {
            // Delete Accounts Ledger Records
            var document_type = "DF";
            _this.requestLoad.deleteAccountsLedger(id.deal_no, document_type).subscribe(function (res) {
                // Delete Rewards Ledger Records
                _this.requestLoad.deleteRewardsLedger(id.deal_no).subscribe(function (res) {
                    _this.loader.hide();
                    _this.navCtrl.push(ManageDealFinalNewPage_1);
                }, function (err) {
                    _this.loader.hide();
                    console.log("error");
                });
            }, function (err) {
                _this.loader.hide();
                console.log("error");
            });
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageDealFinalNewPage.prototype.getRequestLoadById = function (ticket_no) {
        var _this = this;
        // this.loader.show();
        this.requestLoad.getRequestLoadIdByTicketNo(ticket_no).subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                var requestLoadID = dataList[0]._id;
                console.log("requestLoadID >>>>", requestLoadID);
                var requestLoadObj = { "status": "Pending" };
                _this.requestLoad.updateRequestLoadStatus(requestLoadID, requestLoadObj).subscribe(function (res) {
                    console.log("Updated Request Load>>>>>");
                }, function (err) {
                    console.log(">>>>>Err", err);
                    // this.toast.error({ 'message': 'Something went wrong.' });
                });
            }
        }, function (err) {
            // this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    ManageDealFinalNewPage.prototype.getPostLoadById = function (ticket_no) {
        var _this = this;
        // this.loader.show();
        this.requestLoad.getPostLoadIdByTicketNo(ticket_no).subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                var postLoadID = dataList[0]._id;
                console.log("postLoadID >>>>", postLoadID);
                var postLoadObj = { "status": "Pending" };
                _this.requestLoad.updatePostLoadStatus(postLoadID, postLoadObj).subscribe(function (res) {
                    console.log("Updated Post Load>>>>>");
                }, function (err) {
                    console.log(">>>>>Err", err);
                    // this.toast.error({ 'message': 'Something went wrong.' });
                });
            }
        }, function (err) {
            // this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    ManageDealFinalNewPage = ManageDealFinalNewPage_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-deal-final-new',template:/*ion-inline-start:"D:\truck\src\pages\manage-deal-final-new\manage-deal-final-new.html"*/'<!--\n  Generated template for the ManageDealFinalNewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>Deal Final</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <ion-card *ngFor="let rl of dataList">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(rl, $event)"></ion-icon>\n    <!-- <ion-card-content (click)="edit(rl)"> -->\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ rl.deal_no}} {{ rl.agency_name }}</span><br>\n      </p>\n      <div padding>\n        <p>\n          <span>From: {{ rl.from }}</span>\n          <span class="fright">Loading Place: {{ rl.loading_place }}</span>\n        </p>\n\n        <p>\n          <span>To: {{ rl.to }}</span>\n          <span class="fright">Unloading Place: {{ rl.unloading_place }}</span>\n        </p>\n\n        <!-- <p>\n          <span>Truck Type: {{ rl.truck_type }}</span>\n          <span class="fright">Truck Capacity: {{ rl.truck_capacity }}</span>\n        </p> -->\n\n        <p>\n          <span>Post Load Ticket No: {{ rl.company_ticket_no }}</span>\n          <span class="fright">Request Load Ticket No: {{ rl.transporter_ticket_no }}</span>\n        </p>\n        \n\n      \n        <!-- <br>\n        <p><span>Preferred Location - {{ rl.destArray.toString() }}</span></p> -->\n\n        </div>\n    </ion-card-content>\n  </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-deal-final-new\manage-deal-final-new.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_2__providers_loader__["a" /* LoaderProvider */]])
    ], ManageDealFinalNewPage);
    return ManageDealFinalNewPage;
    var ManageDealFinalNewPage_1;
}());

//# sourceMappingURL=manage-deal-final-new.js.map

/***/ }),

/***/ 11:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ToastProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(2);
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ToastProvider = /** @class */ (function () {
    function ToastProvider(toast) {
        this.toast = toast;
        this.tOptions = {
            duration: 2000,
            position: 'top',
        };
    }
    ToastProvider.prototype.error = function (options) {
        this.tOptions.cssClass = 'error';
        var mergedOptions = __assign({}, this.tOptions, options);
        this.toast.create(mergedOptions).present();
    };
    ToastProvider.prototype.show = function (options) {
        var mergedOptions = __assign({}, this.tOptions, options);
        this.toast.create(mergedOptions).present();
    };
    ToastProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["p" /* ToastController */]])
    ], ToastProvider);
    return ToastProvider;
}());

//# sourceMappingURL=toast.js.map

/***/ }),

/***/ 110:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageDealFinalPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__deal_final_deal_final__ = __webpack_require__(195);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__edit_deal_final_edit_deal_final__ = __webpack_require__(457);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








/**
 * Generated class for the ManageDealFinalPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageDealFinalPage = /** @class */ (function () {
    function ManageDealFinalPage(navCtrl, navParams, requestLoad, actionSheetController, admin, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.dataList = [];
        this.getDealFinalList();
    }
    ManageDealFinalPage_1 = ManageDealFinalPage;
    ManageDealFinalPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManageDealFinalPage');
    };
    ManageDealFinalPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */]);
    };
    ManageDealFinalPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add Deal Final',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__deal_final_deal_final__["a" /* DealFinalPage */]);
                return [2 /*return*/];
            });
        });
    };
    ManageDealFinalPage.prototype.presentActionSheet = function (data, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit Deal Final',
                                        icon: 'ios-create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__edit_deal_final_edit_deal_final__["a" /* EditDealFinalPage */], { "data": data });
                                        }
                                    }, {
                                        text: 'Remove',
                                        icon: 'ios-trash',
                                        handler: function () {
                                            _this.deleteApi(data);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageDealFinalPage.prototype.getDealFinalList = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getDealList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.dataList = data.results;
            console.log('Data >>>>>>>', _this.dataList);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    ManageDealFinalPage.prototype.deleteApi = function (id) {
        var _this = this;
        console.log("Data  >>>", id);
        var load_id = id._id;
        console.log("id  >>>", load_id);
        this.getPostLoadById(id.company_ticket_no);
        this.getRequestLoadById(id.transporter_ticket_no);
        this.loader.show();
        // Delete Deal Final Record
        this.requestLoad.deleteDealFinal(load_id).subscribe(function (res) {
            var document_type = "DF";
            // Delete Accounts Ledger Records
            _this.requestLoad.deleteAccountsLedger(id.sr_no, document_type).subscribe(function (res) {
                // Delete Rewards Ledger Records
                _this.requestLoad.deleteRewardsLedger(id.sr_no).subscribe(function (res) {
                    _this.loader.hide();
                    _this.navCtrl.push(ManageDealFinalPage_1);
                }, function (err) {
                    _this.loader.hide();
                    console.log("error");
                });
            }, function (err) {
                _this.loader.hide();
                console.log("error");
            });
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageDealFinalPage.prototype.getRequestLoadById = function (ticket_no) {
        var _this = this;
        // this.loader.show();
        this.requestLoad.getRequestLoadIdByTicketNo(ticket_no).subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                var requestLoadID = dataList[0]._id;
                console.log("requestLoadID >>>>", requestLoadID);
                var requestLoadObj = { "status": "Pending" };
                _this.requestLoad.updateRequestLoadStatus(requestLoadID, requestLoadObj).subscribe(function (res) {
                    console.log("Updated Request Load>>>>>");
                }, function (err) {
                    console.log(">>>>>Err", err);
                    // this.toast.error({ 'message': 'Something went wrong.' });
                });
            }
        }, function (err) {
            // this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    ManageDealFinalPage.prototype.getPostLoadById = function (ticket_no) {
        var _this = this;
        // this.loader.show();
        this.requestLoad.getPostLoadIdByTicketNo(ticket_no).subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                var postLoadID = dataList[0]._id;
                console.log("postLoadID >>>>", postLoadID);
                var postLoadObj = { "status": "Pending" };
                _this.requestLoad.updatePostLoadStatus(postLoadID, postLoadObj).subscribe(function (res) {
                    console.log("Updated Post Load>>>>>");
                }, function (err) {
                    console.log(">>>>>Err", err);
                    // this.toast.error({ 'message': 'Something went wrong.' });
                });
            }
        }, function (err) {
            // this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    ManageDealFinalPage = ManageDealFinalPage_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-deal-final',template:/*ion-inline-start:"D:\truck\src\pages\manage-deal-final\manage-deal-final.html"*/'<!--\n  Generated template for the ManageDealFinalPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Deal Final</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <ion-card *ngFor="let rl of dataList">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(rl, $event)"></ion-icon>\n    <!-- <ion-card-content (click)="edit(rl)"> -->\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ rl.sr_no}} {{ rl.agency_name }}</span><br>\n      </p>\n      <div padding>\n        <p>\n          <span>From: {{ rl.from }}</span>\n          <span class="fright">Loading Place: {{ rl.loading_place }}</span>\n        </p>\n\n        <p>\n          <span>To: {{ rl.to }}</span>\n          <span class="fright">Unloading Place: {{ rl.unloading_place }}</span>\n        </p>\n\n        <p>\n          <span>Load Type: {{ rl.load_type }}</span>\n          <span class="fright">Status: {{ rl.status }}</span>\n        </p>\n        \n\n      \n        <!-- <br>\n        <p><span>Preferred Location - {{ rl.destArray.toString() }}</span></p> -->\n\n        </div>\n    </ion-card-content>\n  </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-deal-final\manage-deal-final.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_2__providers_loader__["a" /* LoaderProvider */]])
    ], ManageDealFinalPage);
    return ManageDealFinalPage;
    var ManageDealFinalPage_1;
}());

//# sourceMappingURL=manage-deal-final.js.map

/***/ }),

/***/ 111:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageAccountsMasterPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__add_account_master_add_account_master__ = __webpack_require__(475);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__edit_account_master_edit_account_master__ = __webpack_require__(476);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








/**
 * Generated class for the ManageAccountsMasterPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageAccountsMasterPage = /** @class */ (function () {
    function ManageAccountsMasterPage(navCtrl, navParams, requestLoad, actionSheetController, admin, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.dataList = [];
        this.getAccountsMasterList();
    }
    ManageAccountsMasterPage_1 = ManageAccountsMasterPage;
    ManageAccountsMasterPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManageAccountsMasterPage');
    };
    ManageAccountsMasterPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    ManageAccountsMasterPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Action',
                //   buttons: [{
                //     text: 'Add',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__add_account_master_add_account_master__["a" /* AddAccountMasterPage */]);
                return [2 /*return*/];
            });
        });
    };
    ManageAccountsMasterPage.prototype.presentActionSheet = function (data, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit',
                                        icon: 'ios-create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__edit_account_master_edit_account_master__["a" /* EditAccountMasterPage */], { "data": data });
                                        }
                                    }, {
                                        text: 'Remove',
                                        icon: 'ios-trash',
                                        handler: function () {
                                            _this.deleteApi(data);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageAccountsMasterPage.prototype.deleteApi = function (id) {
        var _this = this;
        var account_id = id._id;
        console.log("id  >>>", account_id);
        this.loader.show();
        this.admin.deleteAccountsMaster(account_id).subscribe(function (res) {
            _this.loader.hide();
            _this.navCtrl.push(ManageAccountsMasterPage_1);
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageAccountsMasterPage.prototype.getAccountsMasterList = function () {
        var _this = this;
        this.loader.show();
        this.admin.getAccountsMasterList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.dataList = data.results;
            console.log('Data >>>>>>>', _this.dataList);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    ManageAccountsMasterPage = ManageAccountsMasterPage_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-accounts-master',template:/*ion-inline-start:"D:\truck\src\pages\manage-accounts-master\manage-accounts-master.html"*/'<!--\n  Generated template for the ManageAccountsMasterPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Accounts Master</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n    <ion-card *ngFor="let rl of dataList">\n      <ion-icon name="more" class="more fright" (click)="presentActionSheet(rl, $event)"></ion-icon>\n      <!-- <ion-card-content (click)="edit(rl)"> -->\n      <ion-card-content>\n        <p class="card-header">\n          <span class="sr-no"><ion-icon name="cube"></ion-icon> {{ rl.account_name }}</span><br>\n        </p>\n        <div padding>\n          \n          <p>\n            <span>Account Type: {{ rl.accounts_type }}</span>\n          </p>\n          <p>\n            <span>Category: {{ rl.category }}</span>\n          </p>\n          <p>\n            <span>Group: {{ rl.group }}</span>\n          </p>\n\n          <p>\n            <span>Contact Person: {{ rl.contact_person }}</span>\n          </p>          \n          <p>\n            <span>Mobile 1: {{ rl.mobile_1 }}</span>\n          </p>\n          <p>\n            <span>Mobile 2: {{ rl.mobile_2 }}</span>\n          </p>\n\n        </div>\n      </ion-card-content>\n    </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-accounts-master\manage-accounts-master.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_5__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */]])
    ], ManageAccountsMasterPage);
    return ManageAccountsMasterPage;
    var ManageAccountsMasterPage_1;
}());

//# sourceMappingURL=manage-accounts-master.js.map

/***/ }),

/***/ 112:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageRewardsRedemptionPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__add_rewards_redemption_manage_rewards__ = __webpack_require__(480);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__edit_rewards_redemption_edit_rewards_redemption__ = __webpack_require__(481);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};









/**
 * Generated class for the ManageRewardsRedemptionPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageRewardsRedemptionPage = /** @class */ (function () {
    function ManageRewardsRedemptionPage(navCtrl, navParams, requestLoad, actionSheetController, loader, toast, admin) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.toast = toast;
        this.admin = admin;
        this.rewardsRedemptionList = [];
        this.getRewardsRedemption();
    }
    ManageRewardsRedemptionPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManageRewardsRedemptionPage');
    };
    ManageRewardsRedemptionPage.prototype.getRewardsRedemption = function () {
        var _this = this;
        this.loader.show();
        this.admin.getRewardsRedemptionList().subscribe(function (res) {
            console.log('>>>>Hello res', res);
            var data = res.json();
            _this.loader.hide();
            _this.rewardsRedemptionList = data.results;
        }, function (err) {
            console.log('>>>>Hello err', err);
        });
    };
    ManageRewardsRedemptionPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */]);
    };
    ManageRewardsRedemptionPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Action',
                //   buttons: [{
                //     text: 'Add',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__add_rewards_redemption_manage_rewards__["a" /* ManageRewardsPage */]);
                return [2 /*return*/];
            });
        });
    };
    ManageRewardsRedemptionPage.prototype.presentActionSheet = function (redemption, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__edit_rewards_redemption_edit_rewards_redemption__["a" /* EditRewardsRedemptionPage */], { data: redemption });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deletePaymentType(redemption);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageRewardsRedemptionPage.prototype.deletePaymentType = function (redemption) {
        var _this = this;
        var conf = confirm('Are you sure you want to delete This ?');
        if (conf) {
            this.loader.show();
            var document_type = "RRedm";
            // Delete Accounts Ledger Records
            this.requestLoad.deleteAccountsLedger(redemption.trno, document_type).subscribe(function (res) {
                // Delete Rewards Ledger
                _this.requestLoad.deleteRewardsLedger(redemption.trno).subscribe(function (res) {
                    // Delete Rewards Redemption
                    _this.admin.deleteRewardsRedemption(redemption._id).subscribe(function (res) {
                        _this.loader.hide();
                        _this.toast.show({ 'message': 'Deleted Successfully.' });
                        _this.getRewardsRedemption();
                    }, function (err) {
                        _this.loader.hide();
                        console.log("error");
                    });
                }, function (err) {
                    _this.loader.hide();
                    console.log("error");
                });
            }, function (err) {
                _this.loader.hide();
                console.log("error");
            });
        }
    };
    ManageRewardsRedemptionPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-rewards-redemption',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-rewards-redemption\manage-rewards-redemption.html"*/'<!--\n  Generated template for the ManageRewardsRedemptionPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <!-- <ion-title>manage-rewards-redemption</ion-title> -->\n    <ion-toolbar>\n      <ion-title>Rewards Redemption</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n          <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <ion-card *ngFor="let rrl of rewardsRedemptionList; let i = index">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(rrl, $event)"></ion-icon>\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ rrl.trno  }} {{ rrl.salesman  }}</span><br>\n      </p>\n\n      <div padding>\n        <ion-row>\n          <ion-col col-12>\n            <span><b>Account Name: </b> {{ rrl.account_name  }}</span>\n          </ion-col>\n          <ion-col col-12>\n            <span><b>Points Generated: </b> {{ rrl.points_generated  }}</span>\n          </ion-col>\n          <ion-col col-12>\n            <span><b>Redemption: </b> {{ rrl.redemption  }}</span>\n          </ion-col>\n        </ion-row>\n      </div>\n      \n    </ion-card-content>\n  </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-rewards-redemption\manage-rewards-redemption.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_2__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], ManageRewardsRedemptionPage);
    return ManageRewardsRedemptionPage;
}());

//# sourceMappingURL=manage-rewards-redemption.js.map

/***/ }),

/***/ 113:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManagePodPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__add_pod_add_pod__ = __webpack_require__(483);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__edit_pod_edit_pod__ = __webpack_require__(484);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__providers_truck__ = __webpack_require__(17);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};













/**
 * Generated class for the ManagePodPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManagePodPage = /** @class */ (function () {
    function ManagePodPage(navCtrl, navParams, requestLoad, actionSheetController, admin, loader, accounts, trucks, fb) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.accounts = accounts;
        this.trucks = trucks;
        this.fb = fb;
        this.mainPODList = [];
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_11_rxjs__["Observable"].of([]);
            }
        };
        // this.getPODList();
        this.truckListFrom = this.fb.group({
            truck_no: ['']
        });
    }
    ManagePodPage_1 = ManagePodPage;
    ManagePodPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManagePodPage');
    };
    ManagePodPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    ManagePodPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Action',
                //   buttons: [{
                //     text: 'Add',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__add_pod_add_pod__["a" /* AddPodPage */]);
                return [2 /*return*/];
            });
        });
    };
    ManagePodPage.prototype.presentActionSheet = function (data, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit',
                                        icon: 'ios-create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_9__edit_pod_edit_pod__["a" /* EditPodPage */], { "data": data });
                                        }
                                    }, {
                                        text: 'Remove',
                                        icon: 'ios-trash',
                                        handler: function () {
                                            _this.deleteApi(data);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManagePodPage.prototype.getPODList = function () {
        var _this = this;
        this.loader.show();
        this.accounts.getPODList().subscribe(function (res) {
            var data = res.json();
            _this.mainPODList = data.result;
            _this.mainPODList.forEach(function (element) {
                element.pod_date_format = __WEBPACK_IMPORTED_MODULE_8_moment__(element.pod_date).format("YYYY-MM-DD");
            });
            console.log("Result >>>>", data.result);
            _this.loader.hide();
        }, function (err) {
            console.log("err >>>>", err);
        });
    };
    // edit(data) {
    //   // this.navCtrl.push(EditRequestLoadPage, {"data": data });
    // }
    ManagePodPage.prototype.deleteApi = function (data) {
        var _this = this;
        this.loader.show();
        var load_id = data._id;
        console.log("id  >>>", load_id);
        var pod_document_type = "POD";
        this.requestLoad.deleteAccountsLedger(data.deal_no, pod_document_type).subscribe(function (res) {
            _this.accounts.deletePOD(load_id).subscribe(function (res) {
                _this.loader.hide();
                _this.navCtrl.push(ManagePodPage_1);
            }, function (err) {
                _this.loader.hide();
                console.log("error");
            });
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManagePodPage.prototype.onSelectTruck = function (e) {
        var _this = this;
        console.log(">>>>>eeeee", e);
        this.mainPODList = [];
        this.loader.show();
        this.accounts.getListByTruckNo(e.truck_no).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.mainPODList = data.result;
            _this.mainPODList.forEach(function (element) {
                element.pod_date_format = __WEBPACK_IMPORTED_MODULE_8_moment__(element.pod_date).format("YYYY-MM-DD");
            });
        }, function (err) {
            _this.loader.hide();
            console.log("error", err);
        });
    };
    ManagePodPage = ManagePodPage_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-pod',template:/*ion-inline-start:"D:\truck\src\pages\manage-pod\manage-pod.html"*/'<!--\n  Generated template for the ManagePodPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    \n    <ion-toolbar>\n      <ion-title>POD Acknowledgement</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="truckListFrom">\n    <div class="form-group has-search">\n      <span class="fa fa-search form-control-search"></span>\n      <!-- <label class=" label">Enter Truck No. </label>                  -->\n      <input placeholder=" Enter Truck No"\n        class="form-control"\n        ng2-auto-complete\n        formControlName="truck_no"\n        [source]="truckNo.bind(this)"\n        list-formatter="truck_no"\n        (valueChanged)="onSelectTruck($event)" \n      /> \n    </div>\n  </form>\n  \n  <ion-item-divider></ion-item-divider>\n\n  <ion-card *ngFor="let mpd of mainPODList">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(mpd, $event)"></ion-icon>\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon>  Deal No #{{ mpd.deal_no }}</span><br>\n      </p>\n      <div padding>\n        <p>\n          <span><b>Truck No:</b> {{ mpd.truck_no }}</span>\n          <span class="fright"><b>Date:</b> {{ mpd.pod_date_format }}</span>\n        </p>\n  \n        <p>\n          <span><b>Transporter Name:</b> {{ mpd.transporter_name }}</span>\n        </p>\n        \n        <p>\n          <span><b>Consignor:</b> {{ mpd.consignor }}</span>\n        </p>\n  \n        <p>\n          <!-- <span><b>Claim Amount:</b> {{ mpd.claim_amount }}</span> -->\n          <span><b>POD Pending:</b> {{ mpd.pod_pending }}</span>\n          <span class="fright"><b>POD Status:</b> {{ mpd.pod_status }}</span>\n        </p>\n      </div>\n    </ion-card-content>\n  </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-pod\manage-pod.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_5__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_accounts__["a" /* Accounts */],
            __WEBPACK_IMPORTED_MODULE_12__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_10__angular_forms__["FormBuilder"]])
    ], ManagePodPage);
    return ManagePodPage;
    var ManagePodPage_1;
}());

//# sourceMappingURL=manage-pod.js.map

/***/ }),

/***/ 114:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageAdvanceAmountPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__edit_advance_amount_edit_advance_amount__ = __webpack_require__(485);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__add_advance_amount_add_advance_amount__ = __webpack_require__(486);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_moment__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};










/**
 * Generated class for the ManageAdvanceAmountPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageAdvanceAmountPage = /** @class */ (function () {
    function ManageAdvanceAmountPage(navCtrl, navParams, requestLoad, accounts, actionSheetController, admin, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.accounts = accounts;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.dataList = [];
        this.getAdvanceAmountList();
    }
    ManageAdvanceAmountPage_1 = ManageAdvanceAmountPage;
    ManageAdvanceAmountPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManageAdvanceAmountPage');
    };
    ManageAdvanceAmountPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_7__home_home__["a" /* HomePage */]);
    };
    ManageAdvanceAmountPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Action',
                //   buttons: [{
                //     text: 'Add',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__add_advance_amount_add_advance_amount__["a" /* AddAdvanceAmountPage */]);
                return [2 /*return*/];
            });
        });
    };
    ManageAdvanceAmountPage.prototype.presentActionSheet = function (data, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit',
                                        icon: 'ios-create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__edit_advance_amount_edit_advance_amount__["a" /* EditAdvanceAmountPage */], { "data": data });
                                        }
                                    }, {
                                        text: 'Remove',
                                        icon: 'ios-trash',
                                        handler: function () {
                                            _this.deleteApi(data);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageAdvanceAmountPage.prototype.getAdvanceAmountList = function () {
        var _this = this;
        this.loader.show();
        this.accounts.getAdvanceAmountList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.dataList = data.results;
            _this.dataList.forEach(function (element) {
                element.date_frmt = __WEBPACK_IMPORTED_MODULE_9_moment__(element.date).format('YYYY-MM-DD');
            });
            console.log('Data >>>>>>>', _this.dataList);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    ManageAdvanceAmountPage.prototype.deleteApi = function (data) {
        var _this = this;
        console.log("Data  >>>", data);
        var load_id = data._id;
        console.log("id  >>>", load_id);
        this.loader.show();
        // Delete Deal Final Record
        this.accounts.deleteAdvanceAmount(load_id).subscribe(function (res) {
            var delDealNo = data.deal_no;
            var delDocumentType = "DFADV";
            var delPartyCategory = data.party_category;
            // Delete Advance Amount Accounts Ledger
            _this.accounts.deleteAdvanceAmountAccountsLedger(delDealNo, delDocumentType, delPartyCategory).subscribe(function (res) {
                // // Delete Rewards Ledger Records
                // this.requestLoad.deleteRewardsLedger(data.sr_no).subscribe((res: any) => {
                _this.loader.hide();
                _this.navCtrl.push(ManageAdvanceAmountPage_1);
                //   }, err => {
                //     this.loader.hide();
                //     console.log("error");
                //   });
            }, function (err) {
                _this.loader.hide();
                console.log("error");
            });
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageAdvanceAmountPage = ManageAdvanceAmountPage_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-advance-amount',template:/*ion-inline-start:"D:\truck\src\pages\manage-advance-amount\manage-advance-amount.html"*/'<!--\n  Generated template for the ManageAdvanceAmountPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n        <!-- <ion-title>Advance Amount</ion-title> -->\n      <ion-title>DF Receipt & Payment</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <ion-card *ngFor="let rl of dataList">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(rl, $event)"></ion-icon>\n    <!-- <ion-card-content (click)="edit(rl)"> -->\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ rl.tr_no}} {{ rl.name }}</span><br>\n      </p>\n      <div padding>\n        <p>\n          <span>Deal No: {{ rl.deal_no }}</span>\n          <span class="fright">Party Category: {{ rl.party_category }}</span>\n        </p>\n\n        <p>\n          <span>Date: {{ rl.date_frmt }}</span>\n          <span class="fright">Payment Type: {{ rl.payment_type }}</span>\n        </p>\n\n        <!-- <p>\n          <span>Load Type: {{ rl.load_type }}</span>\n          <span class="fright">Status: {{ rl.status }}</span>\n        </p>\n         -->\n\n        </div>\n    </ion-card-content>\n  </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-advance-amount\manage-advance-amount.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_8__providers_accounts__["a" /* Accounts */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_2__providers_loader__["a" /* LoaderProvider */]])
    ], ManageAdvanceAmountPage);
    return ManageAdvanceAmountPage;
    var ManageAdvanceAmountPage_1;
}());

//# sourceMappingURL=manage-advance-amount.js.map

/***/ }),

/***/ 115:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AttachDocumentsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_documents_master_add_documents_master__ = __webpack_require__(487);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_fleet_management__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__edit_attach_documents_edit_attach_documents__ = __webpack_require__(488);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












/**
 * Generated class for the AttachDocumentsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AttachDocumentsPage = /** @class */ (function () {
    function AttachDocumentsPage(navCtrl, navParams, fb, fleetManagement, loader, toast, events, trucks) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.fleetManagement = fleetManagement;
        this.loader = loader;
        this.toast = toast;
        this.events = events;
        this.trucks = trucks;
        this.toDate = new Date().toISOString();
        this.attachmentsFlag = true;
        this.documentsMatruesterFlag = false;
        this.documentsList = [];
        this.activeList = false;
        this.listFlag = true;
        this.editFlag = false;
        this.fileList = [];
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_9_rxjs__["Observable"].of([]);
            }
        };
        this.editDocumentForm = this.fb.group({
            name: [''],
        });
        this.addAttachment = this.fb.group({
            truck_no: [''],
            start_date: [this.toDate],
            documentname: [''],
            end_date: [this.toDate],
            file: [''],
        });
        var fromDocument = this.navParams.get('flag');
        if (fromDocument == 1) {
            this.onDocumentsMaster();
        }
        if (fromDocument == 0) {
            this.addAttachment.controls['truck_no'].setValue(this.navParams.get('truck_no'));
            this.getOldtrucksRecords();
        }
        else {
            this.getDocumentsMaster();
        }
    }
    AttachDocumentsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AttachDocumentsPage');
    };
    AttachDocumentsPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    AttachDocumentsPage.prototype.onAttachments = function () {
        console.log("onAttachments >>>>");
        this.attachmentsFlag = true;
        this.documentsMatruesterFlag = false;
    };
    AttachDocumentsPage.prototype.onDocumentsMaster = function () {
        console.log("onDocumentsMaster >>>>");
        this.attachmentsFlag = false;
        this.documentsMatruesterFlag = true;
    };
    AttachDocumentsPage.prototype.getDocumentsMaster = function () {
        var _this = this;
        this.loader.show();
        this.documentsList = [];
        this.fleetManagement.listDocumentsMaster().subscribe(function (res) {
            var data = res.json();
            _this.documentsList = data.results;
            _this.loader.hide();
        }, function (err) {
            console.log("err >>>", err);
        });
    };
    AttachDocumentsPage.prototype.addDocumentMaster = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__add_documents_master_add_documents_master__["a" /* AddDocumentsMasterPage */]);
    };
    AttachDocumentsPage.prototype.editDocumentMaster = function (data) {
        this.listFlag = false;
        this.editFlag = true;
    };
    AttachDocumentsPage.prototype.deleteDocumentMaster = function (data) {
        var _this = this;
        this.listFlag = true;
        this.editFlag = false;
        this.loader.show();
        this.fleetManagement.deleteDocumentsMaster(data._id).subscribe(function (res) {
            var data = res.json();
            _this.loader.hide();
            _this.getDocumentsMaster();
        }, function (err) {
            console.log("err >>>", err);
        });
    };
    AttachDocumentsPage.prototype.CancelDocumentMaster = function () {
        this.listFlag = true;
        this.editFlag = false;
    };
    AttachDocumentsPage.prototype.updateDocumentMaster = function (data) {
        var _this = this;
        this.listFlag = true;
        this.editFlag = false;
        this.loader.show();
        var obj = {
            name: this.editDocumentForm.value.name
        };
        this.fleetManagement.updateDocumentsMaster(data._id, obj).subscribe(function (res) {
            var data = res.json();
            _this.loader.hide();
            _this.getDocumentsMaster();
        }, function (err) {
            console.log("err >>>", err);
        });
    };
    AttachDocumentsPage.prototype.fetch = function () {
        var _this = this;
        this.activeList = true;
        this.loader.show();
        var truck_no = this.addAttachment.value.truck_no.truck_no ? this.addAttachment.value.truck_no.truck_no : this.addAttachment.value.truck_no;
        this.fleetManagement.getfilesList(truck_no).subscribe(function (res) {
            _this.fileList = res.json(); // existing files
            // add existing files to documents master
            _this.documentsList.forEach(function (d) {
                _this.fileList.forEach(function (f) {
                    if (d.name === f.documentname) {
                        d.files = f.files;
                        if (d.files[0]) {
                            d.files.forEach(function (at) {
                                var attachdocument_row = at.attachdocument.split('uploads/');
                                at.attachdocument_format = attachdocument_row[1];
                            });
                        }
                    }
                });
            });
            _this.loader.hide();
        }, function (err) {
            // on error
        });
    };
    AttachDocumentsPage.prototype.onSelectCSV = function (event) {
        this.file = event.target.files[0];
        console.log('file >>>>>>>', this.file);
    };
    AttachDocumentsPage.prototype.save = function (data) {
        // data.disabled = true;
        var _this = this;
        console.log('data >>>>>>>', data);
        var getFromData = this.addAttachment.value;
        var d = new FormData();
        d.append('file', this.file);
        d.append('startdate', getFromData.start_date);
        d.append('truck_no', getFromData.truck_no);
        d.append('enddate', getFromData.end_date);
        d.append('documentname', data.name);
        this.fleetManagement.addAttachDocuments(d).subscribe(function (res) {
            _this.toast.error({ 'message': 'Uploaded..!' });
            _this.fetch();
            _this.addAttachment.get('file').reset();
            // data.disabled = false;
        }, function (err) {
            console.log('err   >>>', err);
            _this.toast.error({ 'message': 'Something went wrong..!' });
        });
    };
    AttachDocumentsPage.prototype.editDocument = function (d) {
        d.truck_no = this.addAttachment.value.truck_no.truck_no ? this.addAttachment.value.truck_no.truck_no : this.addAttachment.value.truck_no;
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__edit_attach_documents_edit_attach_documents__["a" /* EditAttachDocumentsPage */], { data: d });
    };
    AttachDocumentsPage.prototype.deleteDocument = function (f) {
        var _this = this;
        if (confirm('Are you sure you want to delete?')) {
            var data = {
                id: f.parent_id,
                document_id: f._id
            };
            this.fleetManagement.deleteDocument(data).subscribe(function (res) {
                _this.fetch();
            }, function (err) {
                _this.toast.error({ 'message': 'Something went wrong..!' });
            });
        }
    };
    AttachDocumentsPage.prototype.getOldtrucksRecords = function () {
        var _this = this;
        this.activeList = true;
        this.documentsList = [];
        this.loader.show();
        var truck_no = this.addAttachment.value.truck_no.truck_no ? this.addAttachment.value.truck_no.truck_no : this.addAttachment.value.truck_no;
        this.fleetManagement.listDocumentsMaster().subscribe(function (res) {
            var data = res.json();
            _this.documentsList = data.results;
            _this.fleetManagement.getfilesList(truck_no).subscribe(function (res) {
                _this.fileList = res.json(); // existing files
                // add existing files to documents master
                _this.documentsList.forEach(function (d) {
                    _this.fileList.forEach(function (f) {
                        if (d.name === f.documentname) {
                            d.files = f.files;
                            if (d.files[0]) {
                                d.files.forEach(function (at) {
                                    var attachdocument_row = at.attachdocument.split('uploads/');
                                    at.attachdocument_format = attachdocument_row[1];
                                });
                            }
                        }
                    });
                });
                _this.loader.hide();
            }, function (err) {
                // on error
            });
        }, function (err) {
            // on error
        });
    };
    AttachDocumentsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-attach-documents',template:/*ion-inline-start:"D:\truck\src\pages\attach-documents\attach-documents.html"*/'<!--\n  Generated template for the AttachDocumentsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Attach Documents</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <ion-row>\n    <ion-col col-1></ion-col>\n    <ion-col col-5 class="label-font" (click)="onAttachments()" >\n      Attachments\n    </ion-col>\n    &nbsp;\n    <ion-col col-5 class="label-font" (click)="onDocumentsMaster()">\n      Documents Master\n    </ion-col>\n  </ion-row>\n\n  <!-- Attachments -->\n  <div *ngIf="attachmentsFlag" padding>\n    <form [formGroup]="addAttachment">\n\n\n      <div>\n\n        <ion-row>\n          <ion-col col-2>\n            <b class="button-align">Truck No</b>\n          </ion-col>\n\n          <ion-col col-5>\n            <!-- <div class="form-group"> -->\n              <input\n                class="form-control"\n                ng2-auto-complete\n                [source]="truckNo.bind(this)"\n                list-formatter="truck_no"\n                formControlName="truck_no"     \n              />\n            <!-- </div> -->\n          </ion-col>\n\n          <ion-col col-2>\n            <span>\n              <button ion-button class="edit-button" (click)="fetch()" type="button" expand="block">\n                <i class="fa fa-get-pocket" aria-hidden="true"></i>\n                &nbsp; Fetch\n              </button>\n            </span>\n          </ion-col>\n        </ion-row>          \n        \n      </div>\n\n      <div *ngIf="activeList">\n        <table border="1" class="attachment-table" padding>\n          <thead>\n            <tr>\n              <th>Document Name</th>\n              <th>Attach Document</th>\n              <th>Start Date</th>\n              <th>End Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor="let data of documentsList; let i = index">\n              <td>\n                <label>{{ data.name ? data.name : \'--\' }}</label>\n              </td>\n              <td>\n                <input type="file" class="form-control" formControlName="file" (change)="onSelectCSV($event)" />\n                <br>\n                <table class="table table-bordered small-table">\n                  <thead>\n                    <tr>\n                      <th>Document</th>\n                      <th>Start / End Date</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr *ngFor="let f of data.files">\n                      <td>\n                        <a href="/{{ f.attachdocument }}" target="_blank">\n                        {{ f.attachdocument_format }} \n                        </a>\n                      </td>\n                      <td>\n                          {{ f.startdate | date:\'dd/MM/yyyy\' }} - {{ f.enddate | date:\'dd/MM/yyyy\' }}\n                      </td>\n                      <td>\n                        <button ion-button class="edit-button" (click)="editDocument(f)" type="button" expand="block"><i class="fa fa-pencil-square" aria-hidden="true"></i></button> &nbsp;\n                        <button ion-button class="delete-button" (click)="deleteDocument(f)" type="button" expand="block"><i class="fa fa-times" aria-hidden="true"></i></button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n\n              <td>\n                <ion-item class="form-control">\n                  <ion-datetime name="start_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="start_date"></ion-datetime>\n                </ion-item>\n              </td>\n\n              <td>\n                <ion-item class="form-control">\n                  <ion-datetime name="end_date" display-format="MM/YYYY" min="2019" max="2050" picker-format="YYYY-MM-DD" formControlName="end_date"></ion-datetime>\n                </ion-item>\n              </td>\n\n              <td>\n                <button ion-button class="edit-button" (click)="save(data)" type="button" expand="block">Save</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n\n    </form>\n  </div>\n\n  <!-- Documents Master -->\n  <div *ngIf="documentsMatruesterFlag" padding>\n    <form [formGroup]="editDocumentForm">\n\n      <p class="button-align">\n        <button ion-button type="button" (click)="addDocumentMaster()"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add</button>\n      </p>\n      <br>\n\n      <table border="0" class="document-table" padding>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let dl of documentsList">\n            <td *ngIf="listFlag">{{ dl.name }}</td>\n            <td *ngIf="editFlag"><input type="text" [value]="dl.name" formControlName="name" class="form-control"></td>\n\n            <td>\n              <span *ngIf="listFlag"><button ion-button class="edit-button" (click)="editDocumentMaster(dl)" type="button" expand="block">Edit</button></span>\n              <span *ngIf="listFlag"><button ion-button class="delete-button" (click)="deleteDocumentMaster(dl)" type="button" expand="block">Delete</button></span>\n              <span *ngIf="editFlag"><button ion-button class="delete-button" (click)="CancelDocumentMaster()" type="button" expand="block">Cancel</button></span>\n              <span *ngIf="editFlag"><button ion-button class="update-button" (click)="updateDocumentMaster(dl)" type="button" expand="block">Update</button></span>\n            </td>\n            \n          </tr>\n        </tbody>\n      </table>\n\n    </form>\n\n  </div>\n  \n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\attach-documents\attach-documents.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_8__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_7__providers_fleet_management__["a" /* FleetManagement */],
            __WEBPACK_IMPORTED_MODULE_6__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_10__providers_truck__["a" /* Trucks */]])
    ], AttachDocumentsPage);
    return AttachDocumentsPage;
}());

//# sourceMappingURL=attach-documents.js.map

/***/ }),

/***/ 12:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminPrivilegeProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__api__ = __webpack_require__(56);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


/*
  Generated class for the AdminPrivilegeProvider provider.

  See https://angular.io/guide/dependency-injection for more info on providers
  and Angular DI.
*/
var AdminPrivilegeProvider = /** @class */ (function () {
    function AdminPrivilegeProvider(api) {
        this.api = api;
        console.log('Hello AdminPrivilegeProvider Provider');
    }
    AdminPrivilegeProvider.prototype.loginUser = function (data) {
        return this.api.put('user_creation/login', data);
    };
    AdminPrivilegeProvider.prototype.getDriverList = function () {
        return this.api.get('driver_details/list');
    };
    AdminPrivilegeProvider.prototype.getTruckList = function () {
        return this.api.get('truck/list');
    };
    AdminPrivilegeProvider.prototype.getTransportList = function () {
        return this.api.get('transport_details/list');
    };
    AdminPrivilegeProvider.prototype.getCompanyList = function () {
        return this.api.get('company/list');
    };
    AdminPrivilegeProvider.prototype.getAgencies = function () {
        return this.api.get('agencies_master/list');
    };
    AdminPrivilegeProvider.prototype.getAgenciesNameList = function () {
        return this.api.get('agencies_master/list_agency_name');
    };
    AdminPrivilegeProvider.prototype.getUserPermissionList = function () {
        return this.api.get('user_creation/list_permission');
    };
    AdminPrivilegeProvider.prototype.addUser = function (data) {
        return this.api.post('user_creation/add_user', data);
    };
    AdminPrivilegeProvider.prototype.updateUser = function (id, data) {
        return this.api.put('user_creation/update?id=' + id, data);
    };
    AdminPrivilegeProvider.prototype.deleteUser = function (id) {
        return this.api.delete('user_creation/delete?id=' + id);
    };
    AdminPrivilegeProvider.prototype.getUsersList = function () {
        return this.api.get('user_creation/users_list');
    };
    AdminPrivilegeProvider.prototype.updateCompanyList = function (id, data) {
        return this.api.put('company/update?id=' + id, data);
    };
    AdminPrivilegeProvider.prototype.updateAgencyList = function (id, data) {
        return this.api.put('agencies_master/update?id=' + id, data);
    };
    AdminPrivilegeProvider.prototype.updateTransportList = function (id, data) {
        return this.api.put('transport_details/update?id=' + id, data);
    };
    AdminPrivilegeProvider.prototype.updateTruckList = function (id, data) {
        return this.api.put('truck/update?id=' + id, data);
    };
    AdminPrivilegeProvider.prototype.updateDriverList = function (id, data) {
        return this.api.put('driver_details/update?id=' + id, data);
    };
    AdminPrivilegeProvider.prototype.getTruckData = function (truckNo) {
        return this.api.get('truck/details?truck_no=' + truckNo);
    };
    AdminPrivilegeProvider.prototype.getTransportCitiesList = function () {
        return this.api.get('transport_details/list_cities');
    };
    AdminPrivilegeProvider.prototype.getCompaniesCitiesList = function () {
        return this.api.get('company/list_cities');
    };
    AdminPrivilegeProvider.prototype.getAgenciesCitiesList = function () {
        return this.api.get('agencies_master/list_cities');
    };
    // ----------By City-----------
    AdminPrivilegeProvider.prototype.getTransportListByCity = function (city) {
        return this.api.get('transport_details/list_by_city?city=' + city);
    };
    AdminPrivilegeProvider.prototype.getAgencyListByCity = function (city) {
        return this.api.get('agencies_master/list_by_city?city=' + city);
    };
    AdminPrivilegeProvider.prototype.getCompanyListByCity = function (city) {
        return this.api.get('company/list_by_city?city=' + city);
    };
    // ----------By Name-----------
    AdminPrivilegeProvider.prototype.getTransportListByName = function (name) {
        return this.api.get('transport_details/list_by_name?transport_name=' + name);
    };
    AdminPrivilegeProvider.prototype.getAgencyListByName = function (name) {
        return this.api.get('agencies_master/list_by_name?agency_name=' + name);
    };
    AdminPrivilegeProvider.prototype.getCompanyListByName = function (name) {
        return this.api.get('company/list_by_name?company_name=' + name);
    };
    // ---------- Search -----------
    AdminPrivilegeProvider.prototype.searchTransportsAndCity = function (s) {
        return this.api.get('transport_details/search_city?q=' + s);
    };
    AdminPrivilegeProvider.prototype.searchCompaniesAndCity = function (s) {
        return this.api.get('company/search_city?q=' + s);
    };
    AdminPrivilegeProvider.prototype.searchAgenciesAndCity = function (s) {
        return this.api.get('agencies_master/search_city?q=' + s);
    };
    AdminPrivilegeProvider.prototype.searchAccountTypes = function (s) {
        return this.api.get('meta/search_account_types?q=' + s);
    };
    AdminPrivilegeProvider.prototype.searchAccountsCategory = function (s) {
        return this.api.get('meta/search_accounts_category?q=' + s);
    };
    // ----------  Delete APIs -----------
    AdminPrivilegeProvider.prototype.deleteAgency = function (id) {
        return this.api.delete('agencies_master/delete?id=' + id);
    };
    AdminPrivilegeProvider.prototype.deleteCompany = function (id) {
        return this.api.delete('company/delete?id=' + id);
    };
    AdminPrivilegeProvider.prototype.deleteTransporter = function (id) {
        return this.api.delete('transport_details/delete?id=' + id);
    };
    AdminPrivilegeProvider.prototype.deleteDriver = function (id) {
        return this.api.delete('driver_details/delete?id=' + id);
    };
    AdminPrivilegeProvider.prototype.deleteRequestLoad = function (id) {
        return this.api.delete('request_load/delete?id=' + id);
    };
    AdminPrivilegeProvider.prototype.deleteTruck = function (id) {
        return this.api.delete('truck/delete?id=' + id);
    };
    // ----------  Employees APIs -----------
    AdminPrivilegeProvider.prototype.getEmployeesList = function () {
        return this.api.get('employee/list');
    };
    AdminPrivilegeProvider.prototype.addEmployee = function (data) {
        return this.api.post('employee/add', data);
    };
    AdminPrivilegeProvider.prototype.updateEmployee = function (id, data) {
        return this.api.put('employee/update?id=' + id, data);
    };
    AdminPrivilegeProvider.prototype.deleteEmployee = function (id) {
        return this.api.delete('employee/delete?id=' + id);
    };
    AdminPrivilegeProvider.prototype.getListByAgency = function (agency_name) {
        return this.api.get('employee/list_by_agency?agency_name=' + agency_name);
    };
    AdminPrivilegeProvider.prototype.getRewardsByFirstName = function (first_name) {
        return this.api.get('employee/rewards_by_first_name?first_name=' + first_name);
    };
    // ----------  Accounts Master APIs -----------
    AdminPrivilegeProvider.prototype.getAccountsMasterList = function () {
        return this.api.get('accounts_master/list');
    };
    AdminPrivilegeProvider.prototype.addAccountsMaster = function (data) {
        return this.api.post('accounts_master/add', data);
    };
    AdminPrivilegeProvider.prototype.updateAccountsMaster = function (id, data) {
        return this.api.put('accounts_master/update?id=' + id, data);
    };
    AdminPrivilegeProvider.prototype.deleteAccountsMaster = function (id) {
        return this.api.delete('accounts_master/delete?id=' + id);
    };
    AdminPrivilegeProvider.prototype.getAccountsCategoryList = function () {
        return this.api.get('meta/list_accounts_category');
    };
    AdminPrivilegeProvider.prototype.getAccountTypesList = function () {
        return this.api.get('meta/list_account_types');
    };
    // ----------  Rewards Redemption APIs -----------
    AdminPrivilegeProvider.prototype.getRewardsRedemptionList = function () {
        return this.api.get('rewards_redemption/list');
    };
    AdminPrivilegeProvider.prototype.addRewardsRedemption = function (data) {
        return this.api.post('rewards_redemption/add', data);
    };
    AdminPrivilegeProvider.prototype.updateRewardsRedemption = function (id, data) {
        return this.api.put('rewards_redemption/update?id=' + id, data);
    };
    AdminPrivilegeProvider.prototype.deleteRewardsRedemption = function (id) {
        return this.api.delete('rewards_redemption/delete?id=' + id);
    };
    AdminPrivilegeProvider.prototype.getMaxTrNoRewardsRedemption = function () {
        return this.api.get('rewards_redemption/max_trno');
    };
    AdminPrivilegeProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__api__["a" /* Api */]])
    ], AdminPrivilegeProvider);
    return AdminPrivilegeProvider;
}());

//# sourceMappingURL=admin-privilege.js.map

/***/ }),

/***/ 14:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RequestLoad; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__api__ = __webpack_require__(56);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

// import { Http } from '@angular/http';

var RequestLoad = /** @class */ (function () {
    function RequestLoad(
        // public http: Http, 
        api) {
        this.api = api;
    }
    RequestLoad.prototype.addRequestLoad = function (data) {
        return this.api.post('request_load/add', data);
    };
    RequestLoad.prototype.getRequestLoad = function () {
        return this.api.get('request_load/list');
    };
    RequestLoad.prototype.listTrucksAvailability = function () {
        return this.api.get('request_load/list_trucks_availability');
    };
    RequestLoad.prototype.getMatchCompanyList = function (id) {
        return this.api.get('request_load/list_company?id=' + id);
    };
    RequestLoad.prototype.searchCompany = function (query) {
        return this.api.get('company/search_company?q=' + query);
    };
    RequestLoad.prototype.updateNegotiate = function (id, data) {
        return this.api.put('request_load/update_negotiate?id=' + id, data);
    };
    RequestLoad.prototype.getNegotiateDetails = function (id) {
        return this.api.get('request_load/list_negotiate_details?id=' + id);
    };
    RequestLoad.prototype.updateRequestLoad = function (id, data) {
        return this.api.put('request_load/update?id=' + id, data);
    };
    RequestLoad.prototype.updateRequestLoadStatus = function (id, data) {
        return this.api.put('request_load/update_status?id=' + id, data);
    };
    //---------- Post Load --------------
    RequestLoad.prototype.addPostLoad = function (data) {
        return this.api.post('post_load/add', data);
    };
    RequestLoad.prototype.getPostLoadList = function () {
        return this.api.get('post_load/list');
    };
    RequestLoad.prototype.updatePostLoad = function (id, data) {
        return this.api.put('post_load/update?id=' + id, data);
    };
    RequestLoad.prototype.updatePostLoadStatus = function (id, data) {
        return this.api.put('post_load/update_status?id=' + id, data);
    };
    RequestLoad.prototype.deletePostLoadList = function (id) {
        return this.api.delete('post_load/delete?id=' + id);
    };
    //---------- Deal Final --------------
    RequestLoad.prototype.addDealFinal = function (data) {
        return this.api.post('deal_final/add', data);
    };
    RequestLoad.prototype.getDealList = function () {
        return this.api.get('deal_final/list');
    };
    RequestLoad.prototype.updateDealFinal = function (id, data) {
        return this.api.put('deal_final/update?id=' + id, data);
    };
    RequestLoad.prototype.deleteDealFinal = function (id) {
        return this.api.delete('deal_final/delete?id=' + id);
    };
    RequestLoad.prototype.getRequestLoadByID = function (query) {
        return this.api.get('request_load/get_by_id?id=' + query);
    };
    RequestLoad.prototype.getPostLoadByID = function (query) {
        return this.api.get('post_load/get_by_id?id=' + query);
    };
    RequestLoad.prototype.getAccountsNameList = function () {
        return this.api.get('accounts/list');
    };
    RequestLoad.prototype.getPaymentModeList = function () {
        return this.api.get('meta/get_payment_mode');
    };
    RequestLoad.prototype.getPaymentTypesList = function () {
        return this.api.get('meta/get_payment_type');
    };
    RequestLoad.prototype.getMaxSrNo = function () {
        return this.api.get('deal_final/max_sr_no');
    };
    RequestLoad.prototype.getAccountsByAgency = function (agency_name) {
        return this.api.get('accounts_master/accounts_by_agency?agency_name=' + agency_name);
    };
    RequestLoad.prototype.addAccountsLedger = function (data) {
        return this.api.post('accounts_ledger/add', data);
    };
    RequestLoad.prototype.deleteAccountsLedger = function (id, document_type) {
        return this.api.delete('accounts_ledger/delete?sr_no=' + id + '&document_type=' + document_type);
    };
    RequestLoad.prototype.deleteAccountsTransactionsLedger = function (id, document_type, agency_name) {
        return this.api.delete('accounts_ledger/delete_accounts_transactions_ledger?sr_no=' + id + '&document_type=' + document_type + '&agency_name=' + agency_name);
    };
    //---------- Deal Final New--------------
    RequestLoad.prototype.getMaxDealNo = function () {
        return this.api.get('deal_final_new/max_deal_no');
    };
    RequestLoad.prototype.addNewDealFinal = function (data) {
        return this.api.post('deal_final_new/add', data);
    };
    RequestLoad.prototype.getNewDealFinal = function () {
        return this.api.get('deal_final_new/list');
    };
    RequestLoad.prototype.updateRequestLoadStatusDF = function (ticket_no, data) {
        return this.api.put('deal_final_new/update_requestload_status?ticket_no=' + ticket_no, data);
    };
    RequestLoad.prototype.updatePostLoadStatusDF = function (ticket_no, data) {
        return this.api.put('deal_final_new/update_postload_status?ticket_no=' + ticket_no, data);
    };
    RequestLoad.prototype.getDealFinalNewList = function () {
        return this.api.get('deal_final_new/list');
    };
    RequestLoad.prototype.getDealFinalNewListSorted = function () {
        return this.api.get('deal_final_new/sorted_list');
    };
    RequestLoad.prototype.updateDealFinalNew = function (id, data) {
        return this.api.put('deal_final_new/update?id=' + id, data);
    };
    RequestLoad.prototype.deleteDealFinalNew = function (id) {
        return this.api.delete('deal_final_new/delete?id=' + id);
    };
    // ------------------------------------
    RequestLoad.prototype.addRewardsLedger = function (data) {
        return this.api.post('rewards_ledger/add', data);
    };
    RequestLoad.prototype.deleteRewardsLedger = function (id) {
        return this.api.delete('rewards_ledger/delete?srno=' + id);
    };
    //---------- Search From and To --------------
    RequestLoad.prototype.searchFromRequest = function (query) {
        return this.api.get('request_load/search_from?q=' + query);
    };
    RequestLoad.prototype.searchToRequest = function (query) {
        return this.api.get('request_load/search_to?q=' + query);
    };
    RequestLoad.prototype.searchFromPost = function (query) {
        return this.api.get('post_load/search_from?q=' + query);
    };
    RequestLoad.prototype.searchToPost = function (query) {
        return this.api.get('post_load/search_to?q=' + query);
    };
    //---------- Cancel Master --------------
    RequestLoad.prototype.getCancelReasons = function (query) {
        return this.api.get('meta/get_cancellation?name=' + query);
    };
    RequestLoad.prototype.addPaymentMode = function (data) {
        return this.api.post('meta/add_payment_mode', data);
    };
    RequestLoad.prototype.editPaymentMode = function (data, id) {
        return this.api.put('meta/update_payment_mode?id=' + id, data);
    };
    RequestLoad.prototype.deletePaymentMode = function (id) {
        return this.api.delete('meta/delete_payment_mode?id=' + id);
    };
    RequestLoad.prototype.addPaymentType = function (data) {
        return this.api.post('meta/add_payment_type', data);
    };
    RequestLoad.prototype.editPaymentType = function (data, id) {
        return this.api.put('meta/update_payment_type?id=' + id, data);
    };
    RequestLoad.prototype.deletePaymentType = function (id) {
        return this.api.delete('meta/delete_payment_type?id=' + id);
    };
    RequestLoad.prototype.addCancelReason = function (data) {
        return this.api.post('meta/add_cancellation', data);
    };
    RequestLoad.prototype.editCancelReason = function (data, id) {
        return this.api.put('meta/update_cancellation?id=' + id, data);
    };
    RequestLoad.prototype.deleteCancelReason = function (id) {
        return this.api.delete('meta/delete_cancellation?id=' + id);
    };
    RequestLoad.prototype.getAccountCategories = function () {
        return this.api.get('meta/list_account_category');
    };
    RequestLoad.prototype.addAccountCategory = function (data) {
        return this.api.post('meta/add_account_category', data);
    };
    RequestLoad.prototype.editAccountCategory = function (data, id) {
        return this.api.put('meta/update_account_category?id=' + id, data);
    };
    RequestLoad.prototype.deleteAccountCategory = function (id) {
        return this.api.delete('meta/delete_account_category?id=' + id);
    };
    RequestLoad.prototype.getAccountTypes = function () {
        return this.api.get('meta/list_account_type');
    };
    RequestLoad.prototype.addAccountType = function (data) {
        return this.api.post('meta/add_account_type', data);
    };
    RequestLoad.prototype.editAccountType = function (data, id) {
        return this.api.put('meta/update_account_type?id=' + id, data);
    };
    RequestLoad.prototype.deleteAccountType = function (id) {
        return this.api.delete('meta/delete_account_type?id=' + id);
    };
    RequestLoad.prototype.getSalesman = function (data) {
        return this.api.get('rewards_ledger/points_generated?salesman=' + data);
    };
    RequestLoad.prototype.getSrNo = function (data) {
        return this.api.get('rewards_ledger/deal_final_by_sr_no?sr_no=' + data);
    };
    RequestLoad.prototype.getRequestLoadIdByTicketNo = function (query) {
        return this.api.get('request_load/get_id_by_ticket_no?id=' + query);
    };
    RequestLoad.prototype.getPostLoadIdByTicketNo = function (query) {
        return this.api.get('post_load/get_id_by_ticket_no?id=' + query);
    };
    RequestLoad.prototype.getAccountsNameFromRewardsLedger = function (query) {
        return this.api.get('rewards_ledger/list_accounts_name_by_agency?agency_name=' + query);
    };
    RequestLoad = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__api__["a" /* Api */]])
    ], RequestLoad);
    return RequestLoad;
}());

//# sourceMappingURL=request_load.js.map

/***/ }),

/***/ 17:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Trucks; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__api__ = __webpack_require__(56);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var Trucks = /** @class */ (function () {
    function Trucks(http, api) {
        this.http = http;
        this.api = api;
    }
    Trucks.prototype.getTransporterNames = function () {
        return this.api.get('transport_details/list');
    };
    Trucks.prototype.getDriverNames = function () {
        return this.api.get('driver_details/list');
    };
    Trucks.prototype.getMaterials = function () {
        return this.api.get('meta/list_material');
    };
    Trucks.prototype.getCapacityOfTruck = function () {
        return this.api.get('truck_type/get_list');
    };
    Trucks.prototype.addTruck = function (data) {
        return this.api.post('truck/add', data);
    };
    Trucks.prototype.addCompany = function (data) {
        return this.api.post('company/add', data);
    };
    Trucks.prototype.addDriver = function (data) {
        return this.api.post('driver_details/add', data);
    };
    Trucks.prototype.addAgency = function (data) {
        return this.api.post('agencies_master/add', data);
    };
    Trucks.prototype.searchTruckNo = function (query) {
        return this.api.get('truck/search_truck?q=' + query);
    };
    Trucks.prototype.searchTransporterName = function (query) {
        return this.api.get('transport_details/search_transporter?q=' + query);
    };
    Trucks.prototype.getBySrnoTransporter = function (query) {
        return this.api.get('transport_details/get_by_srno?srno=' + query);
    };
    Trucks.prototype.searchAgencyName = function (query) {
        return this.api.get('agencies_master/search_agency?q=' + query);
    };
    Trucks.prototype.searchDriverName = function (query) {
        return this.api.get('driver_details/search_driver?q=' + query);
    };
    Trucks.prototype.searchDriverByID = function (query) {
        return this.api.get('driver_details/get_by_id?id=' + query);
    };
    Trucks.prototype.sendOTP = function (mobile_no, otp) {
        return this.api.get('truck/send_otp?mobile_no=' + mobile_no + '&otp=' + otp);
    };
    Trucks.prototype.getTransporterDetailsByName = function (query) {
        return this.api.get('transport_details/get_by_transporter?transporter=' + query);
    };
    Trucks.prototype.getAgencyDetailsByName = function (query) {
        return this.api.get('agencies_master/get_by_agency?agency=' + query);
    };
    Trucks.prototype.getDriverDetailsByName = function (query) {
        return this.api.get('driver_details/get_by_driver?driver=' + query);
    };
    Trucks = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["Http"],
            __WEBPACK_IMPORTED_MODULE_2__api__["a" /* Api */]])
    ], Trucks);
    return Trucks;
}());

//# sourceMappingURL=truck.js.map

/***/ }),

/***/ 170:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AccountsTransactionsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__edit_accounts_transactions_edit_accounts_transactions__ = __webpack_require__(490);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_moment__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the AccountsTransactionsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AccountsTransactionsPage = /** @class */ (function () {
    function AccountsTransactionsPage(navCtrl, navParams, admin, actionSheetController, loader, toast, fb, trucks, accounts, requestLoad) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.admin = admin;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.trucks = trucks;
        this.accounts = accounts;
        this.requestLoad = requestLoad;
        this.toDate = new Date().toISOString();
        this.voucherTypes = ['Receipt', 'Payment', 'Contra', 'Journal', 'Debit Note', 'Credit Note'];
        this.accountsHead = [];
        this.againsts = ['DOCUMENT', 'EMI', 'INVESTMENT', 'MAINTENANCE', 'SALARY', 'SITE ADVANCE', 'TYRE'];
        this.mainAccoutsList = [];
        this.mainPaymentTypes = [];
        this.mainAccountsTransactions = [];
        this.display = true;
        this.editData = false;
        this.truckNoList = [];
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Accounts Name list
        this.accountsName = function (keyword) {
            if (keyword) {
                var agencyName = _this.saveForm.value.agency_name.agency_name ? _this.saveForm.value.agency_name.agency_name : _this.saveForm.value.agency_name;
                return _this.accounts.searchAccountsNameByAgency(keyword, agencyName).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].of([]);
            }
        };
        this.saveForm = this.fb.group({
            agency_name: [''],
            voucher_type: [''],
            voucher_no: [''],
            date: [this.toDate],
            // account_head: [''],
            // payment_type: [''],
            // against: [''],
            // account_name: [''],
            truck_no: [''],
            naration: [''],
            debit: [0],
            credit: [0],
            accounts_data: this.fb.array([this.accountsDataForm()]),
        });
        this.editForm = this.fb.group({
            edit_voucher_type: [''],
            edit_payment_type: [''],
            edit_naration: ['']
        });
        // this.getAccounts();
        this.getPaymentType();
        this.getAccountsTransactions();
    }
    AccountsTransactionsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AccountsTransactionsPage');
    };
    AccountsTransactionsPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_4__home_home__["a" /* HomePage */]);
    };
    AccountsTransactionsPage.prototype.isReadonly = function () {
        return this.isReadonly; //return true/false 
    };
    Object.defineProperty(AccountsTransactionsPage.prototype, "accountsData", {
        get: function () { return this.saveForm.get('accounts_data'); },
        enumerable: true,
        configurable: true
    });
    AccountsTransactionsPage.prototype.accountsDataForm = function () {
        return this.fb.group({
            account_name: [''],
            account_debit: [''],
            account_credit: [''],
        });
    };
    AccountsTransactionsPage.prototype.addTo = function () {
        this.accounts_data = this.saveForm.get('accounts_data');
        this.accounts_data.push(this.accountsDataForm());
    };
    AccountsTransactionsPage.prototype.removeTo = function (index) {
        if (index === 0) {
            this.toast.error({ 'message': 'Cannot remove this form.' });
        }
        else {
            this.accounts_data.removeAt(index);
            this.calculationDrCr();
        }
    };
    AccountsTransactionsPage.prototype.getVoucherNo = function () {
        var _this = this;
        if (this.saveForm.value.agency_name.agency_name && this.saveForm.value.voucher_type) {
            this.loader.show();
            var agencyName = this.saveForm.value.agency_name.agency_name;
            var voucherType = this.saveForm.value.voucher_type;
            this.accounts.getMaxVoucherNo(agencyName, voucherType).subscribe(function (res) {
                var data = res.json();
                _this.loader.hide();
                console.log("Max No >>>>>", data.max_voucher_no);
                _this.saveForm.controls['voucher_no'].setValue(data.max_voucher_no);
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }
        if (this.saveForm.value.agency_name.agency_name) {
            this.getTruckNoByAgencyLedger();
        }
    };
    AccountsTransactionsPage.prototype.getPaymentType = function () {
        var _this = this;
        this.requestLoad.getPaymentTypesList().subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            dataList.forEach(function (element) {
                _this.mainPaymentTypes.push(element.name);
            });
            console.log("mainPaymentTypes >>>>", _this.mainPaymentTypes);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AccountsTransactionsPage.prototype.calculationDrCr = function () {
        // console.log("accounts_data >>>>", this.saveForm.value.accounts_data);
        var totalDebit = 0;
        var totalCredit = 0;
        this.saveForm.value.accounts_data.forEach(function (r) {
            if (r.account_debit) {
                totalDebit = totalDebit + r.account_debit;
            }
            if (r.account_credit) {
                totalCredit = totalCredit + r.account_credit;
            }
        });
        this.saveForm.controls['debit'].setValue(totalDebit);
        this.saveForm.controls['credit'].setValue(totalCredit);
    };
    AccountsTransactionsPage.prototype.getAccountsTransactions = function () {
        var _this = this;
        this.loader.show();
        this.accounts.getAccountsTransactions().subscribe(function (res) {
            var data = res.json();
            _this.mainAccountsTransactions = data.results;
            _this.loader.hide();
            _this.mainAccountsTransactions.forEach(function (element) {
                element.date_frmt = __WEBPACK_IMPORTED_MODULE_12_moment__(element.date).format('YYYY-MM-DD HH:mm');
            });
            console.log("mainAccountsTransactions >>>>", _this.mainAccountsTransactions);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AccountsTransactionsPage.prototype.save = function () {
        var _this = this;
        var voucherTypesArray = [
            { "name": 'Receipt', "value": "REC" },
            { "name": 'Payment', "value": "PYT" },
            { "name": 'Contra', "value": "CON" },
            { "name": 'Journal', "value": "JOR" },
            { "name": 'Debit Note', "value": "DNT" },
            { "name": 'Credit Note', "value": "CNT" },
        ];
        var getFormData = this.saveForm.value;
        var accountsDataArray = [];
        var accountsLedgerArray = [];
        var voucherDocumentType = "";
        voucherTypesArray.forEach(function (r) {
            if (r.name == getFormData.voucher_type) {
                voucherDocumentType = r.value;
            }
        });
        var voucherNoObj = {
            agency_name: getFormData.agency_name.agency_name,
            voucher_type: getFormData.voucher_type,
            voucher_no: getFormData.voucher_no
        };
        var accountsTransactionsObj = {
            agency_name: getFormData.agency_name.agency_name,
            voucher_type: getFormData.voucher_type,
            voucher_document_type: voucherDocumentType,
            voucher_no: getFormData.voucher_no,
            date: getFormData.date,
            // account_head: "",
            // payment_type: getFormData.payment_type,
            // against: getFormData.against,
            // account_name: getFormData.account_name,
            truck_no: getFormData.truck_no,
            accounts_data: accountsDataArray,
            naration: getFormData.naration,
            debit: getFormData.debit,
            credit: getFormData.credit,
            user_name: localStorage.getItem('user_name')
        };
        getFormData.accounts_data.forEach(function (r) {
            r.account_name = r.account_name.account_name ? r.account_name.account_name : r.account_name;
            accountsDataArray.push(r);
        });
        console.log("accountsTransactionsObj >>>>>>", accountsTransactionsObj);
        this.loader.show();
        // Add Accounts Transactions
        this.accounts.addAccountsTransactions(accountsTransactionsObj).subscribe(function (res) {
            var accountsTransactionsData = res.json();
            console.log("accountsTransactionsData >>>>>>", accountsTransactionsData.max_voucher_no);
            getFormData.accounts_data.forEach(function (r) {
                r.account_name = r.account_name.account_name ? r.account_name.account_name : r.account_name;
                accountsDataArray.push(r);
                var obj = {
                    "agency_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
                    "branch_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
                    "account_name": r.account_name,
                    "truck_no": getFormData.truck_no,
                    "narration": getFormData.naration,
                    "sr_no": accountsTransactionsData.max_voucher_no,
                    "document_type": voucherDocumentType,
                    "debit_amount": r.account_debit,
                    "credit_amount": r.account_credit,
                    "voucher_date": getFormData.date,
                    "user_name": localStorage.getItem('user_name')
                };
                accountsLedgerArray.push(obj);
            });
            // Add Accounts Ledger Records 
            _this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe(function (res) {
                // Add Voucher 
                _this.accounts.addVoucherNo(voucherNoObj).subscribe(function (res) {
                    _this.loader.hide();
                    _this.saveForm.reset();
                    _this.toast.show({ 'message': 'Added successfully.' });
                    _this.getAccountsTransactions();
                    // this.navCtrl.setRoot();
                }, function (err) {
                    _this.loader.hide();
                    _this.toast.error({ 'message': 'Something went wrong.' });
                    console.log(">>>>>Err", err);
                });
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }, function (err) {
            _this.loader.hide();
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
    };
    AccountsTransactionsPage.prototype.reset = function () {
        this.saveForm.reset();
    };
    AccountsTransactionsPage.prototype.edit = function (data) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__edit_accounts_transactions_edit_accounts_transactions__["a" /* EditAccountsTransactionsPage */], { "data": data });
        // console.log("edit  >>>>>", data);
        // this.display = false;
        // this.editData = true;
        // this.editForm.controls['edit_voucher_type'].setValue(data.voucher_type);
        // this.editForm.controls['edit_payment_type'].setValue(data.payment_type);
        // this.editForm.controls['edit_naration'].setValue(data.naration);
    };
    AccountsTransactionsPage.prototype.cancel = function () {
        this.display = true;
        this.editData = false;
    };
    // update(data) {
    //   var obj = {
    //     agency_name: data.agency_name,
    //     voucher_type: this.editForm.value.edit_voucher_type,
    //     voucher_no: data.voucher_no,
    //     date: data.date,
    //     account_head: "",
    //     payment_type: this.editForm.value.edit_payment_type,
    //     against: data.against,
    //     accounts_data: data.accounts_data,
    //     naration: this.editForm.value.edit_naration,
    //     debit: data.debit,
    //     credit: data.credit,
    //     user_name: data.user_name
    //   };
    //   console.log("update  >>>>>", obj);
    //   this.loader.show();
    //   this.display = true;
    //   this.editData = false;
    //   this.accounts.updateAccountsTransactions(data._id, obj).subscribe((res: any) => {
    //     this.loader.hide();
    //     this.toast.error({ 'message': 'Updated successfully.' });
    //     this.getAccountsTransactions();
    //   }, err => {
    //     console.log(">>>>error", err);
    //   });
    // }
    AccountsTransactionsPage.prototype.delete = function (data) {
        var _this = this;
        console.log("delete  >>>>>", data);
        var voucherTypesArray = [
            { "name": 'Receipt', "value": "REC" },
            { "name": 'Payment', "value": "PYT" },
            { "name": 'Contra', "value": "CON" },
            { "name": 'Journal', "value": "JOR" },
            { "name": 'Debit Note', "value": "DNT" },
            { "name": 'Credit Note', "value": "CNT" },
        ];
        var voucherDocumentType = "";
        voucherTypesArray.forEach(function (r) {
            if (r.name == data.voucher_type) {
                voucherDocumentType = r.value;
            }
        });
        this.loader.show();
        // Delete Accounts Ledger Records 
        var document_type = voucherDocumentType;
        var agencyName = data.agency_name;
        this.requestLoad.deleteAccountsTransactionsLedger(data.voucher_no, document_type, agencyName).subscribe(function (res) {
            _this.accounts.deleteAccountsTransactions(data._id).subscribe(function (res) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Deleted successfully.' });
                _this.getAccountsTransactions();
            }, function (err) {
                console.log(">>>>error", err);
            });
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AccountsTransactionsPage.prototype.getTruckNoByAgencyLedger = function () {
        var _this = this;
        this.truckNoList = [];
        var agencyName = this.saveForm.value.agency_name.agency_name ? this.saveForm.value.agency_name.agency_name : this.saveForm.value.agency_name;
        // this.loader.show();
        this.accounts.getTruckNoByAgencyLedger(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            _this.truckNoList = dataList;
            console.log("truck No List >>>>", _this.truckNoList);
            // this.loader.hide();
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AccountsTransactionsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-accounts-transactions',template:/*ion-inline-start:"D:\truck\src\pages\accounts-transactions\accounts-transactions.html"*/'<!--\n  Generated template for the AccountsTransactionsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n\n    <ion-toolbar>\n      <ion-title>Accounts Transactions</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="saveForm">\n\n    <div class="form-group">\n      <label class=" label">Agency Name</label>\n      <input\n        class="form-control"\n        ng2-auto-complete\n        [source]="agencyName.bind(this)"\n        list-formatter="agency_name"\n        formControlName="agency_name" \n        (change)= "getVoucherNo()"         \n      />\n    </div>\n  \n    <div class="form-group">\n      <label class=" label">Voucher Type</label>\n      <select class="form-control drop-down" name="voucher_type" formControlName="voucher_type" (change)= "getVoucherNo()" >\n        <option value="">Select Type</option>\n        <option *ngFor="let vt of voucherTypes" [ngValue]="vt">{{vt}}</option>\n      </select>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Voucher No</label>\n      <input type="number" [readonly]="isReadonly()" formControlName="voucher_no" class="form-control">\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Date</label>\n      <ion-item class="form-control">\n        <ion-datetime name="date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="date"></ion-datetime>\n      </ion-item>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Truck No</label>\n      <select class="form-control drop-down" name="truck_no" formControlName="truck_no" >\n          <option value="">Select Truck No</option>\n          <option *ngFor="let tnl of truckNoList" [ngValue]="tnl">{{tnl}}</option>\n        </select>\n    </div>\n\n    <!-- <div class="form-group">\n      <label class=" label">Account Head</label>\n      <select class="form-control drop-down" name="account_head" formControlName="account_head" (change)= "getVoucherNo()" >\n        <option value="">Select Account Head</option>\n        <option *ngFor="let ah of accountsHead" [ngValue]="ah">{{ah}}</option>\n      </select>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Payment Type</label>\n      <select class="form-control drop-down" name="payment_type" formControlName="payment_type" >\n        <option value="">Select Payment Type</option>\n        <option *ngFor="let mpt of mainPaymentTypes" [ngValue]="mpt">{{mpt}}</option>\n      </select>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Against</label>\n      <select class="form-control drop-down" name="against" formControlName="against" >\n        <option value="">Select Against</option>\n        <option *ngFor="let agst of againsts" [ngValue]="agst">{{agst}}</option>\n      </select>\n    </div> -->\n\n    <br /><hr />\n    \n    \n\n    <div formArrayName="accounts_data" class="transaction-name">            \n      <div *ngFor="let r of accountsData.controls; let i = index;">\n        <div [formGroupName]="i" class="width-full">\n\n          <!-- <div class="form-group">\n            <label class=" label">Account Name</label>\n            <select class="form-control drop-down" name="account_name" formControlName="account_name" >\n              <option value="">Select Account Name</option>\n              <option *ngFor="let mal of mainAccoutsList" [ngValue]="mal.account_name">{{mal.account_name}}</option>\n            </select>\n          </div> -->\n\n          <div class="form-group">\n            <label class=" label">Account Name</label>\n            <input\n              class="form-control"\n              ng2-auto-complete\n              [source]="accountsName.bind(this)"\n              list-formatter="account_name"\n              formControlName="account_name"         \n            />\n          </div>\n          \n\n          <div class="form-group">\n            <label class=" label">Debit</label>\n            <input type="number" placeholder="" formControlName="account_debit" class="form-control" (change)="calculationDrCr()">\n          </div>\n      \n          <div class="form-group">\n            <label class=" label">Credit</label>\n            <input type="number" placeholder="" formControlName="account_credit" class="form-control" (change)="calculationDrCr()">\n          </div>\n\n        <div class="add-minus-btns" padding>\n          <button class="btn-size" ion-button color="secondary" (click)="addTo()"><ion-icon name="add"></ion-icon></button>\n          <button class="btn-size" ion-button color="danger" (click)="removeTo(i)"><ion-icon name="close"></ion-icon></button>\n        </div>\n        </div>\n      </div>\n    </div> \n\n    <hr />\n\n    <div class="form-group">\n      <label class=" label">Naration</label>\n      <input type="text" placeholder="" formControlName="naration" class="form-control">\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Debit</label>\n      <input type="number" [readonly]="isReadonly()" placeholder="" formControlName="debit" class="form-control">\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Credit</label>\n      <input type="number" [readonly]="isReadonly()" placeholder="" formControlName="credit" class="form-control">\n    </div>\n\n\n    <br>\n    <div class="width-full" padding>\n    <button ion-button (click)="save()" type="submit" expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Save</button>\n    <button ion-button class="button-color" (click)="reset()" type="button" expand="block"><ion-icon name="refresh"></ion-icon>&nbsp;&nbsp;Reset</button>\n</div>\n  </form>\n\n  <form [formGroup]="editForm">\n    <br><br><br>\n    <div class="width-full btm-margin">\n    <b> Prepared By Administrator </b>\n    </div>\n    <br><br>\n    <div class="main-div width-full">\n      <table border="0">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Agency Name</th>\n            <th>Voucher Type</th>\n            <th>Voucher No.</th>\n            <!-- <th>Payment Type</th> -->\n            <th>Naration</th>\n            <th>Username</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let mat of mainAccountsTransactions">\n            <td>{{ mat.date_frmt }}</td>\n            <td>{{ mat.agency_name }}</td>\n\n            <td *ngIf="display">{{ mat.voucher_type }}</td>\n            <!-- <td *ngIf="editData">\n\n              <div class="form-group">\n                <select class="form-control drop-down" name="edit_voucher_type" formControlName="edit_voucher_type" (change)= "getVoucherNo()" >\n                  <option value="">Select Type</option>\n                  <option *ngFor="let vt of voucherTypes" [ngValue]="vt">{{vt}}</option>\n                </select>\n              </div>\n\n            </td> -->\n\n            <td>{{ mat.voucher_no }}</td>\n\n            <!-- <td *ngIf="display">{{ mat.payment_type }}</td> -->\n            <!-- <td *ngIf="editData">\n\n              <div class="form-group">\n                <select class="form-control drop-down" name="edit_payment_type" formControlName="edit_payment_type" >\n                  <option value="">Select Payment Type</option>\n                  <option *ngFor="let mpt of mainPaymentTypes" [ngValue]="mpt">{{mpt}}</option>\n                </select>\n              </div>\n\n            </td> -->\n\n            <td *ngIf="display">{{ mat.naration }}</td>\n            <!-- <td *ngIf="editData">\n\n              <div class="form-group">\n                <input type="text" placeholder="" formControlName="edit_naration" class="form-control">\n              </div>\n\n            </td> -->\n\n\n            <td>{{ mat.user_name }}</td>\n            <td>\n              <button ion-button class="edit-button" (click)="edit(mat)" type="button" expand="block">Edit</button>\n              <!-- <span *ngIf="editData"> <button ion-button class="button-color" (click)="cancel()" type="button" expand="block">Cancel</button> </span>\n              <span *ngIf="editData"> <button ion-button class="update-button" (click)="update(mat)" type="button" expand="block">Update</button> </span> -->\n              <button ion-button class="delete-button" (click)="delete(mat)" type="button" expand="block">Delete</button>\n            </td>\n            \n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\accounts-transactions\accounts-transactions.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_2__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_8__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_7__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_6__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_9__providers_accounts__["a" /* Accounts */],
            __WEBPACK_IMPORTED_MODULE_10__providers_request_load__["a" /* RequestLoad */]])
    ], AccountsTransactionsPage);
    return AccountsTransactionsPage;
}());

//# sourceMappingURL=accounts-transactions.js.map

/***/ }),

/***/ 171:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageTransportPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_map__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};









/**
 * Generated class for the ManageTransportPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageTransportPage = /** @class */ (function () {
    function ManageTransportPage(navCtrl, navParams, admin, actionSheetController, loader, mapsAPILoader, ngZone) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.admin = admin;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.lists = [];
        this.citiesList = [];
        // Search query for truck no list
        this.searchTransporterAndCity = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.admin.searchTransportsAndCity(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_6_rxjs__["Observable"].of([]);
            }
        };
    }
    ManageTransportPage.prototype.ionViewDidLoad = function () {
        // this.getList();
        this.getCitiesList();
        console.log('ionViewDidLoad ManageTransportPage');
    };
    ManageTransportPage.prototype.ngOnInit = function () {
        // this.zoom = 4;
        // this.latitude = 39.8282;
        // this.longitude = -98.5795;
        // //create search FormControl
        this.searchControl = new __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormControl"]();
        // this.mapsAPILoader.load().then(() => {
        //   let autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {
        //     types: ["address"]
        //   });
        //   autocomplete.addListener("place_changed", () => {
        //     this.ngZone.run(() => {
        //       //get the place result
        //       let place: google.maps.places.PlaceResult = autocomplete.getPlace();
        //       console.log("place   >>>>>>", place);
        //       console.log("vicinity   >>>>>>", place.vicinity);
        //       // //verify result
        //       // if (place.geometry === undefined || place.geometry === null) {
        //       //   return;
        //       // }
        //     });
        //   });
        // });
    };
    ManageTransportPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_8__home_home__["a" /* HomePage */]);
    };
    ManageTransportPage.prototype.getCityDetails = function (c) {
        var _this = this;
        this.loader.show();
        this.admin.getTransportListByCity(c.city).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.lists = data.results;
            _this.lists.forEach(function (r) {
                var locations = [];
                r.route_desired.forEach(function (l) {
                    locations.push(l.location);
                });
                console.log("locations >>", locations.toString());
                r.route_preferred = locations.toString();
            });
            console.log("lists >>", _this.lists);
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageTransportPage.prototype.getTNDetails = function (c) {
        var _this = this;
        this.loader.show();
        this.admin.getTransportListByName(c).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.lists = data.results;
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageTransportPage.prototype.getCitiesList = function () {
        var _this = this;
        this.loader.show();
        this.admin.getTransportCitiesList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.citiesList = data.results;
        }, function (err) {
            console.log("error");
            _this.loader.hide();
        });
    };
    // getList() {
    //   this.loader.show();
    //   this.admin.getTransportList().subscribe((res: any) => {
    //     this.loader.hide();
    //     let data = res.json();
    //     this.lists = data.result;
    //   }, err => {
    //     this.loader.hide();
    //     console.log("error", err);
    //   });
    // }
    ManageTransportPage.prototype.edit = function (transportData) {
        this.navCtrl.push('EditTransportDetailsPage', { data: transportData });
    };
    ManageTransportPage.prototype.onSelect = function (e) {
        console.log("e >>>>", e);
        if (e.name == "city") {
            this.getCityDetails({ "city": e.value });
        }
        if (e.name == "transport_name") {
            this.getTNDetails(e.value);
        }
    };
    ManageTransportPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add Transporter',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push('AddTransporterPage');
                return [2 /*return*/];
            });
        });
    };
    ManageTransportPage.prototype.presentActionSheet = function (transportData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit transport list',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push('EditTransportDetailsPage', { data: transportData });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deleteApi(transportData);
                                        }
                                    }, {
                                        text: 'Block',
                                        icon: 'ios-archive',
                                        handler: function () {
                                            console.log('Share clicked');
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageTransportPage.prototype.deleteApi = function (id) {
        var _this = this;
        var transporter_id = id._id;
        console.log("id  >>>", transporter_id);
        this.admin.deleteTransporter(transporter_id).subscribe(function (res) {
            _this.navCtrl.push('ManageTransportPage');
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], ManageTransportPage.prototype, "searchElementRef", void 0);
    ManageTransportPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-transport',template:/*ion-inline-start:"D:\truck\src\pages\manage-transport\manage-transport.html"*/'<!--\n  Generated template for the ManageTransportPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Transporters</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n    \n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <div class="form-group has-search">\n    <!-- <input placeholder="search for location" autocorrect="off" autocapitalize="off" spellcheck="off" type="text" class="form-control" #search [formControl]="searchControl"> -->\n    <span class="fa fa-search form-control-search"></span>\n    <input placeholder=" Search Transporter or Location"\n      class="form-control"\n      ng2-auto-complete\n      [formControl]="searchControl"\n      [source]="searchTransporterAndCity.bind(this)"\n      list-formatter="value"\n      (valueChanged)="onSelect($event)" \n    /> \n  </div>\n\n  <ion-scroll scrollX="true" zoom="false" no-padding>\n    <ion-row text-center nowrap>\n      <ion-col col-3 *ngFor="let c of citiesList">\n        <div (click)="getCityDetails(c)">\n          <div class="div-round">\n              <i class="fa fa-building"></i>\n          </div>\n          <div class="text">\n            <b>{{ c.city }}</b>\n          </div>\n        </div>\n      </ion-col>\n    </ion-row>\n  </ion-scroll>\n\n  <ion-item-divider></ion-item-divider>\n\n  <ion-card *ngFor="let list of lists; let i = index">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(list, $event)"></ion-icon>\n    <!-- (click)="edit(list)" -->\n    <ion-card-content>\n      \n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ list.sr_no }} {{ list.transport_name  }}</span><br>\n        <!-- <span class="transporter-name">Transporter Name: {{ list.transport_name }}</span><br> -->\n      </p>\n      <div padding>\n\n        <!-- <p>\n          <span><b>Owner Name:</b></span>\n          <span class="fright"><b>Contact Person:</b></span>\n        </p>\n        <p>\n          <span>{{ list.owner_name  }}</span>\n          <span class="fright">{{ list.contact_person }}</span>\n        </p> -->\n\n        <!-- <p>\n          <span>{{ list.omobile_no_1 }}</span>\n          <span class="fright">{{ list.cmobile_no_1 }}</span>\n        </p> -->\n\n        <ion-row>\n\n          <ion-col col-6>\n              <span><b>Owner Name:</b></span>\n          </ion-col>\n          <ion-col col-6>\n              <span class="fright"><b>Contact Person:</b></span>\n          </ion-col>\n\n          <ion-col col-6>\n              <span>{{ list.owner_name  }}</span>\n          </ion-col>\n          <ion-col col-6>\n              <span class="fright">{{ list.contact_person }}</span>\n          </ion-col>\n\n          <ion-col col-6>\n              <span>{{ list.omobile_no_1 }}</span>\n          </ion-col>\n          <ion-col col-6>\n              <span class="fright">{{ list.cmobile_no_1 }}</span>\n          </ion-col>\n\n          <ion-col col-12>\n            <b>Address:</b><br>\n            <span *ngFor="let add of list.address">\n              <p>{{add.address_line_1 + \', \' + add.address_line_2 }}</p>\n              <p>{{ add.city + \' - \' + add.pincode }}</p>\n              <p>{{ add.state }}</p>\n            </span>\n          </ion-col>\n        </ion-row>\n\n        <p>\n          <span><b>Route Preferred:</b> {{ list.route_preferred }}</span>\n        </p>\n\n        <ion-row text-center nowrap>\n          <ion-col col-4>\n            <button ion-button color="secondary"><a href="tel: {{ list.cmobile_no_1 }}" style="color: #ffffff"><ion-icon name="call"> <b class="button-font">Call</b></ion-icon></a></button>\n          </ion-col>\n          <ion-col col-4>\n            <button ion-button color="secondary"><a href="https://www.google.com/maps" style="color: #ffffff" target="_blank"><i class="fa fa-map-marker" aria-hidden="true"></i>&nbsp;<b class="button-font">Direction</b></a></button>\n          </ion-col>\n          <ion-col col-4>\n            <button ion-button color="secondary"><a href="{{ list.website }}" style="color: #ffffff" target="_blank"><ion-icon name="globe"> <b class="button-font">Website</b></ion-icon></a></button>\n          </ion-col>\n        </ion-row>\n\n      </div>\n    </ion-card-content>\n  </ion-card>    \n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-transport\manage-transport.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], ManageTransportPage);
    return ManageTransportPage;
}());

//# sourceMappingURL=manage-transport.js.map

/***/ }),

/***/ 182:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageCompanyListPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};







/**
 * Generated class for the ManageCompanyListPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageCompanyListPage = /** @class */ (function () {
    function ManageCompanyListPage(navCtrl, navParams, admin, actionSheetController, loader) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.admin = admin;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.lists = [];
        this.citiesList = [];
        // Search query for Company  list
        this.searchCompanyAndCity = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.admin.searchCompaniesAndCity(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].of([]);
            }
        };
    }
    ManageCompanyListPage.prototype.ionViewDidLoad = function () {
        // this.getList();
        this.getCitiesList();
    };
    ManageCompanyListPage.prototype.ngOnInit = function () {
        this.searchControl = new __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormControl"]();
    };
    ManageCompanyListPage.prototype.getCitiesList = function () {
        var _this = this;
        this.loader.show();
        this.admin.getCompaniesCitiesList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.citiesList = data.results;
            console.log("citiesList >>>>>>", _this.citiesList);
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageCompanyListPage.prototype.getCpyDetails = function (c) {
        var _this = this;
        this.loader.show();
        this.admin.getCompanyListByName(c).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.lists = data.results;
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    // getList() {
    //   this.loader.show();
    //   this.admin.getCompanyList().subscribe((res: any) => {
    //     this.loader.hide();
    //     let data = res.json();
    //     this.lists = data.results;
    //   }, err => {
    //     this.loader.hide();
    //     console.log("error");
    //   });
    // }
    ManageCompanyListPage.prototype.edit = function (companyData) {
        this.navCtrl.push('EditCompanyDetailsPage', { data: companyData });
    };
    ManageCompanyListPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */]);
    };
    ManageCompanyListPage.prototype.getCityDetails = function (c) {
        var _this = this;
        this.loader.show();
        this.admin.getCompanyListByCity(c.city).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.lists = data.results;
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageCompanyListPage.prototype.onSelect = function (e) {
        console.log("e >>>>", e);
        if (e.name == "city") {
            this.getCityDetails({ "city": e.value });
        }
        if (e.name == "company_name") {
            this.getCpyDetails(e.value);
        }
    };
    ManageCompanyListPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add Company',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push('AddCompanyPage');
                return [2 /*return*/];
            });
        });
    };
    ManageCompanyListPage.prototype.presentActionSheet = function (companyData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit company list',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push('EditCompanyDetailsPage', { data: companyData });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deleteApi(companyData);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageCompanyListPage.prototype.deleteApi = function (id) {
        var _this = this;
        var company_id = id._id;
        console.log("id  >>>", company_id);
        this.admin.deleteCompany(company_id).subscribe(function (res) {
            _this.navCtrl.push('ManageCompanyListPage');
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageCompanyListPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-company-list',template:/*ion-inline-start:"D:\truck\src\pages\manage-company-list\manage-company-list.html"*/'<!--\n  Generated template for the ManageCompanyListPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n\n    <ion-toolbar>\n      <ion-title>Companies</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n    \n  <div class="form-group has-search">\n      <span class="fa fa-search form-control-search"></span>\n    <!-- <input placeholder="search for location" autocorrect="off" autocapitalize="off" spellcheck="off" type="text" class="form-control" #search [formControl]="searchControl"> -->\n    <input placeholder=" Search Company or Location"\n      class="form-control"\n      ng2-auto-complete\n      [formControl]="searchControl"\n      [source]="searchCompanyAndCity.bind(this)"\n      list-formatter="value"\n      (valueChanged)="onSelect($event)" /> \n  </div>\n\n  <ion-scroll scrollX="true" zoom="false" no-padding>\n    <ion-row text-center nowrap>\n      <ion-col col-3 *ngFor="let c of citiesList">\n        <div (click)="getCityDetails(c)">\n          <div class="div-round">\n            <i class="fa fa-building"></i>\n          </div>\n          <div class="text">\n            <b>{{ c.city }}</b>\n          </div>\n        </div>\n      </ion-col>\n    </ion-row>\n  </ion-scroll>\n\n  <ion-item-divider></ion-item-divider>\n\n  <ion-card *ngFor="let list of lists; let i = index" >\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(list, $event)"></ion-icon>\n    <!-- (click)="edit(list)" -->\n    <ion-card-content >\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ i + 1 }} {{ list.company_name }}</span><br>\n        <!-- <span class="company-name">Company Name: {{ list.company_name }}</span><br> -->\n      </p>\n      <div padding>\n        <!-- <p>\n          <span><b>Owner Name:</b></span>\n          <span class="fright"><b>Contact Person:</b></span>\n        </p>\n        <p>\n          <span>{{ list.owner_name  }}</span>\n          <span class="fright">{{ list.contact_person }}</span>\n        </p>\n\n        <p>\n          <span>{{ list.omobile_no_1 }}</span>\n          <span class="fright">{{ list.mobile_no_1 }}</span>\n        </p> -->\n\n        <ion-row>\n          <ion-col col-6>\n              <span><b>Owner Name:</b></span><br>\n              <span>{{ list.owner_name  }}</span><br>\n              <span>{{ list.omobile_no_1 }}</span>\n          </ion-col>\n          <ion-col col-6>\n              <span><b>Contact Person:</b></span>          <!-- class="fright" --><br>\n              <span>{{ list.contact_person }}</span><br>\n              <span>{{ list.mobile_no_1 }}</span>\n          </ion-col>\n\n          <!-- <ion-col col-6>\n              <span>{{ list.owner_name  }}</span>\n          </ion-col>\n          <ion-col col-6>\n              <span>{{ list.contact_person }}</span>\n          </ion-col>\n\n          <ion-col col-6>\n              <span>{{ list.omobile_no_1 }}</span>\n          </ion-col>\n          <ion-col col-6>\n              <span>{{ list.mobile_no_1 }}</span>\n          </ion-col> -->\n          <ion-col col-6>\n            <b>Address:</b><br>\n            <span *ngFor="let add of list.address">\n              <p>{{ add.address_line_1 + \', \' + add.address_line_2 }}</p>\n              <p>{{ add.city + \' - \' + add.pincode }}</p>\n              <p>{{ add.state }}</p>\n            </span>\n          </ion-col>\n          <!-- <ion-col col-6> -->\n            <!-- <button ion-button color="secondary" class="fright"><a href="tel: {{ list.cmobile_no_1 }}" style="color: #ffffff"><ion-icon name="call"> <b class="button-font">Call</b></ion-icon></a></button><br> -->\n            <!-- <button ion-button color="secondary" class="fright"><a href="https://www.google.com/maps" style="color: #ffffff" target="_blank"><ion-icon name="arrow-dropleft-circle"> <b class="button-font">Direction</b></ion-icon></a></button><br>\n            <button ion-button color="secondary" class="fright"><a href="{{ list.website }}" style="color: #ffffff" target="_blank"><ion-icon name="globe"> <b class="button-font">Website</b></ion-icon></a></button>\n          </ion-col> -->\n        </ion-row>\n\n        <ion-row text-center nowrap>\n          <ion-col col-4>\n            <button ion-button color="secondary"><a href="tel: {{ list.cmobile_no_1 }}" style="color: #ffffff"><ion-icon name="call"> <b class="button-font">Call</b></ion-icon></a></button>\n          </ion-col>\n          <ion-col col-4>\n            <button ion-button color="secondary"><a href="https://www.google.com/maps" style="color: #ffffff" target="_blank"><i class="fa fa-map-marker" aria-hidden="true"></i>&nbsp;<b class="button-font">Direction</b></a></button>\n          </ion-col>\n          <!-- <ion-col col-4>\n            <button ion-button color="secondary"><a href="{{ list.website }}" style="color: #ffffff" target="_blank"><ion-icon name="globe"> <b class="button-font">Website</b></ion-icon></a></button>\n          </ion-col> -->\n        </ion-row>\n      </div>      \n    </ion-card-content>\n  </ion-card>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-company-list\manage-company-list.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */]])
    ], ManageCompanyListPage);
    return ManageCompanyListPage;
}());

//# sourceMappingURL=manage-company-list.js.map

/***/ }),

/***/ 183:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageTruckListPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








/**
 * Generated class for the ManageTruckListPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageTruckListPage = /** @class */ (function () {
    function ManageTruckListPage(navCtrl, navParams, admin, actionSheetController, loader, trucks, fb) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.admin = admin;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.trucks = trucks;
        this.fb = fb;
        this.lists = [];
        this.show = false;
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_4_rxjs__["Observable"].of([]);
            }
        };
        this.truckListFrom = this.fb.group({
            truck_no: ['']
        });
    }
    ManageTruckListPage.prototype.ionViewDidLoad = function () {
        // this.getList();
        console.log('ionViewDidLoad ManageTransportPage');
    };
    ManageTruckListPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_7__home_home__["a" /* HomePage */]);
    };
    ManageTruckListPage.prototype.onSelectTruck = function (e) {
        var _this = this;
        console.log(">>>>>eeeee", e);
        this.loader.show();
        this.admin.getTruckData(e.truck_no).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.lists = data.result;
            _this.show = true;
            console.log(">>>>>>>truckList", _this.lists);
        }, function (err) {
            _this.loader.hide();
            console.log("error", err);
        });
    };
    // getList() {
    //   this.loader.show();
    //   this.admin.getTruckList().subscribe((res: any) => {
    //     this.loader.hide();
    //     let data = res.json();
    //     this.lists = data.result;
    //   }, err => {
    //     this.loader.hide();
    //     console.log("error", err);
    //   });
    // }
    ManageTruckListPage.prototype.edit = function (truckData) {
        console.log(">>>>Data", truckData);
        this.navCtrl.push('EditTruckDetailsPage', { data: truckData });
    };
    ManageTruckListPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add Truck',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push('AdminPrivilegesAddTruckPage');
                return [2 /*return*/];
            });
        });
    };
    ManageTruckListPage.prototype.presentActionSheet = function (truckData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit truck list',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push('EditTruckDetailsPage', { data: truckData });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deleteApi(truckData);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageTruckListPage.prototype.deleteApi = function (id) {
        var _this = this;
        var truck_id = id._id;
        console.log("id  >>>", truck_id);
        this.admin.deleteTruck(truck_id).subscribe(function (res) {
            _this.navCtrl.push('ManageTruckListPage');
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageTruckListPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-truck-list',template:/*ion-inline-start:"D:\truck\src\pages\manage-truck-list\manage-truck-list.html"*/'<!--\n  Generated template for the ManageTruckListPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Trucks</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  \n  <form [formGroup]="truckListFrom">\n    <div class="form-group has-search">\n      <span class="fa fa-search form-control-search"></span>\n      <!-- <label class=" label">Enter Truck No. </label>                  -->\n      <input placeholder=" Enter Truck No"\n        class="form-control"\n        ng2-auto-complete\n        formControlName="truck_no"\n        [source]="truckNo.bind(this)"\n        list-formatter="truck_no"\n        (valueChanged)="onSelectTruck($event)" \n      /> \n    </div>\n  </form>\n  \n  <ion-item-divider></ion-item-divider>\n\n  <div *ngIf="show">\n    <ion-card *ngFor="let list of lists; let i = index" >\n        <ion-icon name="more" class="more fright" (click)="presentActionSheet(list, $event)"></ion-icon>\n        <ion-card-content (click)="edit(list)">\n          <p class="card-header">\n            <span class="sr-no"><ion-icon name="cube"></ion-icon> Serial No. {{ i + 1 }}</span><br>\n            <span class="truck-name">Truck No: {{ list.truck_no }}</span><br>\n          </p>\n          <div padding>\n            <ion-label><strong>Truck Details</strong></ion-label>\n            <p>Transporter: {{ list.transport_id.transport_name }}</p>\n            <p>Driver: {{ list.driver_id.driver_name }}</p>\n            <p>Type: {{ list.type }}</p>\n            <p>Capacity: {{ list.capacity }}</p>\n          </div>\n        </ion-card-content>\n      </ion-card>\n    </div>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-truck-list\manage-truck-list.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_6__angular_forms__["FormBuilder"]])
    ], ManageTruckListPage);
    return ManageTruckListPage;
}());

//# sourceMappingURL=manage-truck-list.js.map

/***/ }),

/***/ 184:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageDriverPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};






/**
 * Generated class for the ManageDriverPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageDriverPage = /** @class */ (function () {
    function ManageDriverPage(navCtrl, navParams, admin, actionSheetController, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.admin = admin;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.lists = [];
    }
    ManageDriverPage.prototype.ionViewDidLoad = function () {
        this.getList();
        console.log('ionViewDidLoad ManageDriverPage');
    };
    ManageDriverPage.prototype.getList = function () {
        var _this = this;
        this.loader.show();
        this.admin.getDriverList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            data.result.forEach(function (element) {
                element.expiry_date = __WEBPACK_IMPORTED_MODULE_4_moment__(element.expiry_date).format('DD-MM-YYYY');
            });
            _this.lists = data.result;
            _this.lists.forEach(function (r) {
                var locations = [];
                r.route_desired.forEach(function (l) {
                    locations.push(l.location);
                });
                console.log("locations >>", locations.toString());
                r.route_preferred = locations.toString();
            });
            console.log("lists >>", _this.lists);
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageDriverPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */]);
    };
    ManageDriverPage.prototype.edit = function (driverData) {
        this.navCtrl.push('EditDriverDetailsPage', { data: driverData });
    };
    ManageDriverPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add Driver',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push('AddDriverPage');
                return [2 /*return*/];
            });
        });
    };
    ManageDriverPage.prototype.presentActionSheet = function (driverData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit driver list',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push('EditDriverDetailsPage', { data: driverData });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deleteApi(driverData);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageDriverPage.prototype.deleteApi = function (id) {
        var _this = this;
        var driver_id = id._id;
        console.log("id  >>>", driver_id);
        this.admin.deleteDriver(driver_id).subscribe(function (res) {
            _this.navCtrl.push('ManageDriverPage');
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageDriverPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-driver',template:/*ion-inline-start:"D:\truck\src\pages\manage-driver\manage-driver.html"*/'<!--\n  Generated template for the ManageDriverPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Drivers</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <ion-card *ngFor="let list of lists; let i = index">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(list, $event)"></ion-icon>\n    <ion-card-content (click)="edit(list)">\n\n      <div class="card-header">\n        <ion-grid>\n          <ion-row>\n            <ion-col col-3>\n              <div class="image-div">\n                <img  class="image-hw" [src]="list.driver_photo">\n              </div>\n            </ion-col>\n            <ion-col col-8>\n              <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ i + 1 }}</span><br>\n              <span class="driver-name">{{ list.driver_name }}</span><br>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n        \n      </div>\n      <div padding>\n\n        <ion-row>\n          <ion-col col-6>\n            <span><b>Licence No</b></span><br>\n            <span>{{ list.licence_no }}</span>\n            <p><a [href]="list.licence_photo" target="_blank">Download Licence</a></p>\n          </ion-col>\n          <ion-col col-6>\n            <span><b>Expiry Date</b></span><br>\n            <span>{{ list.expiry_date }}</span>\n          </ion-col>\n\n          <!-- <ion-col col-7>\n            <span>{{ list.licence_no }}</span>\n          </ion-col>\n          <ion-col col-5>\n            <span class="fright">{{ list.expiry_date }}</span>\n          </ion-col> -->\n\n          <!-- <ion-col col-12> -->\n            \n          <!-- </ion-col> -->\n\n          <ion-col col-12>\n            <p><b>Route Preferred: </b> {{ list.route_preferred}}</p>\n          </ion-col>\n        </ion-row>\n      </div>\n\n    </ion-card-content>\n  </ion-card>\n  \n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-driver\manage-driver.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */]])
    ], ManageDriverPage);
    return ManageDriverPage;
}());

//# sourceMappingURL=manage-driver.js.map

/***/ }),

/***/ 185:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageAgenciesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};







/**
 * Generated class for the ManageAgenciesPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageAgenciesPage = /** @class */ (function () {
    function ManageAgenciesPage(navCtrl, navParams, admin, actionSheetController, loader) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.admin = admin;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.lists = [];
        this.citiesList = [];
        // Search query for Agency list
        this.searchAgencyAndCity = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.admin.searchAgenciesAndCity(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].of([]);
            }
        };
    }
    ManageAgenciesPage.prototype.ionViewDidLoad = function () {
        // this.getList();
        this.getCitiesList();
    };
    ManageAgenciesPage.prototype.ngOnInit = function () {
        this.searchControl = new __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormControl"]();
    };
    ManageAgenciesPage.prototype.getCitiesList = function () {
        var _this = this;
        this.loader.show();
        this.admin.getAgenciesCitiesList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.citiesList = data.results;
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    // getList() {
    //   this.loader.show();
    //   this.admin.getAgencies().subscribe((res: any) => {
    //     this.loader.hide();
    //     let data = res.json();
    //     this.lists = data.results;
    //   }, err => {
    //     this.loader.hide();
    //     console.log("error");
    //   });
    // }
    ManageAgenciesPage.prototype.edit = function (agencyData) {
        this.navCtrl.push('EditAgenciesDetailsPage', { data: agencyData });
    };
    ManageAgenciesPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */]);
    };
    ManageAgenciesPage.prototype.getCityDetails = function (c) {
        var _this = this;
        this.loader.show();
        this.admin.getAgencyListByCity(c.city).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.lists = data.results;
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageAgenciesPage.prototype.getAgyDetails = function (c) {
        var _this = this;
        this.loader.show();
        this.admin.getAgencyListByName(c).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.lists = data.results;
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageAgenciesPage.prototype.onSelect = function (e) {
        console.log("e >>>>", e);
        if (e.name == "city") {
            this.getCityDetails({ "city": e.value });
        }
        if (e.name == "agency_name") {
            this.getAgyDetails(e.value);
        }
    };
    ManageAgenciesPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add agency',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push('AddAgenciesPage');
                return [2 /*return*/];
            });
        });
    };
    ManageAgenciesPage.prototype.presentActionSheet = function (agencyData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit agency list',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push('EditAgenciesDetailsPage', { data: agencyData });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deleteApi(agencyData);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageAgenciesPage.prototype.deleteApi = function (id) {
        var _this = this;
        var agency_id = id._id;
        console.log("id  >>>", agency_id);
        this.admin.deleteAgency(agency_id).subscribe(function (res) {
            _this.navCtrl.push('ManageAgenciesPage');
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageAgenciesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-agencies',template:/*ion-inline-start:"D:\truck\src\pages\manage-agencies\manage-agencies.html"*/'<!--\n  Generated template for the ManageAgenciesPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Agencies</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <!-- <div padding>\n    <button ion-button block expand="block" size="large" (click)="add()"><ion-icon name="add"></ion-icon>&nbsp;&nbsp;Add</button>  \n  </div> -->\n    \n  <div class="form-group has-search">\n    <!-- <input placeholder="search for location" autocorrect="off" autocapitalize="off" spellcheck="off" type="text" class="form-control" #search [formControl]="searchControl"> -->\n    \n    <span class="fa fa-search form-control-search"></span>\n    <input placeholder="Search Agency or Location"\n      class="form-control"\n      ng2-auto-complete\n      [formControl]="searchControl"\n      [source]="searchAgencyAndCity.bind(this)"\n      list-formatter="value"\n      (valueChanged)="onSelect($event)" /> \n  </div>\n\n  <ion-scroll scrollX="true" zoom="false" no-padding>\n    <ion-row text-center nowrap>\n      <ion-col col-3 *ngFor="let c of citiesList">\n        <div (click)="getCityDetails(c)">\n          <div class="div-round">\n              <i class="fa fa-building"></i>\n          </div>\n          <div class="text">\n            <b>{{ c.city }}</b>\n          </div>\n        </div>\n      </ion-col>\n    </ion-row>\n  </ion-scroll>\n\n  <ion-item-divider></ion-item-divider>\n\n  <ion-card *ngFor="let list of lists; let i = index">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(list, $event)"></ion-icon>\n    <ion-card-content  (click)="edit(list)">\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ i + 1 }} {{ list.agency_name  }}</span><br>\n      </p>\n\n      <div padding>\n        <ion-row>\n          <ion-col col-6>\n            <span><b>Owner Name:</b></span><br>\n            <span>{{ list.owner_name  }}</span><br>\n            <span>{{ list.omobile_no_1 }}</span>\n          </ion-col>\n          <ion-col col-6>\n            <span><b>Contact Person:</b></span><br>\n            <span>{{ list.contact_person }}</span><br>\n            <span>{{ list.cmobile_no_1 }}</span>\n          </ion-col>\n          <ion-col col-12>\n              <b>Address:</b><br>\n              <span *ngFor="let add of list.address">\n                <p>{{add.address_line_1 + \', \' + add.address_line_2 }}</p>\n                <p>{{ add.city + \' - \' + add.pincode }}</p>\n                <p>{{ add.state }}</p>\n              </span>\n          </ion-col>\n        </ion-row>\n\n\n        <!-- <p>\n          <span><b>Owner Name:</b></span>\n          <span class="fright"><b>Contact Person:</b></span>\n        </p>\n\n        <p>\n          <span>{{ list.owner_name  }}</span>\n          <span class="fright">{{ list.contact_person }}</span>\n        </p>\n\n        <p>\n          <span>{{ list.omobile_no_1 }}</span>\n          <span class="fright">{{ list.cmobile_no_1 }}</span>\n        </p>\n\n        <p>\n          <b>Address:</b><br>\n          <span *ngFor="let add of list.address">\n            <p>{{add.address_line_1 + \', \' + add.address_line_2 }}</p>\n            <p>{{ add.city + \' - \' + add.pincode }}</p>\n            <p>{{ add.state }}</p>\n          </span>\n        </p> -->\n          <!-- <ion-row>\n            <ion-col col-6>\n                <span><b>Owner Name:</b></span>\n            </ion-col>\n            <ion-col col-6>\n                <span class="fright"><b>Contact Person:</b></span>\n            </ion-col>\n  \n            <ion-col col-6>\n                <span>{{ list.owner_name  }}</span>\n            </ion-col>\n            <ion-col col-6>\n                <span class="fright">{{ list.contact_person }}</span>\n            </ion-col>\n  \n            <ion-col col-6>\n                <span>{{ list.omobile_no_1 }}</span>\n            </ion-col>\n            <ion-col col-6>\n                <span class="fright">{{ list.cmobile_no_1 }}</span>\n            </ion-col>\n\n\n            <ion-col col-12>\n              <b>Address:</b><br>\n              <span *ngFor="let add of list.address">\n                <p>{{add.address_line_1 + \', \' + add.address_line_2 }}</p>\n                <p>{{ add.city + \' - \' + add.pincode }}</p>\n                <p>{{ add.state }}</p>\n              </span>\n            </ion-col>\n          </ion-row> -->\n      </div>\n      \n    </ion-card-content>\n  </ion-card>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-agencies\manage-agencies.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */]])
    ], ManageAgenciesPage);
    return ManageAgenciesPage;
}());

//# sourceMappingURL=manage-agencies.js.map

/***/ }),

/***/ 186:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageRequestLoadPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__match_company_list_match_company_list__ = __webpack_require__(446);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__edit_request_load_edit_request_load__ = __webpack_require__(448);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__manage_post_load_add_post_load_add_post_load__ = __webpack_require__(187);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__loads_availability_loads_availability__ = __webpack_require__(194);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__manage_deal_final_deal_final_deal_final__ = __webpack_require__(195);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};












/**
 * Generated class for the ManageRequestLoadPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageRequestLoadPage = /** @class */ (function () {
    function ManageRequestLoadPage(navCtrl, navParams, requestLoad, actionSheetController, admin, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.status = ['Pending', 'Deal Final', 'Unsuccess'];
        this.dataList = [];
    }
    ManageRequestLoadPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManageRequestLoadPage');
    };
    ManageRequestLoadPage.prototype.ngOnInit = function () {
        this.getRequestLoadList();
    };
    ManageRequestLoadPage.prototype.edit = function (data) {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__edit_request_load_edit_request_load__["a" /* EditRequestLoadPage */], { "data": data });
    };
    ManageRequestLoadPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add Request Load',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push('RequestLoadPage');
                return [2 /*return*/];
            });
        });
    };
    ManageRequestLoadPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_8__home_home__["a" /* HomePage */]);
    };
    ManageRequestLoadPage.prototype.presentActionSheet = function (data, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Load Available',
                                        icon: 'cube',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_9__loads_availability_loads_availability__["a" /* LoadsAvailabilityPage */]);
                                        }
                                    }, {
                                        text: 'Post Load',
                                        icon: 'add',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__manage_post_load_add_post_load_add_post_load__["a" /* AddPostLoadPage */]);
                                        }
                                    }, {
                                        text: 'See Companies',
                                        icon: 'ios-information-circle-outline',
                                        handler: function () {
                                            console.log("data >>>", data);
                                            // "loading_place": data.loading_place,
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__match_company_list_match_company_list__["a" /* MatchCompanyListPage */], { "srno": data.srno, "id": data._id, "transporter_name": data.transporter_name, "truck_no": data.truck_no, "from": data.from, "to": data.destinations_str });
                                        }
                                    }, {
                                        text: 'Edit Request Load',
                                        icon: 'ios-create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__edit_request_load_edit_request_load__["a" /* EditRequestLoadPage */], { "data": data });
                                        }
                                    }, {
                                        text: 'Deal Final',
                                        icon: 'checkmark',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__manage_deal_final_deal_final_deal_final__["a" /* DealFinalPage */], { "requestData": data });
                                        }
                                    }, {
                                        text: 'Remove',
                                        icon: 'ios-trash',
                                        handler: function () {
                                            _this.deleteApi(data);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageRequestLoadPage.prototype.getRequestLoadList = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getRequestLoad().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            var i = 1;
            data.results.forEach(function (element) {
                element.srno = i;
                element.createdDate = __WEBPACK_IMPORTED_MODULE_10_moment__(element.date, 'DD-MM-YYYY').format('DD-MM-YYYY');
                i = i + 1;
            });
            console.log('Data >>>>>>>', data.results);
            _this.dataList = data.results;
            _this.dataList.forEach(function (r) {
                var str = [];
                r.destinations.forEach(function (t) {
                    str.push(t.to);
                });
                console.log("str >>>>>", str);
                r.status = r.status ? r.status : 'Pending';
                r.destinations_str = str;
                var negotiate = "";
                if (r.negotiate[0]) {
                    var Ton = r.negotiate[0].ton ? r.negotiate[0].ton : "0";
                    var Rates = r.negotiate[0].rates ? r.negotiate[0].rates : "0";
                    negotiate = Ton + " ton * " + Rates + " rates";
                }
                r.negotiate = negotiate;
            });
            console.log('Data >>>>>>>', _this.dataList);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    ManageRequestLoadPage.prototype.deleteApi = function (id) {
        var _this = this;
        var load_id = id._id;
        console.log("id  >>>", load_id);
        this.admin.deleteRequestLoad(load_id).subscribe(function (res) {
            _this.navCtrl.push('ManageRequestLoadPage');
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageRequestLoadPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-request-load',template:/*ion-inline-start:"D:\truck\src\pages\manage-request-load\manage-request-load.html"*/'<!--\n  Generated template for the ManageRequestLoadPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n\n    <ion-toolbar>\n      <ion-title>Request Load</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <ion-card *ngFor="let rl of dataList">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(rl, $event)"></ion-icon>\n    <ion-card-content (click)="edit(rl)">\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ rl.ticket_no }} {{ rl.transporter_name }}</span><br>\n        <!-- <span class="agency-name">Agency: {{ rl.agency_name }}</span><br> -->\n      </p>\n      <div padding>\n        <p>\n          <span>Status: {{ rl.status }}</span>\n          \n          <span class="fright">Date: {{ rl.createdDate }}</span>\n        </p>\n\n        <p>\n          <span>Agencies: {{ rl.agency_name }}</span>\n          <span class="fright">Truck No: {{ rl.truck_no }}</span>\n        </p>\n\n        <p>\n          <span>From: {{ rl.from }}</span>\n          <span class="fright">{{ rl.negotiate }}</span>\n          <!-- <ion-item *ngFor="let d of rl.destinations">\n            <ion-label class="fright">{{ d.to }}</ion-label>\n          </ion-item> -->\n        </p>\n\n        <br>\n        <p><span>Preferred Location - {{ rl.destinations_str.toString() }}</span></p>\n\n        \n        <!-- <p>\n          <span class="transporter-name">Transporter: {{ rl.transporter_name }}</span><br>\n          <span class="truckno"><i class="fa fa-truck" aria-hidden="true"></i> {{ rl.truck_no }}</span>\n        </p>\n        <hr />\n        <ion-item>\n          <ion-label>Status</ion-label>\n          <ion-select [(ngModel)]="rl.status" [ngModelOptions]="{standalone: true}" placeholder="Select One" >\n          <ion-option *ngFor="let s of status" [value]="s">{{s}}</ion-option>\n          </ion-select>\n        </ion-item>\n        <br> -->\n        <!-- <p>\n            <span class="truckno">From {{ rl.from }}</span><br> -->\n            <!-- <span class="transporter-name">To</span> -->\n        <!-- </p> -->\n  \n        <!-- <ion-list>\n            <ion-item *ngFor="let d of rl.destinations">\n              <ion-label>{{ d.to }}</ion-label>\n            </ion-item>\n        </ion-list> -->\n        <!-- <button ion-button color="primary" float-right (click)="edit(rl)"><ion-icon name=""></ion-icon></button> -->\n      </div>\n    </ion-card-content>\n  </ion-card>\n\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-request-load\manage-request-load.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_6__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */]])
    ], ManageRequestLoadPage);
    return ManageRequestLoadPage;
}());

//# sourceMappingURL=manage-request-load.js.map

/***/ }),

/***/ 187:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddPostLoadPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__manage_post_load__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__helpers_common__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the AddPostLoadPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddPostLoadPage = /** @class */ (function () {
    function AddPostLoadPage(navCtrl, navParams, formBuilder, requestLoad, trucks, loader, toast, mapsAPILoader, ngZone, admin) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.formBuilder = formBuilder;
        this.requestLoad = requestLoad;
        this.trucks = trucks;
        this.loader = loader;
        this.toast = toast;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.admin = admin;
        this.submitted = false;
        this.paymentModes = ['To Pay', 'To Be Billed', 'Advance To Pay', 'Advance Pod'];
        this.materialsArray = [];
        this.types = [
            { name: 'OPEN', value: 'OPEN' },
            { name: 'CONTAINER', value: 'CONTAINER' },
            { name: 'TRAILER', value: 'TRAILER' },
        ];
        this.statuses = ['Pending', 'Cancel', 'Deal Final'];
        this.capacity = [];
        this.toDate = new Date().toISOString();
        this.data = {
            destinations: []
        };
        this.count = 1;
        this.getTo = "";
        this.getUnload = "";
        this.DestinationsArray = [];
        this.salesmanList = [];
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].of([]);
            }
        };
        // Search query for Transporter Name list
        this.transporterName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTransporterName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].of([]);
            }
        };
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].of([]);
            }
        };
        // Search query for truck no list
        this.companyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.requestLoad.searchCompany(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].of([]);
            }
        };
        this.getSalesmanList();
        this.addForm = this.formBuilder.group({
            posting_date: [this.toDate],
            agency_name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            company_name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            despatch_date: [this.toDate],
            delivery_date: [this.toDate],
            from: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            loading_place: [''],
            // addMultipleDestinations: this.formBuilder.array([this.createItem()]),
            // unloading_place: [''],
            material: [''],
            ton: [''],
            truck_type: [''],
            capacity: [''],
            rate: [''],
            payment_mode: [''],
            advance: [''],
            status: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            to: [''],
            unloading_place: [''],
            salesman: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            late_delivery_amount: [''],
            detention_amount: [''],
        });
        this.getMaterials();
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var formSearch = new google.maps.places.Autocomplete(_this.searchElementRefFrom.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                formSearch.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = formSearch.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('From').value = pre_city;
                        _this.addForm.controls['from'].setValue(pre_city);
                        // this.addForm.value.form = place.vicinity;
                    });
                });
                var LoadingPlace = new google.maps.places.Autocomplete(_this.searchElementRefLoadingPlace.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                LoadingPlace.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = LoadingPlace.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('LoadingPlace').value = pre_city;
                        _this.addForm.controls['loading_place'].setValue(pre_city);
                    });
                });
                var toSearch = new google.maps.places.Autocomplete(_this.searchElementRefTo.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                toSearch.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = toSearch.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('TO').value = pre_city;
                        _this.getTo = pre_city;
                        // let addr = this.addForm.get('addMultipleDestinations') as FormArray;
                        // let first = addr.value[this.toIndex];
                        // first.to = place.vicinity;
                    });
                });
                var UnloadingPlace = new google.maps.places.Autocomplete(_this.searchElementRefUnloadingPlace.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                UnloadingPlace.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = UnloadingPlace.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('UnloadingPlace').value = pre_city;
                        _this.getUnload = pre_city;
                        // let addr = this.addForm.get('addMultipleDestinations') as FormArray;
                        // let first = addr.value[this.unloadingIndex];
                        // first.unloading_place = place.vicinity;
                    });
                });
            });
        }, 2000);
    }
    Object.defineProperty(AddPostLoadPage.prototype, "destinationsData", {
        get: function () { return this.addForm.get('addMultipleDestinations'); },
        enumerable: true,
        configurable: true
    });
    AddPostLoadPage.prototype.createItem = function () {
        return this.formBuilder.group({
            to: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            unloading_place: ['']
        });
    };
    AddPostLoadPage.prototype.getIndex = function (ind) {
        console.log(ind);
        this.toIndex = ind;
        this.unloadingIndex = ind;
    };
    AddPostLoadPage.prototype.getSalesmanList = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        this.admin.getListByAgency(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.salesmanList.push(element.first_name);
            });
            console.log("salesmanList >>>>", _this.salesmanList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddPostLoadPage.prototype.addTo = function () {
        var _this = this;
        if (this.count < 3) {
            // setTimeout(() => {
            this.mapsAPILoader.load().then(function () {
                var toSearch = new google.maps.places.Autocomplete(_this.searchElementRefTo.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                toSearch.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = toSearch.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('TO').value = pre_city;
                        var addr = _this.addForm.get('addMultipleDestinations');
                        var first = addr.value[_this.toIndex];
                        first.to = pre_city;
                    });
                });
                var UnloadingPlace = new google.maps.places.Autocomplete(_this.searchElementRefUnloadingPlace.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                UnloadingPlace.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = UnloadingPlace.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        // (<HTMLInputElement>document.getElementById('State')).value = place.address_components[0].long_name;
                        document.getElementById('UnloadingPlace').value = pre_city;
                        var addr = _this.addForm.get('addMultipleDestinations');
                        var first = addr.value[_this.unloadingIndex];
                        first.unloading_place = pre_city;
                    });
                });
            });
            // }, 1000);
            this.addMultipleDestinations = this.addForm.get('addMultipleDestinations');
            this.addMultipleDestinations.push(this.createItem());
            this.count = this.count + 1;
        }
        else {
            this.toast.show({ 'message': 'Maximum Add only Three Destinations.' });
        }
    };
    AddPostLoadPage.prototype.removeTo = function (index) {
        if (index === 0) {
            this.toast.error({ 'message': 'Cannot remove this form.' });
        }
        else {
            this.addMultipleDestinations.removeAt(index);
            this.count = this.count - 1;
        }
    };
    AddPostLoadPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_10__home_home__["a" /* HomePage */]);
    };
    AddPostLoadPage.prototype.addToArray = function () {
        if (this.DestinationsArray.length < 3) {
            var obj = { "to": this.getTo, "unloading_place": this.getUnload };
            this.DestinationsArray.push(obj);
            this.addForm.get('to').setValue('');
            this.addForm.get('unloading_place').setValue('');
        }
        else {
            this.toast.show({ 'message': 'Maximum Add only Three Destinations.' });
        }
    };
    AddPostLoadPage.prototype.removeToArray = function (index) {
        this.DestinationsArray.splice(index, 1);
        console.log("array >>>", this.DestinationsArray);
    };
    AddPostLoadPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad RequestLoadPage', this.toDate);
    };
    AddPostLoadPage.prototype.onSelectTruck = function () {
        console.log("Select truck >>>");
    };
    AddPostLoadPage.prototype.getMaterials = function () {
        var _this = this;
        this.trucks.getMaterials().subscribe(function (res) {
            var data = res.json();
            data.results.forEach(function (r) {
                _this.materialsArray.push(r.name);
            });
            console.log('Materials data >>>>>>> ', _this.materialsArray);
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    AddPostLoadPage.prototype.getCapacity = function () {
        var _this = this;
        var ttype = this.addForm.value.truck_type;
        this.trucks.getCapacityOfTruck().subscribe(function (res) {
            var data = res.json();
            // console.log('res >>>>>>> ', res);
            _this.capacity = [];
            data.results.forEach(function (r) {
                if (r.type == ttype) {
                    r.capacity.forEach(function (a) {
                        var obj = {
                            "name": a.ton,
                            "value": a.ton,
                        };
                        _this.capacity.push(obj);
                    });
                }
            });
            console.log('capacity >>>>>>> ', _this.capacity);
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    AddPostLoadPage.prototype.save = function (isValid) {
        var _this = this;
        this.submitted = true;
        console.log(" isValid >>>>>", isValid);
        console.log(">>>>>>>>>>COntrols", this.addForm);
        if (isValid) {
            var getFromData = this.addForm.value;
            if (getFromData.to && getFromData.unloading_place) {
                var addMore = { "to": this.getTo, "unloading_place": this.getUnload };
                this.DestinationsArray.push(addMore);
            }
            var obj = {
                "posting_date": getFromData.posting_date,
                "agency_name": getFromData.agency_name.agency_name,
                "company_name": getFromData.company_name.company_name,
                "despatch_date": getFromData.despatch_date,
                "delivery_date": getFromData.delivery_date,
                "from": getFromData.from,
                "loading_place": getFromData.loading_place,
                // "destinations": getFromData.addMultipleDestinations,
                "destinations": this.DestinationsArray,
                // // "unloading_place": getFromData.unloading_place,
                "material": getFromData.material,
                "ton": getFromData.ton,
                "truck_type": getFromData.truck_type,
                "capacity": getFromData.capacity,
                "rate": getFromData.rate,
                "payment_mode": getFromData.payment_mode,
                "advance": getFromData.advance,
                "status": getFromData.status,
                "salesman": getFromData.salesman,
                "late_delivery_amount": getFromData.late_delivery_amount,
                "detention_amount": getFromData.detention_amount,
            };
            console.log(" obj >>>>>", obj);
            this.loader.show();
            this.requestLoad.addPostLoad(obj).subscribe(function (res) {
                _this.loader.hide();
                _this.addForm.reset();
                _this.toast.show({ 'message': 'Added successfully.' });
                _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__manage_post_load__["a" /* ManagePostLoadPage */]);
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchFrom"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddPostLoadPage.prototype, "searchElementRefFrom", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchLoadingPlace"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddPostLoadPage.prototype, "searchElementRefLoadingPlace", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchTo"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddPostLoadPage.prototype, "searchElementRefTo", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchUnloadingPlace"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddPostLoadPage.prototype, "searchElementRefUnloadingPlace", void 0);
    AddPostLoadPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-post-load',template:/*ion-inline-start:"D:\truck\src\pages\manage-post-load\add-post-load\add-post-load.html"*/'<!--\n  Generated template for the RequestLoadPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add Post Load</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="addForm" novalidate>\n\n    <div class="form-group">\n      <label class="label">Posting Date</label> \n      <ion-item class="form-control">\n        <ion-datetime name="posting_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="posting_date"></ion-datetime>\n      </ion-item>\n    </div>\n\n    <div class="form-group">\n      <label class="label">Dispatch Date</label> \n      <ion-item class="form-control">\n        <ion-datetime name="despatch_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="despatch_date"></ion-datetime>\n      </ion-item>\n    </div>\n\n    <div class="form-group">\n      <label class="label">Agency Name <span style="color:red">*</span> </label> \n      <input\n        class="form-control"\n        ng2-auto-complete\n        [source]="agencyName.bind(this)"\n        list-formatter="agency_name"\n        formControlName="agency_name"          \n      />\n    </div>\n    <div class="error-msg" *ngIf="submitted || (addForm.controls.agency_name.invalid && (addForm.controls.agency_name.dirty || addForm.controls.agency_name.touched))">\n      <div *ngIf="addForm.controls[\'agency_name\'].hasError(\'required\')">\n        <label>Agency name is required.</label>\n      </div>\n      <div *ngIf="addForm.controls[\'agency_name\'].hasError(\'minlength\')">\n        <label>Minimum length is upto 2 letters.</label>\n      </div>\n      <div *ngIf="addForm.controls[\'agency_name\'].hasError(\'maxlength\')">\n        <label>Maximum length is upto 25 letters.</label>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class="label">Company Name <span style="color:red">*</span>  </label> \n      <!-- <input name="company_name" type="text" formControlName="company_name" class="form-control" />  -->\n      <input\n        class="form-control"\n        ng2-auto-complete\n        [source]="companyName.bind(this)"\n        list-formatter="company_name"\n        formControlName="company_name"          \n      />\n    </div>\n    <div class="error-msg" *ngIf="submitted || (addForm.controls.company_name.invalid && (addForm.controls.company_name.dirty || addForm.controls.company_name.touched))">\n      <div *ngIf="addForm.controls[\'company_name\'].hasError(\'required\')">\n        <label>Company name is required.</label>\n      </div>\n      <div *ngIf="addForm.controls[\'company_name\'].hasError(\'minlength\')">\n        <label>Minimum length is upto 2 letters.</label>\n      </div>\n      <div *ngIf="addForm.controls[\'company_name\'].hasError(\'maxlength\')">\n        <label>Maximum length is upto 25 letters.</label>\n      </div>\n    </div>\n\n    \n\n    <!-- <div class="form-group">\n      <label class="label">Transporter name <span style="color:red">*</span> </label> \n      <input name="transporter_name" type="text" placeholder="" formControlName="transporter_name" class="form-control" /> \n      <input class="form-control"\n      ng2-auto-complete\n      formControlName="transporter_name"\n      [source]="transporterName.bind(this)"\n      list-formatter="transport_name" /> \n    </div> -->\n\n    <div class="form-group">\n      <label class="label">From <span style="color:red">*</span> </label> \n      <input name="from" id="From" type="text" formControlName="from" class="form-control" #searchFrom /> \n    </div>\n    <div class="error-msg" *ngIf="submitted || (addForm.controls.from.invalid && (addForm.controls.from.dirty || addForm.controls.from.touched))">\n      <div *ngIf="addForm.controls[\'from\'].hasError(\'required\')">\n        <label>From is required.</label>\n      </div>\n      <div *ngIf="addForm.controls[\'from\'].hasError(\'minlength\')">\n        <label>Minimum length is upto 2 letters.</label>\n      </div>\n      <div *ngIf="addForm.controls[\'from\'].hasError(\'maxlength\')">\n        <label>Maximum length is upto 25 letters.</label>\n      </div>\n    </div>\n    \n    <div class="form-group">\n      <label class="label">Loading Place </label> \n      <input name="loading_place" id="LoadingPlace" type="text" formControlName="loading_place" class="form-control" #searchLoadingPlace /> \n    </div>\n\n    <!-- <span style="color:red">*</span> -->\n\n    <br>\n    <!-- <div formArrayName="addMultipleDestinations" class="form-group">            \n      <div *ngFor="let d of destinationsData.controls; let i = index" [formGroup]="d">\n        <ion-grid>\n          <ion-row>\n            <ion-col>\n              <label class="label mg-top-13">Destination </label>\n            </ion-col>\n            <ion-col>\n              <ion-row right>\n                <ion-col text-right>\n                  <button class="btn-size" ion-button type="button" color="secondary" (click)="addTo()"><ion-icon name="add"></ion-icon></button>\n                  <button class="btn-size" ion-button type="button" color="danger" (click)="removeTo(i)"><ion-icon name="close"></ion-icon></button>\n                </ion-col>\n              </ion-row>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n        <input type="text" id="TO" formControlName="to" class="form-control" (change)="getIndex(i)" #searchTo required />\n        <div class="error-msg" *ngIf="submitted || (d.controls.to.invalid && (d.controls.to.dirty || d.controls.to.touched))">\n          <div *ngIf="d.controls[\'to\'].hasError(\'required\')">\n            <label>To is required.</label>\n          </div>\n          <div *ngIf="d.controls[\'to\'].hasError(\'minlength\')">\n            <label>Minimum length is upto 2 letters.</label>\n          </div>\n        </div>\n        \n        <label class="label">Unloading Place </label> \n        <input name="unloading_place" id="UnloadingPlace" type="text" formControlName="unloading_place" (change)="getIndex(i)" class="form-control" #searchUnloadingPlace /> \n      </div>\n    </div> -->\n\n\n    <div class="form-group">\n        <button ion-button (click)="addToArray()" type="button" class="add-al">Add more</button>\n      <label class="label mg-top-13">Destination </label> \n      <input type="text" id="TO" formControlName="to" class="form-control" (change)="getIndex(i)" #searchTo />\n      <div *ngFor="let d of DestinationsArray; let i = index" class="btmmargin">\n        <ion-row>\n          <ion-col class="col-pad">\n            {{ d.to }}\n          </ion-col>\n          <ion-col class="col-pad">\n            {{ d.unloading_place }}\n          </ion-col>\n          <ion-col>\n            <button class="btn-size" (click)="removeToArray(i)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button>\n          </ion-col>\n        </ion-row>\n      </div>\n      \n    </div>\n    \n    <div class="form-group">\n      <label class="label">Unloading Place </label> \n      <input name="unloading_place" id="UnloadingPlace" type="text" formControlName="unloading_place" (change)="getIndex(i)" class="form-control" #searchUnloadingPlace /> \n    </div>\n    <hr>\n    <br>\n\n\n    \n    \n\n    <!-- <div class="form-group">\n      <label class="label">Unloading Place </label> \n      <input name="unloading_place" type="text" formControlName="unloading_place" class="form-control" /> \n    </div> -->\n\n    <div class="form-group">\n      <label class="label">Delivery Date</label> \n      <ion-item class="form-control">\n        <ion-datetime name="delivery_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="delivery_date"></ion-datetime>\n      </ion-item>\n    </div>\n\n    <div class="form-group">\n      <label class="label">Material </label> \n      <!-- <input name="material" type="text" formControlName="material" class="form-control" />  -->\n      <select class="form-control drop-down" name="material" formControlName="material" >\n        <option value="">Select Material</option>\n        <option *ngFor="let m of materialsArray" [ngValue]="m">{{m}}</option>\n      </select>\n    </div>\n\n    <div class="form-group">\n      <label class="label">Ton</label> \n      <input name="ton" type="text" formControlName="ton" class="form-control" /> \n    </div>\n\n    <div class="form-group">\n      <label class="label">Truck Type </label> \n      <!-- <input name="truck_type" type="text" formControlName="truck_type" class="form-control" />  -->\n      <select class="form-control drop-down" name="truck_type" formControlName="truck_type" (change)="getCapacity()"  >\n        <option value="">Select Truck Type</option>\n        <option *ngFor="let t of types" [ngValue]="t.value">{{t.name}}</option>\n      </select>\n    </div>\n\n    <div class="form-group">\n      <label class="label">Capacity (Ton)</label> \n      <!-- <input name="capacity" type="text" formControlName="capacity" class="form-control" />  -->\n      <select class="form-control drop-down" name="capacity" formControlName="capacity"  >\n        <option value="">Select Truck Capacity</option>\n        <option *ngFor="let c of capacity" [ngValue]="c.value">{{c.name}}</option>\n      </select>\n    </div>\n\n    <div class="form-group">\n      <label class="label">Rate </label> \n      <input name="rate" type="number" formControlName="rate" class="form-control" /> \n    </div>\n\n    <div class="form-group">\n      <label class="label">Payment Mode</label> \n      <!-- <input name="payment_mode" type="text" formControlName="payment_mode" class="form-control" />  -->\n      <select class="form-control drop-down" name="payment_mode" formControlName="payment_mode" placeholder="Select Payment Mode"  >\n        <option value="">Select Payment Mode</option>\n        <option *ngFor="let p of paymentModes" [ngValue]="p">{{p}}</option>\n      </select>\n    </div>\n\n    <div class="form-group">\n      <label class="label">Advance</label> \n      <input name="advance" type="number" formControlName="advance" class="form-control" /> \n    </div>\n\n    <div class="form-group">\n      <label class="label">Late Delivery Amount</label> \n      <input name="late_delivery_amount" type="number" formControlName="late_delivery_amount" class="form-control" /> \n    </div>\n\n    <div class="form-group">\n      <label class="label">Detention Amount</label> \n      <input name="detention_amount" type="number" formControlName="detention_amount" class="form-control" /> \n    </div>\n\n    <div class="form-group">\n      <label class="label">Status <span style="color:red">*</span></label>\n      <select class="form-control drop-down" name="status" formControlName="status" >\n        <option value="">Select Status</option>\n        <option *ngFor="let st of statuses" [ngValue]="st">{{st}}</option>\n      </select>\n    </div>\n    <div class="error-msg" *ngIf="submitted || (addForm.controls.status.invalid && (addForm.controls.status.dirty || addForm.controls.status.touched))">\n      <div *ngIf="addForm.controls[\'status\'].hasError(\'required\')">\n        <label>Status is required.</label>\n      </div>\n    </div>\n\n    <!-- <div class="form-group">\n      <label class="label mg-top-13">Salesman </label> \n      <input type="text" formControlName="salesman" class="form-control" />\n    </div> -->\n\n    <div class="form-group">\n      <label class="label">Salesman <span style="color:red">*</span></label>\n      <select class="form-control drop-down" name="salesman" formControlName="salesman" >\n        <option value="">Select Salesman</option>\n        <option *ngFor="let sml of salesmanList" [ngValue]="sml">{{sml}}</option>\n      </select>\n    </div>\n    <div class="error-msg" *ngIf="submitted || (addForm.controls.salesman.invalid && (addForm.controls.salesman.dirty || addForm.controls.salesman.touched))">\n      <div *ngIf="addForm.controls[\'salesman\'].hasError(\'required\')">\n        <label>Salesman is required.</label>\n      </div>\n    </div>\n\n      \n\n    <div padding class="button-submit">\n      <button ion-button block (click)="save(addForm.valid)" size="large" type="submit"  expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Post Load</button>\n    </div>\n    \n\n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-post-load\add-post-load\add-post-load.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_8__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_11__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"],
            __WEBPACK_IMPORTED_MODULE_13__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], AddPostLoadPage);
    return AddPostLoadPage;
}());

//# sourceMappingURL=add-post-load.js.map

/***/ }),

/***/ 188:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrucksAvailabilityPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs__ = __webpack_require__(1);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the TrucksAvailabilityPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var TrucksAvailabilityPage = /** @class */ (function () {
    function TrucksAvailabilityPage(navCtrl, navParams, requestLoad, actionSheetController, admin, loader, mapsAPILoader, ngZone) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.dataList = [];
        // Search query for From list
        this.fromSearch = function (keyword) {
            if (keyword) {
                return _this.requestLoad.searchFromRequest(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_7_rxjs__["Observable"].of([]);
            }
        };
        // Search query for To list
        this.toSearch = function (keyword) {
            if (keyword) {
                return _this.requestLoad.searchToRequest(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_7_rxjs__["Observable"].of([]);
            }
        };
        this.filterKeys = ['from'];
        this.filterKeysTo = ['destinations_str'];
        this.filteredData = [];
        this.search_from = '';
        this.search_to = '';
        this.listTrucksAvailability();
        // setTimeout(() => {
        //   this.mapsAPILoader.load().then(() => {
        //     let formSearch = new google.maps.places.Autocomplete(this.searchElementRefFrom.nativeElement, {
        //       componentRestrictions: {"country": "IN"},
        //       types: []
        //     });
        //     formSearch.addListener("place_changed", () => {
        //       this.ngZone.run(() => {
        //         //get the place result
        //         let place: google.maps.places.PlaceResult = formSearch.getPlace();
        //         console.log("place   >>>>>>", place.address_components[0].long_name);
        //         console.log("vicinity   >>>>>>", place.vicinity);
        //         (<HTMLInputElement>document.getElementById('From')).value = place.vicinity;
        //       });
        //     });
        //     let toSearch = new google.maps.places.Autocomplete(this.searchElementRefTo.nativeElement, {
        //       componentRestrictions: {"country": "IN"},
        //       types: []
        //     });
        //     toSearch.addListener("place_changed", () => {
        //       this.ngZone.run(() => {
        //         //get the place result
        //         let place: google.maps.places.PlaceResult = toSearch.getPlace();
        //         console.log("place   >>>>>>", place.address_components[0].long_name);
        //         console.log("vicinity   >>>>>>", place.vicinity);
        //         (<HTMLInputElement>document.getElementById('TO')).value = place.vicinity;
        //       });
        //     });
        //   });
        // }, 1000);
    }
    TrucksAvailabilityPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad TrucksAvailabilityPage');
    };
    TrucksAvailabilityPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    TrucksAvailabilityPage.prototype.listTrucksAvailability = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.listTrucksAvailability().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            var i = 1;
            data.results.forEach(function (element) {
                element.srno = i;
                i = i + 1;
            });
            console.log('Data >>>>>>>', data.results);
            _this.dataList = data.results;
            _this.dataList.forEach(function (r) {
                var str = [];
                r.destinations.forEach(function (t) {
                    str.push(t.to);
                });
                console.log("str >>>>>", str);
                r.status = 'Pending';
                r.destinations_str = str;
                var negotiate = "";
                if (r.negotiate[0]) {
                    var Ton = r.negotiate[0].ton ? r.negotiate[0].ton : "0";
                    var Rates = r.negotiate[0].rates ? r.negotiate[0].rates : "0";
                    negotiate = Ton + " ton * " + Rates + " rates";
                }
                r.negotiate = negotiate;
            });
            console.log('Data >>>>>>>', _this.dataList);
            _this.filterFromData();
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    TrucksAvailabilityPage.prototype.filterFromData = function () {
        var _this = this;
        if (this.search_from) {
            this.filteredData = this.dataList.filter(function (obj) {
                return _this.filterKeys.some(function (propertyName) {
                    return obj[propertyName].toString().toLowerCase().includes(_this.search_from.toLowerCase());
                });
            });
        }
        else if (this.search_to) {
            this.filteredData = this.dataList.filter(function (obj) {
                return _this.filterKeysTo.some(function (propertyName) {
                    return obj[propertyName].toString().toLowerCase().includes(_this.search_to.toLowerCase());
                });
            });
        }
        else {
            this.filteredData = this.dataList;
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchFrom"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], TrucksAvailabilityPage.prototype, "searchElementRefFrom", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchTo"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], TrucksAvailabilityPage.prototype, "searchElementRefTo", void 0);
    TrucksAvailabilityPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-trucks-availability',template:/*ion-inline-start:"D:\truck\src\pages\trucks-availability\trucks-availability.html"*/'<!--\n  Generated template for the TrucksAvailabilityPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Trucks Availability</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <!-- <ion-row>\n    <ion-col>\n      <input name="from" type="text" id="From" placeholder="Search From" [(ngModel)]="search_from" (input)="filterFromData()" class="form-control" #searchFrom /> \n    </ion-col>\n    <ion-col>\n      <input name="from" type="text" id="TO" placeholder="Search To" [(ngModel)]="search_to" (input)="filterFromData()" class="form-control" #searchTo /> \n    </ion-col>\n  </ion-row> -->\n  \n  <ion-row>\n    <ion-col>\n      <input name="from" type="text"  class="form-control" ng2-auto-complete [source]="fromSearch.bind(this)" list-formatter="from" placeholder="Search From" [(ngModel)]="search_from" (input)="filterFromData()" />\n    </ion-col>\n    <ion-col>\n      <input name="to" type="text"  class="form-control" ng2-auto-complete [source]="toSearch.bind(this)" list-formatter="value" placeholder="Search To" [(ngModel)]="search_to" (input)="filterFromData()" />\n    </ion-col>\n  </ion-row>\n\n  <ion-card *ngFor="let rl of filteredData">\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ rl.ticket_no }}</span><br>\n        <!-- <span class="agency-name">Agency: {{ rl.agency_name }}</span><br> -->\n      </p>\n      <div padding>\n        <p>\n          <span>Status: Pending</span>\n          <span class="fright">{{ rl.negotiate }}</span>\n          <!-- <span class="fright">Agencies: {{ rl.agency_name }}</span> -->\n        </p>\n\n        <p>\n          <span>Truck Type: {{ rl.type}}</span>\n          <span class="fright">Capacity: {{ rl.capacity }}</span>\n        </p>\n\n        <p>\n          <span>From destination: {{ rl.from }}</span>\n          <!-- <span class="fright">{{ rl.negotiate }}</span> -->\n          <!-- <span class="fright">Truck No: {{ rl.truck_no }}</span> -->\n        </p>\n\n        <!-- <p>\n          <span></span>\n          <span class="fright">{{ rl.negotiate }}</span> -->\n          <!-- <ion-item *ngFor="let d of rl.destinations">\n            <ion-label class="fright">{{ d.to }}</ion-label>\n          </ion-item> -->\n        <!-- </p> -->\n\n        <br>\n        <p><span>To destination - {{ rl.destinations_str.toString() }}</span></p>\n      </div>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\trucks-availability\trucks-availability.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_6__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], TrucksAvailabilityPage);
    return TrucksAvailabilityPage;
}());

//# sourceMappingURL=trucks-availability.js.map

/***/ }),

/***/ 189:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddDealFinalNewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__manage_deal_final_new__ = __webpack_require__(109);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__helpers_common__ = __webpack_require__(31);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the AddDealFinalNewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddDealFinalNewPage = /** @class */ (function () {
    function AddDealFinalNewPage(navCtrl, navParams, loader, toast, fb, requestLoad, events, trucks, admin, mapsAPILoader, ngZone) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.events = events;
        this.trucks = trucks;
        this.admin = admin;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.toDate = new Date().toISOString();
        this.dealFlag = true;
        this.advanceFlag = false;
        this.calculations = ['Fixed', 'Actual Weight', 'Truck Capacity'];
        this.Party_Category = ['Company', 'Transporter'];
        this.PAYMENT_TYPES = ['Receivable Advance', 'Receivalbe Freight', 'Payable Advance', 'Payable Freight'];
        this.capacity = [];
        this.truckCapacity = "";
        this.mainAccoutsList = [];
        this.mainAdvanceAmountArray = [];
        this.agencyPercentage = 0;
        this.indianaTruckingPercentage = 0;
        this.investorPercentage = 0;
        this.investorName = "";
        this.mainRewardsLedger = [];
        this.cancelDealFlag = false;
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_11_rxjs__["Observable"].of([]);
            }
        };
        this.addForm = fb.group({
            agency_name: [''],
            deal_no: [''],
            deal_date: [this.toDate],
            from: [''],
            to: [''],
            loading_place: [''],
            unloading_place: [''],
            weight_company: [''],
            payment_mode: [''],
            dispatch_date: [''],
            delivery_date: [''],
            late_delivery_amount: [''],
            detention_amount: [''],
            company_salesman: [''],
            user_name: [''],
            transporter_ticket_no: [''],
            transporter_name: [''],
            transporter_rates: [''],
            truck_no: [''],
            truck_type: [''],
            truck_capacity: [''],
            transporter_actual_weight: [''],
            transporter_rates_calculation: [''],
            transporter_freight: [''],
            transporter_advance: [''],
            transporter_salesman: [''],
            transporter_labour_charges: [''],
            transporter_mamul: [''],
            transporter_payment_charge: [''],
            transporter_tds: [''],
            company_ticket_no: [''],
            company_name: [''],
            company_rates: [''],
            company_advance: [''],
            company_labour_charges: [''],
            company_mamul: [''],
            company_payment_charge: [''],
            company_tds: [''],
            advance_date: [this.toDate],
            party_category: [''],
            account_name: [''],
            payment_type: [''],
            advance_account_name: [''],
            amount: [''],
            remarks: [''],
            transporter_commission: [''],
            company_commission: [''],
            destination_1: [''],
            destination_2: [''],
            ackwnoldgement_due_date: [this.toDate],
        });
        this.PostData = this.navParams.get('postData');
        if (this.PostData) {
            this.addForm.controls['from'].setValue(this.PostData.from);
            this.addForm.controls['loading_place'].setValue(this.PostData.loading_place);
            this.addForm.controls['weight_company'].setValue(this.PostData.ton ? this.PostData.ton : 0);
            this.addForm.controls['payment_mode'].setValue(this.PostData.payment_mode);
            this.addForm.controls['dispatch_date'].setValue(this.PostData.despatch_date);
            this.addForm.controls['delivery_date'].setValue(this.PostData.delivery_date);
            this.addForm.controls['company_salesman'].setValue(this.PostData.salesman ? this.PostData.salesman : "");
            this.addForm.controls['user_name'].setValue(localStorage.getItem('user_name'));
            if (this.PostData.destinations[0]) {
                this.addForm.controls['to'].setValue(this.PostData.destinations[0].to ? this.PostData.destinations[0].to : "");
                this.addForm.controls['unloading_place'].setValue(this.PostData.destinations[0].unloading_place ? this.PostData.destinations[0].unloading_place : "");
            }
            this.addForm.controls['company_ticket_no'].setValue(this.PostData.ticket_no ? this.PostData.ticket_no : "");
            this.addForm.controls['company_name'].setValue(this.PostData.company_name ? this.PostData.company_name : "");
            this.addForm.controls['company_rates'].setValue(this.PostData.rate ? this.PostData.rate : 0);
            this.addForm.controls['company_advance'].setValue(this.PostData.advance ? this.PostData.advance : 0);
            this.addForm.controls['transporter_rates'].setValue(this.PostData.rate ? this.PostData.rate : 0);
            this.addForm.controls['transporter_advance'].setValue(this.PostData.advance ? this.PostData.advance : 0);
            this.companySalesman = this.PostData.salesman;
            this.postLoadId = this.PostData._id;
        }
        this.getMaxDealNo();
        console.log("PostData >>>>", this.PostData);
    }
    AddDealFinalNewPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddDealFinalNewPage');
    };
    AddDealFinalNewPage.prototype.ngOnInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var presentCity = new google.maps.places.Autocomplete(_this.searchElementRef.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentCity.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_13__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_13__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('Destination1').value = pre_city;
                        _this.addForm.controls['destination_1'].setValue(pre_city);
                    });
                });
                var presentState = new google.maps.places.Autocomplete(_this.searchElementRef2.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentState.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentState.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_13__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_13__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('Destination2').value = pre_city;
                        _this.addForm.controls['destination_2'].setValue(pre_city);
                    });
                });
            });
        }, 1000);
    };
    AddDealFinalNewPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_10__home_home__["a" /* HomePage */]);
    };
    AddDealFinalNewPage.prototype.isReadonly = function () {
        return this.isReadonly; //return true/false 
    };
    AddDealFinalNewPage.prototype.cancelDeal = function (event) {
        if (event.target.checked) {
            this.cancelDealFlag = true;
            console.log("cancelDealFlag >>", this.cancelDealFlag);
        }
        else {
            this.cancelDealFlag = false;
            console.log("cancelDealFlag >>", this.cancelDealFlag);
        }
    };
    AddDealFinalNewPage.prototype.getMaxDealNo = function () {
        var _this = this;
        this.requestLoad.getMaxDealNo().subscribe(function (res) {
            var data = res.json();
            console.log("max_sr_no >>>>", data.max_no);
            _this.max_deal_no = data.max_no;
            _this.addForm.controls['deal_no'].setValue(data.max_no);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddDealFinalNewPage.prototype.getRequestLoadById = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getRequestLoadByID(this.addForm.value.transporter_ticket_no).subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                _this.admin.getTruckData(dataList[0].truck_no).subscribe(function (res) {
                    _this.loader.hide();
                    var truckData = res.json();
                    var truckDetails = truckData.result;
                    console.log("dataList >>>>", dataList);
                    console.log("truckDetails >>>>", truckDetails);
                    _this.addForm.controls['truck_no'].setValue(dataList[0].truck_no ? dataList[0].truck_no : "");
                    _this.addForm.controls['transporter_name'].setValue(dataList[0].transporter_name ? dataList[0].transporter_name : "");
                    _this.addForm.controls['truck_type'].setValue(truckDetails[0].type);
                    _this.truckCapacity = truckDetails[0].capacity;
                    _this.transporterTruckType = truckDetails[0].type;
                    _this.transporterId = dataList[0]._id;
                    _this.transporterSalesman = dataList[0].salesman;
                    _this.addForm.controls['transporter_salesman'].setValue(_this.transporterSalesman ? _this.transporterSalesman : "");
                    _this.getCapacity();
                    // this.addForm.controls['transporter_salesman'].setValue(dataList[0].salesman ? dataList[0].salesman: "");
                    // this.requestLoadID = dataList[0]._id;
                }, function (err) {
                    _this.loader.hide();
                    console.log(">>>>error", err);
                });
            }
            else {
                _this.loader.hide();
            }
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    AddDealFinalNewPage.prototype.getPostLoadById = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getPostLoadByID(this.addForm.value.company_ticket_no).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                _this.PostData = dataList[0];
                _this.addForm.controls['from'].setValue(_this.PostData.from);
                _this.addForm.controls['loading_place'].setValue(_this.PostData.loading_place);
                _this.addForm.controls['weight_company'].setValue(_this.PostData.ton ? _this.PostData.ton : 0);
                _this.addForm.controls['payment_mode'].setValue(_this.PostData.payment_mode);
                _this.addForm.controls['dispatch_date'].setValue(_this.PostData.despatch_date);
                _this.addForm.controls['delivery_date'].setValue(_this.PostData.delivery_date);
                _this.addForm.controls['company_salesman'].setValue(_this.PostData.salesman ? _this.PostData.salesman : "");
                _this.addForm.controls['user_name'].setValue(localStorage.getItem('user_name'));
                if (_this.PostData.destinations[0]) {
                    _this.addForm.controls['to'].setValue(_this.PostData.destinations[0].to ? _this.PostData.destinations[0].to : "");
                    _this.addForm.controls['unloading_place'].setValue(_this.PostData.destinations[0].unloading_place ? _this.PostData.destinations[0].unloading_place : "");
                }
                _this.addForm.controls['company_ticket_no'].setValue(_this.PostData.ticket_no ? _this.PostData.ticket_no : "");
                _this.addForm.controls['company_name'].setValue(_this.PostData.company_name ? _this.PostData.company_name : "");
                _this.addForm.controls['company_rates'].setValue(_this.PostData.rate ? _this.PostData.rate : 0);
                _this.addForm.controls['company_advance'].setValue(_this.PostData.advance ? _this.PostData.advance : 0);
                _this.addForm.controls['transporter_rates'].setValue(_this.PostData.rate ? _this.PostData.rate : 0);
                _this.addForm.controls['transporter_advance'].setValue(_this.PostData.advance ? _this.PostData.advance : 0);
                _this.companySalesman = _this.PostData.salesman;
            }
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    AddDealFinalNewPage.prototype.getCapacity = function () {
        var _this = this;
        var ttype = this.transporterTruckType;
        this.trucks.getCapacityOfTruck().subscribe(function (res) {
            var data = res.json();
            console.log('res >>>>>>> ', res);
            _this.capacity = [];
            data.results.forEach(function (r) {
                if (r.type == ttype) {
                    r.capacity.forEach(function (a) {
                        var obj = {
                            "name": a.ton,
                            "value": a.ton,
                        };
                        _this.capacity.push(obj);
                    });
                }
            });
            _this.addForm.controls['truck_capacity'].setValue(_this.truckCapacity);
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    AddDealFinalNewPage.prototype.addCalculation = function () {
        var getFormData = this.addForm.value;
        var rateCalculation = getFormData.transporter_rates_calculation;
        var transporterRates = getFormData.transporter_rates ? getFormData.transporter_rates : 0;
        var weightCompany = getFormData.weight_company ? getFormData.weight_company : 0;
        var actualWeight = getFormData.transporter_actual_weight ? getFormData.transporter_actual_weight : 0;
        var freightTotal = 0;
        // calculations = ['Fixed', 'Actual Weight', 'Truck capacity'];
        if (rateCalculation == "Fixed") {
            freightTotal = transporterRates;
        }
        if (rateCalculation == "Actual Weight") {
            freightTotal = transporterRates * actualWeight;
        }
        if (rateCalculation == "Truck Capacity") {
            freightTotal = transporterRates * weightCompany;
        }
        this.addForm.controls['transporter_freight'].setValue(freightTotal);
    };
    AddDealFinalNewPage.prototype.getAccounts = function () {
        var _this = this;
        this.mainAccoutsList = [];
        var agency_name = localStorage.getItem('agency_name');
        console.log("agency_name >>>>", agency_name);
        this.requestLoad.getAccountsByAgency(agency_name).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            // console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.mainAccoutsList.push({ "srno": element.srno, "account_name": element.account_name });
            });
            console.log("mainAccoutsList >>>>", _this.mainAccoutsList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddDealFinalNewPage.prototype.advanceAmountAddInArray = function () {
        // var srno; 
        // this.mainAccoutsList.forEach(element => {
        //   if (element.account_name == this.addForm.value.transporter_account_name) {
        //     srno = element.srno;
        //   }
        // });
        var obj = {
            "advance_account_name": this.addForm.value.advance_account_name,
            "amount": this.addForm.value.amount,
            "remarks": this.addForm.value.remarks,
        };
        this.mainAdvanceAmountArray.push(obj);
        this.addForm.controls['advance_account_name'].setValue('');
        this.addForm.controls['amount'].setValue('');
        this.addForm.controls['remarks'].setValue('');
    };
    AddDealFinalNewPage.prototype.advanceAmountRemoveInArray = function (index) {
        this.mainAdvanceAmountArray.splice(index, 1);
        console.log("array >>>", this.mainAdvanceAmountArray);
    };
    AddDealFinalNewPage.prototype.save = function () {
        var _this = this;
        if (this.cancelDealFlag) {
            // ------>> Update Post Load 
            var postLoadObj = { "status": "Cancel" };
            this.requestLoad.updatePostLoadStatus(this.postLoadId, postLoadObj).subscribe(function (res) {
                // ------>> Update Request Load 
                var requestLoadObj = { "status": "Cancel" };
                _this.requestLoad.updateRequestLoadStatus(_this.transporterId, requestLoadObj).subscribe(function (res) {
                    _this.toast.error({ 'message': 'Cancel Deal Final..!' });
                }, function (err) {
                    console.log(">>>>>Err", err);
                    _this.toast.error({ 'message': 'Something went wrong.' });
                });
            }, function (err) {
                console.log(">>>>>Err", err);
                _this.toast.error({ 'message': 'Something went wrong.' });
            });
        }
        else {
            var getFormData = this.addForm.value;
            var obj = {
                'agency_name': getFormData.agency_name.agency_name,
                'deal_no': getFormData.deal_no,
                'deal_date': getFormData.deal_date,
                'from': getFormData.from,
                'to': getFormData.to,
                'loading_place': getFormData.loading_place,
                'unloading_place': getFormData.unloading_place,
                'weight_company': getFormData.weight_company,
                'payment_mode': getFormData.payment_mode,
                'dispatch_date': getFormData.dispatch_date,
                'delivery_date': getFormData.delivery_date,
                'late_delivery_amount': getFormData.late_delivery_amount,
                'detention_amount': getFormData.detention_amount,
                'company_salesman': getFormData.company_salesman,
                'user_name': getFormData.user_name,
                'transporter_ticket_no': getFormData.transporter_ticket_no,
                'transporter_name': getFormData.transporter_name,
                'transporter_rates': getFormData.transporter_rates,
                'truck_no': getFormData.truck_no,
                'truck_type': getFormData.truck_type,
                'truck_capacity': getFormData.truck_capacity,
                'transporter_actual_weight': getFormData.transporter_actual_weight,
                'transporter_rates_calculation': getFormData.transporter_rates_calculation,
                'transporter_freight': getFormData.transporter_freight,
                'transporter_advance': getFormData.transporter_advance,
                'company_ticket_no': getFormData.company_ticket_no,
                'company_name': getFormData.company_name,
                'company_rates': getFormData.company_rates,
                'company_advance': getFormData.company_advance,
                // 'advance_date': getFormData.advance_date,
                // 'party_category': getFormData.party_category,
                // 'account_name': getFormData.account_name,
                // 'payment_type': getFormData.payment_type,
                // 'advance_account_name': getFormData.advance_account_name,
                // 'amount': getFormData.amount,
                // 'remarks': getFormData.remarks,
                // 'advance_amount': this.mainAdvanceAmountArray
                "transporter_commission": getFormData.transporter_commission,
                "company_commission": getFormData.company_commission,
                "transporter_labour_charges": getFormData.transporter_labour_charges,
                "transporter_mamul": getFormData.transporter_mamul,
                "transporter_payment_charge": getFormData.transporter_payment_charge,
                "transporter_tds": getFormData.transporter_tds,
                "company_labour_charges": getFormData.company_labour_charges,
                "company_mamul": getFormData.company_mamul,
                "company_payment_charge": getFormData.company_payment_charge,
                "company_tds": getFormData.company_tds,
                "destination_1": getFormData.destination_1,
                "destination_2": getFormData.destination_2,
                "ackwnoldgement_due_date": getFormData.ackwnoldgement_due_date,
            };
            this.loader.show();
            // ------>> Update Post Load 
            var postLoadObj = { "status": "Deal Final" };
            this.requestLoad.updatePostLoadStatus(this.PostData._id, postLoadObj).subscribe(function (res) {
                console.log("Updated Post Load>>>>>");
            }, function (err) {
                console.log(">>>>>Err", err);
                _this.toast.error({ 'message': 'Something went wrong.' });
            });
            // ------>> Update Request Load 
            var requestLoadObj = { "status": "Deal Final" };
            this.requestLoad.updateRequestLoadStatus(this.transporterId, requestLoadObj).subscribe(function (res) {
                console.log("Updated Request Load>>>>>");
            }, function (err) {
                console.log(">>>>>Err", err);
                _this.toast.error({ 'message': 'Something went wrong.' });
            });
            this.requestLoad.addNewDealFinal(obj).subscribe(function (res) {
                var data = res.json();
                var accountsLedgerArray = [];
                var agencyName = getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name;
                var agencyId = getFormData.agency_name._id;
                var companyBranchName = getFormData.company_name;
                var companyBranchId = _this.PostData._id;
                var transporterBranchName = getFormData.transporter_name;
                var transporterBranchId = _this.transporterId;
                var truckNo = getFormData.truck_no;
                var srNo = data.data.deal_no;
                var dealId = data.data._id;
                var userName = localStorage.getItem('user_name');
                var userId = localStorage.getItem('user_id');
                // 'To Pay', 'To Be Billed', 'Advance To Pay', 'Advance Pod';
                if (getFormData.payment_mode == 'To Be Billed') {
                    // 1        
                    var companyMainDebit = {
                        "agency_name": agencyName,
                        "branch_id": companyBranchId,
                        "branch_name": companyBranchName,
                        "account_name": agencyName + " TPT Charges",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.company_rates,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainDebit);
                    // 2        
                    var companyMainCredit = {
                        "agency_name": agencyName,
                        "branch_id": companyBranchId,
                        "branch_name": companyBranchName,
                        "account_name": agencyName,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.company_rates,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainCredit);
                    // 3        
                    var companyMainCredit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": companyBranchName + " TPT Income",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.company_rates,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainCredit2);
                    // 4        
                    var companyMainDebit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": companyBranchName + " Unbilled A/c.",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.company_rates,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainDebit2);
                    // 5       
                    var transporterMainCredit = {
                        "agency_name": agencyName,
                        "branch_id": transporterBranchId,
                        "branch_name": transporterBranchName,
                        "account_name": agencyName + " TPT Income",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.transporter_freight,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainCredit);
                    // 6       
                    var transporterMainDebit = {
                        "agency_name": agencyName,
                        "branch_id": transporterBranchId,
                        "branch_name": transporterBranchName,
                        "account_name": agencyName,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.transporter_freight,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainDebit);
                    // 7    
                    var transporterMainDebit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": transporterBranchName + " TPT Charges",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.transporter_freight,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainDebit2);
                    // 8   
                    var transporterMainCredit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": truckNo,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.transporter_freight,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainCredit2);
                }
                if (getFormData.payment_mode == 'To Pay') {
                    // 1        
                    var companyMainDebit = {
                        "agency_name": agencyName,
                        "branch_id": companyBranchId,
                        "branch_name": companyBranchName,
                        "account_name": agencyName + " TPT Charges",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.company_rates,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainDebit);
                    // 2        
                    var companyMainCredit = {
                        "agency_name": agencyName,
                        "branch_id": companyBranchId,
                        "branch_name": companyBranchName,
                        "account_name": agencyName,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.company_rates,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainCredit);
                    // 3        
                    var companyMainCredit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": companyBranchName + " TPT Income",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.company_rates,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainCredit2);
                    // 4        
                    var companyMainDebit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": companyBranchName + " Billed A/c.",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.company_rates,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainDebit2);
                    // 5       
                    var transporterMainCredit = {
                        "agency_name": agencyName,
                        "branch_id": transporterBranchId,
                        "branch_name": transporterBranchName,
                        "account_name": agencyName + " TPT Income",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.transporter_freight,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainCredit);
                    // 6       
                    var transporterMainDebit = {
                        "agency_name": agencyName,
                        "branch_id": transporterBranchId,
                        "branch_name": transporterBranchName,
                        "account_name": agencyName,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.transporter_freight,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainDebit);
                    // 7    
                    var transporterMainDebit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": transporterBranchName + " TPT Charges",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.transporter_freight,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainDebit2);
                    // 8   
                    var transporterMainCredit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": truckNo,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.transporter_freight,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainCredit2);
                }
                if (getFormData.payment_mode == 'Advance Pod') {
                    // 1        
                    var companyMainDebit = {
                        "agency_name": agencyName,
                        "branch_id": companyBranchId,
                        "branch_name": companyBranchName,
                        "account_name": agencyName + " TPT Charges",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.company_rates,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainDebit);
                    // 2        
                    var companyMainCredit = {
                        "agency_name": agencyName,
                        "branch_id": companyBranchId,
                        "branch_name": companyBranchName,
                        "account_name": agencyName,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.company_rates,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainCredit);
                    // 3        
                    var companyMainCredit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": companyBranchName + " TPT Income",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.company_rates,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainCredit2);
                    // 4        
                    var companyMainDebit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": companyBranchName + " Billed A/c.",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.company_rates,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainDebit2);
                    // 5       
                    var transporterMainCredit = {
                        "agency_name": agencyName,
                        "branch_id": transporterBranchId,
                        "branch_name": transporterBranchName,
                        "account_name": agencyName + " TPT Income",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.transporter_freight,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainCredit);
                    // 6       
                    var transporterMainDebit = {
                        "agency_name": agencyName,
                        "branch_id": transporterBranchId,
                        "branch_name": transporterBranchName,
                        "account_name": agencyName,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.transporter_freight,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainDebit);
                    // 7    
                    var transporterMainDebit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": transporterBranchName + " TPT Charges",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.transporter_freight,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainDebit2);
                    // 8   
                    var transporterMainCredit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": truckNo,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.transporter_freight,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainCredit2);
                }
                if (getFormData.payment_mode == 'Advance To Pay') {
                    // 1        
                    var companyMainDebit = {
                        "agency_name": agencyName,
                        "branch_id": companyBranchId,
                        "branch_name": companyBranchName,
                        "account_name": agencyName + " TPT Charges",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.company_rates,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainDebit);
                    // 2        
                    var companyMainCredit = {
                        "agency_name": agencyName,
                        "branch_id": companyBranchId,
                        "branch_name": companyBranchName,
                        "account_name": agencyName,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.company_rates,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainCredit);
                    // 3        
                    var companyMainCredit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": companyBranchName + " TPT Income",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.company_rates,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainCredit2);
                    // 4        
                    var companyMainDebit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": companyBranchName + " Billed A/c.",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.company_rates,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(companyMainDebit2);
                    // 5       
                    var transporterMainCredit = {
                        "agency_name": agencyName,
                        "branch_id": transporterBranchId,
                        "branch_name": transporterBranchName,
                        "account_name": agencyName + " TPT Income",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.transporter_freight,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainCredit);
                    // 6       
                    var transporterMainDebit = {
                        "agency_name": agencyName,
                        "branch_id": transporterBranchId,
                        "branch_name": transporterBranchName,
                        "account_name": agencyName,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.transporter_freight,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainDebit);
                    // 7    
                    var transporterMainDebit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": transporterBranchName + " TPT Charges",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.transporter_freight,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainDebit2);
                    // 8   
                    var transporterMainCredit2 = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": truckNo,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.transporter_freight,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(transporterMainCredit2);
                }
                // **************** Commission ******************
                if (getFormData.transporter_commission) {
                    var mainDebit = {
                        "agency_name": agencyName,
                        "branch_id": transporterBranchId,
                        "branch_name": transporterBranchName,
                        "account_name": "Commission A/c.",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.transporter_commission,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(mainDebit);
                    var mainCredit = {
                        "agency_name": agencyName,
                        "branch_id": transporterBranchId,
                        "branch_name": transporterBranchName,
                        "account_name": "Commission A/c.",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": "Commission Deducted Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": getFormData.transporter_commission,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(mainCredit);
                    var investorCr = (getFormData.transporter_commission * _this.investorPercentage) / 100;
                    var indianaTruckingCr = (getFormData.transporter_commission * _this.indianaTruckingPercentage) / 100;
                    var agencyCr = (getFormData.transporter_commission * _this.agencyPercentage) / 100;
                    var commissionAccountName = "";
                    if (getFormData.payment_mode == 'To Pay') {
                        commissionAccountName = "Receipt " + transporterBranchName;
                    }
                    else {
                        commissionAccountName = truckNo;
                    }
                    // Add Commission Debit
                    var commissionDebitObj = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": commissionAccountName,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": getFormData.transporter_commission,
                        "credit_amount": 0,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(commissionDebitObj);
                    // Add Investor Name
                    var investorObj = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": _this.investorName,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": investorCr,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(investorObj);
                    // Add indiana Trucking
                    var indianaTruckingObj = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": "Indiana Trucking Commission",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": indianaTruckingCr,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(indianaTruckingObj);
                    // Add indiana Trucking
                    var agencyObj = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": agencyName + " Commission",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": 0,
                        "credit_amount": agencyCr,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(agencyObj);
                }
                // **************** Rewards Ledger ******************
                var i = 0;
                if (_this.companySalesman) {
                    console.log("In Company Salesman >>>>");
                    _this.admin.getRewardsByFirstName(_this.companySalesman).subscribe(function (res) {
                        var data = res.json();
                        console.log("Company Salesman >>>>", data.reward_points);
                        var rp = data.reward_points / 2;
                        var obj = {
                            "agency_name": agencyName,
                            "branch": agencyName,
                            "agency_id": agencyId,
                            "salesman": _this.companySalesman,
                            "truck_no": truckNo,
                            "srno": srNo,
                            "narration_ref_no": "Deal no " + srNo + " Truck no " + truckNo,
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": rp,
                            "voucher_date": getFormData.deal_date,
                            "user_name": userName,
                        };
                        _this.mainRewardsLedger.push(obj);
                    }, function (err) {
                        console.log(">>>>error", err);
                    });
                    i = i + 1;
                }
                if (_this.transporterSalesman) {
                    console.log("In Transporter Salesman >>>>");
                    _this.admin.getRewardsByFirstName(_this.transporterSalesman).subscribe(function (res) {
                        var data = res.json();
                        console.log("Transporter Salesman >>>>>>>>", data.reward_points);
                        var rp = data.reward_points / 2;
                        var obj = {
                            "agency_name": agencyName,
                            "branch": agencyName,
                            "agency_id": agencyId,
                            "salesman": _this.transporterSalesman,
                            "truck_no": truckNo,
                            "srno": srNo,
                            "narration_ref_no": "Deal no " + srNo + " Truck no " + truckNo,
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": rp,
                            "voucher_date": getFormData.deal_date,
                            "user_name": userName,
                        };
                        _this.mainRewardsLedger.push(obj);
                    }, function (err) {
                        console.log(">>>>error", err);
                    });
                    i = i + 1;
                }
                // this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe((res: any) => {
                //   this.requestLoad.addRewardsLedger(this.mainRewardsLedger).subscribe((res: any) => {
                _this.loader.hide();
                _this.mainAdvanceAmountArray = [];
                _this.addForm.reset();
                _this.toast.show({ 'message': 'Added successfully.' });
                _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__manage_deal_final_new__["a" /* ManageDealFinalNewPage */]);
                //   }, err => {
                //     this.loader.hide();
                //     this.toast.error({ 'message': 'Something went wrong.' });
                //     console.log(">>>>>Err", err);
                //   });
                // }, err => {
                //   this.loader.hide();
                //   this.toast.error({ 'message': 'Something went wrong.' });
                //   console.log(">>>>>Err", err);
                // });
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }
    };
    AddDealFinalNewPage.prototype.advanceAmount = function () {
        this.dealFlag = false;
        this.advanceFlag = true;
        this.getAccounts();
    };
    AddDealFinalNewPage.prototype.back = function () {
        this.dealFlag = true;
        this.advanceFlag = false;
    };
    AddDealFinalNewPage.prototype.getAgencyListByName = function () {
        var _this = this;
        var agencyName = this.addForm.value.agency_name.agency_name ? this.addForm.value.agency_name.agency_name : this.addForm.value.agency_name;
        this.admin.getAgencyListByName(agencyName).subscribe(function (res) {
            var data = res.json();
            var agencyData = data.results;
            if (agencyData[0]) {
                _this.investorName = agencyData[0].investor_name;
                _this.agencyPercentage = agencyData[0].agency_percentage;
                _this.indianaTruckingPercentage = agencyData[0].indiana_trucking_percentage;
                _this.investorPercentage = agencyData[0].investor_percentage;
            }
            console.log("Agency Data >>>>", agencyData[0]);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddDealFinalNewPage.prototype, "searchElementRef", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search2"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddDealFinalNewPage.prototype, "searchElementRef2", void 0);
    AddDealFinalNewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-deal-final-new',template:/*ion-inline-start:"D:\truck\src\pages\manage-deal-final-new\add-deal-final-new\add-deal-final-new.html"*/'<!--\n  Generated template for the AddDealFinalNewPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <!-- <ion-title>Add Deal Final New</ion-title> -->\n\n    <ion-toolbar>\n      <ion-title>Add Deal Final New</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="addForm" novalidate>\n    <!-- ----------- Deal Final -------------- -->\n    <div *ngIf="dealFlag">        \n    <div class="form-group">\n        <label class="label">Agency Name</label>\n        <input\n        class="form-control"\n        ng2-auto-complete\n        [source]="agencyName.bind(this)"\n        list-formatter="agency_name"\n        formControlName="agency_name"      \n        (change)="getAgencyListByName()"\n      />      </div>\n      \n    <div class="form-group">\n        <label class="label">DF No.</label>\n        <input name="deal_no" [readonly]="isReadonly()" type="number" formControlName="deal_no" class="form-control" /> \n      </div>\n      \n      <div class="form-group">\n          <label class="label">Posting Date</label>\n          <ion-item class="form-control">\n              <ion-datetime name="deal_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="deal_date"></ion-datetime>\n            </ion-item>\n        </div>\n\n        <div class="form-group">\n            <label class="label">From</label>\n            <input name="from" type="text" [readonly]="isReadonly()" formControlName="from" class="form-control" /> \n          </div>\n          <div class="form-group">\n              <label class="label">To</label>\n              <input name="to" type="text" [readonly]="isReadonly()" formControlName="to" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Loading Place</label>\n                <input name="loading_place" [readonly]="isReadonly()" type="text" formControlName="loading_place" class="form-control" /> \n              </div>\n              <div class="form-group">\n                  <label class="label">Unloading Place</label>\n                  <input name="unloading_place" [readonly]="isReadonly()" type="text" formControlName="unloading_place" class="form-control" /> \n                </div>\n\n                <div class="form-group">\n                    <label class="label">Weight</label>\n                    <input name="weight_company" type="number" [readonly]="isReadonly()" formControlName="weight_company" class="form-control" /> \n                  </div>\n                <div class="form-group">\n                    <label class="label">Dispatch Date</label>\n                    <ion-item class="form-control">\n                        <ion-datetime name="dispatch_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="dispatch_date"></ion-datetime>\n                      </ion-item>\n                  </div>\n              \n            <div class="form-group">\n                <label class="label">Payment Mode</label>\n                <input name="payment_mode" [readonly]="isReadonly()" type="text" formControlName="payment_mode" class="form-control" /> \n              </div>\n\n              <div class="form-group">\n                  <label class="label">Delivery Date</label>\n                  <ion-item class="form-control">\n                      <ion-datetime name="delivery_date"  display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="delivery_date"></ion-datetime>\n                    </ion-item>\n                </div>\n               \n              <div class="form-group">\n                <label class="label">Late Delivery Amount</label>\n                <input name="late_delivery_amount" type="number" formControlName="late_delivery_amount" class="form-control" /> \n              </div>\n              <div class="form-group">\n                <label class="label">Detention Amount</label>\n                <input name="detention_amount" type="number" formControlName="detention_amount" class="form-control" /> \n              </div>\n              <!-- <div class="form-group">\n                <label class="label">Salesman</label>\n                <input name="company_salesman" [readonly]="isReadonly()" type="text" formControlName="company_salesman" class="form-control" /> \n              </div> -->\n              <div class="form-group">\n                <label class="label">User Name</label>\n                <input name="user_name" [readonly]="isReadonly()" type="text" formControlName="user_name" class="form-control" /> \n              </div>\n\n              <!-- <div> -->\n                <br>\n                <ion-row style="width: 100%;">\n\n                  <ion-col col-4 class="label-font">\n                    <label class="label"><b>Transporter</b></label> \n                  </ion-col>\n\n                  <ion-col col-4  class="label-font">\n                    <!-- <label class="label">User Name</label>  -->\n                  </ion-col>\n\n                  <ion-col col-4 class="label-font">\n                    <label class="label"><b>Company</b></label> \n                  </ion-col>\n                  <br>\n\n\n                  <!-- 1 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="transporter_ticket_no" (change)="getRequestLoadById()" type="number" formControlName="transporter_ticket_no" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  <ion-col col-4  class=label-font-center>\n                    <label class="label">Ticket No</label> \n                  </ion-col>\n\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="company_ticket_no" [readonly]="isReadonly()" type="number" formControlName="company_ticket_no" class="form-control" /> \n                    </div> \n                  </ion-col>\n\n                  <!-- 2 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="transporter_name" [readonly]="isReadonly()" type="text" formControlName="transporter_name" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Name</label> \n                  </ion-col>\n\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="company_name" [readonly]="isReadonly()" type="text" formControlName="company_name" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  <!-- 3 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="transporter_rates" [readonly]="isReadonly()" type="number" formControlName="transporter_rates" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Rates</label> \n                  </ion-col>\n\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="company_rates" [readonly]="isReadonly()" type="number" formControlName="company_rates" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  <!-- 4 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="truck_no" [readonly]="isReadonly()" type="text" formControlName="truck_no" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Truck No</label> \n                  </ion-col>\n\n                  <ion-col col-4>\n                  </ion-col>\n\n                  <!-- 5 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="truck_type" [readonly]="isReadonly()" type="text" formControlName="truck_type" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Truck Type</label> \n                  </ion-col>\n\n                  <ion-col col-4>\n                  </ion-col>\n\n                  <!-- 6 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                        <input name="truck_capacity" [readonly]="isReadonly()" type="number" formControlName="truck_capacity" class="form-control" /> \n                      <!-- <select class="form-control drop-down" formControlName="truck_capacity">\n                        <option *ngFor="let c of capacity" [ngValue]="c.value">{{c.name}}</option>\n                      </select>  -->\n                    </div>\n                  </ion-col>\n\n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Truck Capacity</label> \n                  </ion-col>\n\n                  <ion-col col-4>\n                  </ion-col>\n\n                  <!-- 7 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="transporter_actual_weight" type="number" formControlName="transporter_actual_weight" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Actual Weight</label> \n                  </ion-col>\n\n                  <ion-col col-4>\n                  </ion-col>\n\n                  <!-- 8 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <select class="form-control drop-down" (change)="addCalculation()" name="transporter_rates_calculation" formControlName="transporter_rates_calculation"  >\n                        <option value="">Select Calculation</option>\n                        <option *ngFor="let cls of calculations" [ngValue]="cls">{{cls}}</option>\n                      </select>\n                    </div>\n                  </ion-col>\n\n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Rates Calculation</label> \n                  </ion-col>\n\n                  <ion-col col-4>\n                  </ion-col>\n\n                  <!-- 9 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="transporter_freight" type="number" formControlName="transporter_freight" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Freight</label> \n                  </ion-col>\n\n                  <ion-col col-4>\n                  </ion-col>\n\n                  <!-- 10 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="transporter_advance" type="number" formControlName="transporter_advance" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Declare Advance</label> \n                  </ion-col>\n\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="company_advance" type="number" formControlName="company_advance" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  \n                            \n                  <!-- 12 -->\n                  <ion-col col-4>\n                      <div class="sub-form-group">\n                        <input name="transporter_labour_charges" type="number" formControlName="transporter_labour_charges" class="form-control" /> \n                      </div>\n                    </ion-col>\n            \n                    <ion-col col-4  class="label-font-center">\n                      <label class="label">Labour Charges</label> \n                    </ion-col>\n            \n                    <ion-col col-4>\n                      <div class="sub-form-group">\n                        <input name="company_labour_charges" type="number" formControlName="company_labour_charges" class="form-control" /> \n                      </div>\n                    </ion-col>\n            \n                    <!-- 13 -->\n                    <ion-col col-4>\n                      <div class="sub-form-group">\n                        <input name="transporter_mamul" type="number" formControlName="transporter_mamul" class="form-control" /> \n                      </div>\n                    </ion-col>\n            \n                    <ion-col col-4  class="label-font-center">\n                      <label class="label">Mamul</label> \n                    </ion-col>\n            \n                    <ion-col col-4>\n                      <div class="sub-form-group">\n                        <input name="company_mamul" type="number" formControlName="company_mamul" class="form-control" /> \n                      </div>\n                    </ion-col>\n            \n                    <!-- 14 -->\n                    <ion-col col-4>\n                      <div class="sub-form-group">\n                        <input name="transporter_payment_charge" type="number" formControlName="transporter_payment_charge" class="form-control" /> \n                      </div>\n                    </ion-col>\n            \n                    <ion-col col-4  class="label-font-center">\n                      <label class="label">Payment Charge</label> \n                    </ion-col>\n            \n                    <ion-col col-4>\n                      <div class="sub-form-group">\n                        <input name="company_payment_charge" type="number" formControlName="company_payment_charge" class="form-control" /> \n                      </div>\n                    </ion-col>\n            \n                    <!-- 15 -->\n                    <ion-col col-4>\n                      <div class="sub-form-group">\n                        <input name="transporter_tds" type="number" formControlName="transporter_tds" class="form-control" /> \n                      </div>\n                    </ion-col>\n            \n                    <ion-col col-4  class="label-font-center">\n                      <label class="label">TDS</label> \n                    </ion-col>\n            \n                    <ion-col col-4>\n                      <div class="sub-form-group">\n                        <input name="company_tds" type="number" formControlName="company_tds" class="form-control" /> \n                      </div>\n                    </ion-col>\n\n                     <!-- 11 -->\n                    <ion-col col-4>\n                      <div class="sub-form-group">\n                        <input name="transporter_commission" type="number" formControlName="transporter_commission" class="form-control" /> \n                      </div>\n                    </ion-col>\n            \n                    <ion-col col-4  class="label-font-center">\n                      <label class="label">Commission</label> \n                    </ion-col>\n            \n                    <ion-col col-4>\n                      <div class="sub-form-group">\n                        <input name="company_commission" type="number" formControlName="company_commission" class="form-control" /> \n                      </div>\n                    </ion-col>\n            \n                    <!-- 16 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="transporter_salesman" [readonly]="isReadonly()" type="text" formControlName="transporter_salesman" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Salesman</label> \n                  </ion-col>\n\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input name="company_salesman" [readonly]="isReadonly()" type="text" formControlName="company_salesman" class="form-control" /> \n                    </div>\n                  </ion-col>\n\n                </ion-row>\n              <!-- </div> -->\n              <ion-row style="width: 100%;">\n\n                <!-- 17 -->\n                <ion-col col-4>\n                  </ion-col>\n          \n                  <ion-col col-4 class="label-font label-font-center">\n                    <label class="label"><b>Ask Driver for return Load</b></label> \n                  </ion-col>\n          \n                  <ion-col col-4>\n                  </ion-col>\n          \n                  <!-- 18 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input id="Destination1" name="destination_1" type="text" formControlName="destination_1" class="form-control" #search/> \n                    </div>\n                  </ion-col>\n          \n                  <ion-col col-4 class="label-font-center">\n                    <label class="label">Destination 1</label> \n                  </ion-col>\n          \n                  <ion-col col-4>\n                  </ion-col>\n          \n                  <!-- 19 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <input id="Destination2" name="destination_2" type="text" formControlName="destination_2" class="form-control" #search2/> \n                    </div>\n                  </ion-col>\n          \n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Destination 2</label> \n                  </ion-col>\n          \n                  <ion-col col-4>\n                  </ion-col>\n          \n                  <!-- 20 -->\n                  <ion-col col-4>\n                    <div class="sub-form-group">\n                      <ion-item class="form-control">\n                        <ion-datetime name="ackwnoldgement_due_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="ackwnoldgement_due_date"></ion-datetime>\n                      </ion-item>\n                    </div>\n                  </ion-col>\n          \n                  <ion-col col-4  class="label-font-center">\n                    <label class="label">Ackwnoldgement Due Date</label> \n                  </ion-col>\n          \n                  <ion-col col-4>\n                  </ion-col>\n          \n                  <!-- 21 -->\n                  <ion-col col-4>\n                  </ion-col>\n          \n                  <ion-col col-4>\n                      <input type="checkbox" (change)="cancelDeal($event)"> &nbsp; Cancel  Deal\n                  </ion-col>\n          \n                  <ion-col col-4>\n                  </ion-col>\n  \n              </ion-row>\n              <br>\n              <ion-row>\n                <ion-col col-4>          \n                </ion-col>\n\n                <ion-col col-4>   \n                  <button ion-button block size="large" type="submit" (click)="save()" expand="block"> Save Deal Final </button>       \n                </ion-col>\n\n                <ion-col col-4>          \n                </ion-col>\n              </ion-row>\n\n              <!-- <div>\n                <div class="width-full fetchbtn"><b>Transporter</b></div>\n\n                <div class="form-group">\n                  <label class="label">Ticket No</label>\n                  <input name="transporter_ticket_no" (change)="getRequestLoadById()" type="number" formControlName="transporter_ticket_no" class="form-control" /> \n                </div>\n                <div class="form-group">\n                  <label class="label">Name</label>\n                  <input name="transporter_name" [readonly]="isReadonly()" type="text" formControlName="transporter_name" class="form-control" /> \n                </div>\n                <div class="form-group">\n                  <label class="label">Rates</label>\n                  <input name="transporter_rates" [readonly]="isReadonly()" type="number" formControlName="transporter_rates" class="form-control" /> \n                </div>\n                <div class="form-group">\n                    <label class="label">Truck No</label>\n                    <input name="truck_no" [readonly]="isReadonly()" type="text" formControlName="truck_no" class="form-control" /> \n                  </div>\n                  <div class="form-group">\n                      <label class="label">Truck Type</label>\n                      <input name="truck_type" [readonly]="isReadonly()" type="text" formControlName="truck_type" class="form-control" /> \n                    </div>\n                    <div class="form-group">\n                        <label class="label">Truck Capacity</label>\n                        <select class="form-control drop-down" formControlName="truck_capacity">\n                            <option *ngFor="let c of capacity" [ngValue]="c.value">{{c.name}}</option>\n                          </select>                         </div>\n                      <div class="form-group">\n                          <label class="label">Actual Weight</label>\n                          <input name="transporter_actual_weight" type="number" formControlName="transporter_actual_weight" class="form-control" /> \n                        </div>\n                        <div class="form-group">\n                            <label class="label">Rates Calculation</label>\n                            <select class="form-control drop-down" (change)="addCalculation()" name="transporter_rates_calculation" formControlName="transporter_rates_calculation"  >\n                                <option value="">Select Calculation</option>\n                                <option *ngFor="let cls of calculations" [ngValue]="cls">{{cls}}</option>\n                              </select>\n                        </div>\n    <div class="form-group">\n        <label class="label">Freight</label>\n        <input name="transporter_freight" type="number" formControlName="transporter_freight" class="form-control" /> \n      </div>\n      <div class="form-group">\n          <label class="label">Declare Advance</label>\n          <input name="transporter_advance" type="number" formControlName="transporter_advance" class="form-control" /> \n        </div>\n        <div class="form-group">\n            <label class="label">Commission</label>\n            <input name="transporter_commission" type="number" formControlName="transporter_commission" class="form-control" /> \n          </div>\n\n          <div class="form-group">\n              <label class="label">Salesman</label>\n              <input name="transporter_salesman" [readonly]="isReadonly()" type="text" formControlName="transporter_salesman" class="form-control" /> \n            </div>\n\n          \n\n          \n          <div class="width-full fetchbtn"><b>Company</b></div>\n\n          <div class="form-group">\n              <label class="label">Ticket No</label>\n              <input name="company_ticket_no" (change)="getPostLoadById()" type="number" formControlName="company_ticket_no" class="form-control" /> \n            </div>\n            <div class="form-group">\n              <label class="label">Name</label>\n              <input name="company_name" [readonly]="isReadonly()" type="text" formControlName="company_name" class="form-control" /> \n            </div>\n            <div class="form-group">\n              <label class="label">Rates</label>\n              <input name="company_rates" [readonly]="isReadonly()" type="number" formControlName="company_rates" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Truck No</label>\n                <input name="truck_no" [readonly]="isReadonly()" type="text" formControlName="truck_no" class="form-control" /> \n              </div>\n              <div class="form-group">\n                  <label class="label">Truck Type</label>\n                  <input name="truck_type" [readonly]="isReadonly()" type="text" formControlName="truck_type" class="form-control" /> \n                </div>\n                <div class="form-group">\n                    <label class="label">Truck Capacity</label>\n                    <select class="form-control drop-down" formControlName="truck_capacity">\n                        <option *ngFor="let c of capacity" [ngValue]="c.value">{{c.name}}</option>\n                      </select>                         </div>\n                  <div class="form-group">\n                      <label class="label">Actual Weight</label>\n                      <input name="transporter_actual_weight" type="number" formControlName="transporter_actual_weight" class="form-control" /> \n                    </div>\n                    <div class="form-group">\n                        <label class="label">Rates Calculation</label>\n                        <select class="form-control drop-down" (change)="addCalculation()" name="transporter_rates_calculation" formControlName="transporter_rates_calculation"  >\n                            <option value="">Select Calculation</option>\n                            <option *ngFor="let cls of calculations" [ngValue]="cls">{{cls}}</option>\n                          </select>\n                    </div>\n<div class="form-group">\n    <label class="label">Freight</label>\n    <input name="transporter_freight" type="number" formControlName="transporter_freight" class="form-control" /> \n  </div>\n  <div class="form-group">\n      <label class="label">Declare Advance</label>\n      <input name="transporter_advance" type="number" formControlName="transporter_advance" class="form-control" /> \n    </div>\n    <div class="form-group">\n        <label class="label">Commission</label>\n        <input name="company_commission" type="number" formControlName="company_commission" class="form-control" /> \n      </div>\n\n      <div class="form-group">\n        <label class="label">Salesman</label>\n        <input name="company_salesman" [readonly]="isReadonly()" type="text" formControlName="company_salesman" class="form-control" /> \n      </div>\n\n        <div class="width-full" padding>   \n          <button ion-button block size="large" type="submit" (click)="save()" expand="block"> Deal Final </button>       \n        </div>\n              </div> -->\n      </div>\n  </form>\n\n\n\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-deal-final-new\add-deal-final-new\add-deal-final-new.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_9__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_8__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_7__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_6__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_5__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_4__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_2__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], AddDealFinalNewPage);
    return AddDealFinalNewPage;
}());

//# sourceMappingURL=add-deal-final-new.js.map

/***/ }),

/***/ 193:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficOperationsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the TrafficOperationsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var TrafficOperationsPage = /** @class */ (function () {
    function TrafficOperationsPage(navCtrl, navParams, requestLoad, actionSheetController, admin, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.categories = [
            'Deal Final',
            'Truck Verification',
            'Bank Details / Loading Status',
            'Receivable Advance',
            'Pending POD - T',
            'Pending POD - C',
            'Receivable Balance',
            'Commission'
        ];
        this.activeTab = this.categories[0];
        this.isShow = false;
        this.pendingBalance = [];
        this.pendingRcvBalance = [];
        localStorage.removeItem("quality");
    }
    TrafficOperationsPage.prototype.ionViewDidEnter = function () {
        console.log('ionViewDidLoad TrafficOperationsPage');
        // this.deal = this.navParams.get('data');
        localStorage.removeItem("quality");
        this.getDealFinalList();
    };
    TrafficOperationsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad TrafficOperationsPage');
        // this.deal = this.navParams.get('data');
        localStorage.removeItem("quality");
        // this.getDealFinalList();
    };
    TrafficOperationsPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    TrafficOperationsPage.prototype.setActiveTab = function (c) {
        this.activeTab = c;
    };
    TrafficOperationsPage.prototype.getDealFinalList = function () {
        var _this = this;
        console.log("getting <<<");
        this.loader.show();
        this.requestLoad.getDealFinalNewListSorted().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            data.results.forEach(function (d) {
                d.deal_date = __WEBPACK_IMPORTED_MODULE_6_moment__(d.deal_date).format('DD/MM/YYYY');
            });
            _this.deal = data.results;
            console.log('Data >>>>>>>', _this.deal);
            var tmp = [];
            var tmp2 = [];
            _this.deal = _this.deal.map(function (e) {
                // tmp.push()   
                e.tmp = [];
                e.traffic_operations.bank_details.forEach(function (k) {
                    // tmp.push(k.bank_amount) 
                    if (!isNaN(k.bank_amount)) {
                        e.tmp.push(k.bank_amount);
                    }
                });
                e.amountTotal = e.tmp.reduce(function (a, b) { return a + b; }, 0);
                return e;
            });
            _this.deal = _this.deal.map(function (e) {
                // tmp.push()   
                e.tmp2 = [];
                e.receivable_advance.forEach(function (k) {
                    // tmp.push(k.bank_amount)   
                    if (!isNaN(k.cheque_amount)) {
                        e.tmp2.push(k.cheque_amount);
                    }
                });
                e.amountTotal_recive = e.tmp2.reduce(function (a, b) { return a + b; }, 0);
                return e;
            });
            localStorage.setItem("data", JSON.stringify(_this.deal));
            _this.pendingVerification = _this.deal.filter(function (e) {
                return !e.traffic_operations.document_verification;
            });
            _this.podSubmit = _this.deal.filter(function (e) {
                return !e.traffic_operations.pod_c_uploaded;
            });
            _this.podRecive = _this.deal.filter(function (e) {
                return !e.traffic_operations.pod_t_uploaded;
            });
            _this.deal = _this.deal.map(function (e) {
                if (e.transporter_freight - e.receivable_advance.cheque_amount > 0) {
                    _this.pendingBalance.push(e.transporter_freight - e.receivable_advance.cheque_amount);
                }
                if (e.transporter_freight - e.traffic_operations.bank_details.bank_amount > 0) {
                    _this.pendingRcvBalance.push(e.transporter_freight - e.traffic_operations.bank_details.bank_amount);
                }
                return e;
            });
            console.log(_this.pendingBalance);
            _this.pendingAmnt = _this.pendingBalance.reduce(function (a, b) { return a + b; }, 0);
            _this.pendingRcvAmnt = _this.pendingRcvBalance.reduce(function (a, b) { return a + b; }, 0);
            _this.isShow = true;
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    TrafficOperationsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-traffic-operations',template:/*ion-inline-start:"D:\truck\src\pages\traffic-operations\traffic-operations.html"*/'<!--\n  Generated template for the TrafficOperationsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Traffic Operations</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()">\n          <ion-icon name="home"></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n\n    <!-- <ion-toolbar>\n      <ion-row class="filters">\n        <ion-col no-padding col-12>\n          <ion-slides slidesPerView="3.4">\n            <ion-slide *ngFor="let category of categories" (click)="selectedTab(category)" [class.selected]="activeTab === category">\n              <p>{{category}}</p>\n            </ion-slide>\n          </ion-slides>\n        </ion-col>\n      </ion-row>\n    </ion-toolbar> -->\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <!-- TABS -->\n <!--  <ion-row>\n    <ion-col>\n      <ul class="nav nav-tabs">\n        <li *ngFor="let c of categories" [ngClass]="{ active: activeTab == c }">\n          <a href="javascript:void(0)" (click)="setActiveTab(c)">{{ c }}</a>\n        </li>\n      </ul>\n    </ion-col>\n  </ion-row> -->\n\n<ion-row class="flex" *ngIf="isShow">\n  <div class="box">\n    <ion-card class="card_ico"><div><h4>Pending Vehicle Verification  </h4> <span>{{pendingVerification.length}}</span></div></ion-card>\n  </div>\n \n  <div class="box">\n    <ion-card class="card_ico"><div><h4>POD Submit</h4> \n      <span>{{podSubmit.length}}</span>\n      </div>\n    </ion-card>\n  </div>\n\n    <div class="box">\n    <ion-card class="card_ico"><div><h4>POD Receivable</h4> \n      <span>{{podRecive.length}}</span>\n      </div></ion-card>\n  </div>\n\n  <div class="box">\n    <ion-card class="card_ico"><div><h4>Payable Balance  </h4> \n      <span>Qty:{{pendingBalance.length}}</span>\n      <span>Amt:{{ pendingAmnt}}</span> \n    </div></ion-card>\n  </div>\n\n    <div class="box">\n    <ion-card class="card_ico"><div><h4> Receivable Balance  </h4> \n      <span>Qty:{{pendingRcvBalance.length}}</span>\n      <span>Amt:{{ pendingRcvAmnt}}</span> \n    </div></ion-card>\n  </div>\n\n\n</ion-row>  \n\n<div class="search">\n  <input type="text" placeholder="Search" class="form-control">\n</div>\n  <!-- CONTENTS -->\n  <ion-row  *ngIf="isShow">\n    <ion-col>\n        <traffic-ops-deals-tab [data]="deal"></traffic-ops-deals-tab>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Truck Verification\'">\n    <ion-col>\n        <traffic-ops-trucks-verification [data]="deal"></traffic-ops-trucks-verification>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Bank Details / Loading Status\'">\n    <ion-col>\n        <traffic-ops-bank-detail [data]="deal"></traffic-ops-bank-detail>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Receivable Advance\'">\n    <ion-col>\n        <traffic-ops-receivable-advance [data]="deal"></traffic-ops-receivable-advance>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Pending POD - T\'">\n    <ion-col>\n        <traffic-ops-pending-pod-t [data]="deal"></traffic-ops-pending-pod-t>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Pending POD - C\'">\n    <ion-col>\n        <traffic-ops-pending-pod-c [data]="deal"></traffic-ops-pending-pod-c>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Receivable Balance\'">\n    <ion-col>\n        <traffic-ops-receivable-balance [data]="deal"></traffic-ops-receivable-balance>\n    </ion-col>\n  </ion-row>\n<!-- \n  <ion-row *ngIf="activeTab === \'Commission\'">\n    <ion-col>\n        <traffic-ops-commission></traffic-ops-commission>\n    </ion-col>\n  </ion-row> -->\n  \n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\traffic-operations\traffic-operations.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */]])
    ], TrafficOperationsPage);
    return TrafficOperationsPage;
}());

//# sourceMappingURL=traffic-operations.js.map

/***/ }),

/***/ 194:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoadsAvailabilityPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__agm_core__ = __webpack_require__(25);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the LoadsAvailabilityPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var LoadsAvailabilityPage = /** @class */ (function () {
    function LoadsAvailabilityPage(navCtrl, navParams, requestLoad, actionSheetController, admin, loader, mapsAPILoader, ngZone) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.dataList = [];
        this.fromList = [];
        // Search query for From list
        this.fromSearch = function (keyword) {
            if (keyword) {
                return _this.requestLoad.searchFromPost(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_6_rxjs__["Observable"].of([]);
            }
        };
        // Search query for To list
        this.toSearch = function (keyword) {
            if (keyword) {
                return _this.requestLoad.searchToPost(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_6_rxjs__["Observable"].of([]);
            }
        };
        this.filterKeys = ['from'];
        this.filterKeysTo = ['destArray'];
        this.filteredData = [];
        this.search_from = '';
        this.search_to = '';
        this.getRequestLoadList();
        // setTimeout(() => {
        //   this.mapsAPILoader.load().then(() => {
        //     let formSearch = new google.maps.places.Autocomplete(this.searchElementRefFrom.nativeElement, {
        //       componentRestrictions: {"country": "IN"},
        //       types: []
        //     });
        //     formSearch.addListener("place_changed", () => {
        //       this.ngZone.run(() => {
        //         //get the place result
        //         let place: google.maps.places.PlaceResult = formSearch.getPlace();
        //         console.log("place   >>>>>>", place.address_components[0].long_name);
        //         console.log("vicinity   >>>>>>", place.vicinity);
        //         (<HTMLInputElement>document.getElementById('From')).value = place.vicinity;
        //         // this.addForm.controls['from'].setValue(place.vicinity);
        //         // this.addForm.value.form = place.vicinity;
        //       });
        //     });
        //     let toSearch = new google.maps.places.Autocomplete(this.searchElementRefTo.nativeElement, {
        //       componentRestrictions: {"country": "IN"},
        //       types: []
        //     });
        //     toSearch.addListener("place_changed", () => {
        //       this.ngZone.run(() => {
        //         //get the place result
        //         let place: google.maps.places.PlaceResult = toSearch.getPlace();
        //         console.log("place   >>>>>>", place.address_components[0].long_name);
        //         console.log("vicinity   >>>>>>", place.vicinity);
        //         (<HTMLInputElement>document.getElementById('TO')).value = place.vicinity;
        //         // this.getTo = place.vicinity;
        //         // let addr = this.addForm.get('addMultipleDestinations') as FormArray;
        //         // let first = addr.value[this.toIndex];
        //         // first.to = place.vicinity;
        //       });
        //     });
        //   });
        // }, 1000);
    }
    LoadsAvailabilityPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad LoadsAvailabilityPage');
    };
    LoadsAvailabilityPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    LoadsAvailabilityPage.prototype.getRequestLoadList = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getPostLoadList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.dataList = data.results;
            _this.dataList.forEach(function (r) {
                var destinationsArray = [];
                r.destinations.forEach(function (d) {
                    destinationsArray.push(d.to);
                });
                r.destArray = destinationsArray;
                _this.fromList.push({ "from": r.from });
            });
            console.log('Data >>>>>>>', _this.dataList);
            console.log('fromList >>>>>>>', _this.fromList);
            _this.filterFromData();
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    LoadsAvailabilityPage.prototype.filterFromData = function () {
        var _this = this;
        if (this.search_from) {
            this.filteredData = this.dataList.filter(function (obj) {
                return _this.filterKeys.some(function (propertyName) {
                    return obj[propertyName].toString().toLowerCase().includes(_this.search_from.toLowerCase());
                });
            });
        }
        else if (this.search_to) {
            this.filteredData = this.dataList.filter(function (obj) {
                return _this.filterKeysTo.some(function (propertyName) {
                    return obj[propertyName].toString().toLowerCase().includes(_this.search_to.toLowerCase());
                });
            });
        }
        else {
            this.filteredData = this.dataList;
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchFrom"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], LoadsAvailabilityPage.prototype, "searchElementRefFrom", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchTo"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], LoadsAvailabilityPage.prototype, "searchElementRefTo", void 0);
    LoadsAvailabilityPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-loads-availability',template:/*ion-inline-start:"D:\truck\src\pages\loads-availability\loads-availability.html"*/'<!--\n  Generated template for the LoadsAvailabilityPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Loads Availability</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n    <!-- <ion-row>\n      <ion-col>\n        <input name="from" type="text" id="From" placeholder="Search From" [(ngModel)]="search_from" (input)="filterFromData()" class="form-control" #searchFrom /> \n      </ion-col>\n      <ion-col>\n        <input name="to" type="text" id="TO" placeholder="Search To" [(ngModel)]="search_to" (input)="filterFromData()" class="form-control" #searchTo /> \n      </ion-col>\n    </ion-row> -->\n\n\n  <ion-row>\n    <ion-col>\n      <input class="form-control" ng2-auto-complete [source]="fromSearch.bind(this)" list-formatter="from" placeholder="Search From" [(ngModel)]="search_from" (input)="filterFromData()" />\n    </ion-col>\n    <ion-col>\n      <input class="form-control" ng2-auto-complete [source]="toSearch.bind(this)" list-formatter="value" placeholder="Search To" [(ngModel)]="search_to" (input)="filterFromData()" />\n    </ion-col>\n  </ion-row>\n  \n  <ion-card *ngFor="let rl of filteredData">\n\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ rl.ticket_no }} {{ rl.company_name }}</span><br>\n        <!-- <span class="agency-name">Agency: {{ rl.agency_name }}</span><br> -->\n      </p>\n      <div padding>\n          <div class="width-full bottom-border loadingplace">\n              <p class="left">\n               <span>{{ rl.from }}</span>\n              </p>\n              <p class="right">\n                <span *ngIf="rl.destinations[0]">{{ rl.destinations[0].to ? rl.destinations[0].to: "" }}</span><br>\n                <span *ngIf="rl.destinations[0]" class="fright">({{ rl.destinations[0].unloading_place ? rl.destinations[0].unloading_place: "" }})</span>\n              </p>\n          </div>\n          <div class="width-full bottom-border loading-div">\n            <div>\n              <span><b>Truck Type:</b> <br>{{ rl.truck_type }}</span>\n              <span><b>Capacity:</b><br> {{ rl.capacity }}</span>\n              <span><b>Payment Type:</b><br> {{ rl.payment_mode }}</span>\n              <span><b>Unloading Place:</b><br> {{ rl.unloading_place }}</span>\n            </div>\n          </div>\n          <div class="width-full bottom-border rating">\n              <span>{{ rl.ton }} ton * {{ rl.rate }} rates</span>\n            </div>\n        </div>\n    </ion-card-content>\n  </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\loads-availability\loads-availability.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_5__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_7__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], LoadsAvailabilityPage);
    return LoadsAvailabilityPage;
}());

//# sourceMappingURL=loads-availability.js.map

/***/ }),

/***/ 195:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DealFinalPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__manage_deal_final__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_moment__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the DealFinalPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var DealFinalPage = /** @class */ (function () {
    function DealFinalPage(navCtrl, navParams, loader, toast, fb, requestLoad, events, trucks, admin, mapsAPILoader, ngZone) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.events = events;
        this.trucks = trucks;
        this.admin = admin;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.toDate = new Date().toISOString();
        this.types = ['Request Load', 'Post Load'];
        this.statuses = ['Deal Final', 'Cancel'];
        this.calculations = ['Fixed', 'Actual Weight', 'Truck Capacity'];
        this.mainCompanyAdvance = [];
        this.mainTransporterAdvance = [];
        this.mainAccoutsList = [];
        this.mainPaymentMode = [];
        this.mainPaymentTypes = [];
        this.dealFlag = true;
        this.companyFlag = false;
        this.transportFlag = false;
        this.transporterRatesFlag = false;
        this.driverFlag = false;
        this.salesmanList = [];
        this.mainRewardsLedger = [];
        this.agencyPercentage = 0;
        this.indianaTruckingPercentage = 0;
        this.investorPercentage = 0;
        this.investorName = "";
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Transporter Name list
        this.transporterName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTransporterName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Company no list
        this.companyName = function (keyword) {
            if (keyword) {
                return _this.requestLoad.searchCompany(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Driver Name list
        this.DriverName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchDriverName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        this.addForm = this.fb.group({
            deal_date: [this.toDate],
            agency_name: [''],
            load_type: [''],
            status: [''],
            company_ticket_no: [''],
            company_name: [''],
            from: [''],
            loading_place: [''],
            to: [''],
            unloading_place: [''],
            rates_company: [''],
            advance_company: [''],
            weight_company: [''],
            transporter_ticket_no: [''],
            truck_no: [''],
            transporter_name: [''],
            // puc: [''],
            // insurance: [''],
            truck_rates: [''],
            truck_weight: [''],
            truck_advance: [''],
            actual_weight: [''],
            freight: [''],
            driver_name: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required])],
            licence_expiry: [''],
            rate_calculation: [''],
            // ---------- New -------
            user_name: [''],
            company_date: [this.toDate],
            company_payment_type: [''],
            // company_payment_mode: [''],
            company_account_name: [''],
            company_amount: [''],
            company_remarks: [''],
            transporter_date: [this.toDate],
            transporter_payment_type: [''],
            transporter_payment_mode: [''],
            transporter_account_name: [''],
            transporter_amount: [''],
            transporter_remarks: [''],
            company_salesman: [''],
            transporter_salesman: [''],
            deal_final_salesman: [''],
        });
        var RequestData = this.navParams.get('requestData');
        if (RequestData) {
            this.addForm.controls['load_type'].setValue('Request Load');
            this.addForm.controls['transporter_ticket_no'].setValue(RequestData.ticket_no ? RequestData.ticket_no : "");
            this.addForm.controls['truck_no'].setValue(RequestData.truck_no ? RequestData.truck_no : "");
            this.addForm.controls['transporter_salesman'].setValue(RequestData.salesman ? RequestData.salesman : "");
            this.addForm.controls['transporter_name'].setValue(RequestData.transporter_name ? RequestData.transporter_name : "");
            this.requestLoadID = RequestData._id;
        }
        var PostData = this.navParams.get('postData');
        if (PostData) {
            console.log("PostData  >>>", PostData);
            this.addForm.controls['load_type'].setValue('Post Load');
            this.addForm.controls['company_ticket_no'].setValue(PostData.ticket_no ? PostData.ticket_no : "");
            this.addForm.controls['company_salesman'].setValue(PostData.salesman ? PostData.salesman : "");
            this.addForm.controls['company_name'].setValue(PostData.company_name ? PostData.company_name : "");
            this.addForm.controls['from'].setValue(PostData.from ? PostData.from : "");
            this.addForm.controls['loading_place'].setValue(PostData.loading_place ? PostData.loading_place : "");
            if (PostData.destinations[0]) {
                this.addForm.controls['to'].setValue(PostData.destinations[0].to ? PostData.destinations[0].to : "");
                this.addForm.controls['unloading_place'].setValue(PostData.destinations[0].unloading_place ? PostData.destinations[0].unloading_place : "");
            }
            this.addForm.controls['rates_company'].setValue(PostData.rate ? PostData.rate : 0);
            this.addForm.controls['advance_company'].setValue(PostData.advance ? PostData.advance : 0);
            this.addForm.controls['weight_company'].setValue(PostData.ton ? PostData.ton : 0);
            this.addForm.controls['truck_weight'].setValue(PostData.ton ? PostData.ton : 0);
            this.postLoadID = PostData._id;
        }
        this.getAccounts();
        this.getPaymentMode();
        this.getPaymentType();
        this.getMaxSrNo();
        this.getSalesmanList();
    }
    DealFinalPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad DealFinalPage');
    };
    DealFinalPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    DealFinalPage.prototype.companyAddInArray = function () {
        var _this = this;
        var srno;
        this.mainAccoutsList.forEach(function (element) {
            if (element.account_name == _this.addForm.value.company_account_name) {
                srno = element.srno;
            }
        });
        var obj = {
            "company_date": this.addForm.value.company_date,
            "company_payment_type": this.addForm.value.company_payment_type,
            // "company_payment_mode": this.addForm.value.company_payment_mode, 
            "company_account_name": this.addForm.value.company_account_name,
            "company_amount": this.addForm.value.company_amount,
            "company_remarks": this.addForm.value.company_remarks,
            "date_format": __WEBPACK_IMPORTED_MODULE_13_moment__(this.addForm.value.company_date).format('DD-MM-YYYY'),
            "srno": srno
        };
        this.mainCompanyAdvance.push(obj);
        this.addForm.controls['company_date'].setValue(this.toDate);
        this.addForm.controls['company_payment_type'].setValue('');
        // this.addForm.controls['company_payment_mode'].setValue('');
        this.addForm.controls['company_account_name'].setValue('');
        this.addForm.controls['company_amount'].setValue('');
        this.addForm.controls['company_remarks'].setValue('');
    };
    DealFinalPage.prototype.companyRemoveInArray = function (index) {
        this.mainCompanyAdvance.splice(index, 1);
        console.log("array >>>", this.mainCompanyAdvance);
    };
    DealFinalPage.prototype.transporterAddInArray = function () {
        // mainTransporterAdvance mainCompanyAdvance
        var _this = this;
        var srno;
        this.mainAccoutsList.forEach(function (element) {
            if (element.account_name == _this.addForm.value.transporter_account_name) {
                srno = element.srno;
            }
        });
        var obj = {
            "transporter_date": this.addForm.value.transporter_date,
            "transporter_payment_type": this.addForm.value.transporter_payment_type,
            "transporter_payment_mode": this.addForm.value.transporter_payment_mode,
            "transporter_account_name": this.addForm.value.transporter_account_name,
            "transporter_amount": this.addForm.value.transporter_amount,
            "transporter_remarks": this.addForm.value.transporter_remarks,
            "date_format": __WEBPACK_IMPORTED_MODULE_13_moment__(this.addForm.value.transporter_date).format('DD-MM-YYYY'),
            "srno": srno
        };
        this.mainTransporterAdvance.push(obj);
        this.addForm.controls['transporter_date'].setValue(this.toDate);
        this.addForm.controls['transporter_payment_type'].setValue('');
        this.addForm.controls['transporter_payment_mode'].setValue('');
        this.addForm.controls['transporter_account_name'].setValue('');
        this.addForm.controls['transporter_amount'].setValue('');
        this.addForm.controls['transporter_remarks'].setValue('');
    };
    DealFinalPage.prototype.transporterRemoveInArray = function (index) {
        this.mainTransporterAdvance.splice(index, 1);
        console.log("array >>>", this.mainTransporterAdvance);
    };
    DealFinalPage.prototype.getMaxSrNo = function () {
        var _this = this;
        this.requestLoad.getMaxSrNo().subscribe(function (res) {
            var data = res.json();
            console.log("max_sr_no >>>>", data.max_no);
            _this.max_sr_no = data.max_no;
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    DealFinalPage.prototype.getAccounts = function () {
        var _this = this;
        var agency_name = localStorage.getItem('agency_name');
        console.log("agency_name >>>>", agency_name);
        this.requestLoad.getAccountsByAgency(agency_name).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            // console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.mainAccoutsList.push({ "srno": element.srno, "account_name": element.account_name });
            });
            console.log("mainAccoutsList >>>>", _this.mainAccoutsList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    DealFinalPage.prototype.getPaymentMode = function () {
        var _this = this;
        this.requestLoad.getPaymentModeList().subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            dataList.forEach(function (element) {
                _this.mainPaymentMode.push(element.name);
            });
            console.log("mainPaymentMode >>>>", _this.mainPaymentMode);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    DealFinalPage.prototype.getPaymentType = function () {
        var _this = this;
        this.requestLoad.getPaymentTypesList().subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            dataList.forEach(function (element) {
                _this.mainPaymentTypes.push(element.name);
            });
            console.log("mainPaymentTypes >>>>", _this.mainPaymentTypes);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    DealFinalPage.prototype.getSalesmanList = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        this.admin.getListByAgency(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.salesmanList.push(element.first_name);
            });
            console.log("salesmanList >>>>", _this.salesmanList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    DealFinalPage.prototype.addCalculation = function () {
        var getFormData = this.addForm.value;
        var rateCalculation = getFormData.rate_calculation;
        var truckRates = getFormData.truck_rates ? getFormData.truck_rates : 0;
        var truckWeight = getFormData.truck_weight ? getFormData.truck_weight : 0;
        var actualWeight = getFormData.actual_weight ? getFormData.actual_weight : 0;
        var freightTotal = 0;
        // calculations = ['Fixed', 'Actual Weight', 'Truck capacity'];
        if (rateCalculation == "Fixed") {
            freightTotal = truckRates;
        }
        if (rateCalculation == "Actual Weight") {
            freightTotal = truckRates * actualWeight;
        }
        if (rateCalculation == "Truck Capacity") {
            freightTotal = truckRates * truckWeight;
        }
        this.addForm.controls['freight'].setValue(freightTotal);
    };
    DealFinalPage.prototype.getRequestLoadById = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getRequestLoadByID(this.addForm.value.transporter_ticket_no).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                _this.addForm.controls['truck_no'].setValue(dataList[0].truck_no ? dataList[0].truck_no : "");
                _this.addForm.controls['transporter_salesman'].setValue(dataList[0].salesman ? dataList[0].salesman : "");
                _this.addForm.controls['transporter_name'].setValue(dataList[0].transporter_name ? dataList[0].transporter_name : "");
                _this.requestLoadID = dataList[0]._id;
            }
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    DealFinalPage.prototype.getPostLoadById = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getPostLoadByID(this.addForm.value.company_ticket_no).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                _this.addForm.controls['company_salesman'].setValue(dataList[0].salesman ? dataList[0].salesman : "");
                _this.addForm.controls['company_name'].setValue(dataList[0].company_name ? dataList[0].company_name : "");
                _this.addForm.controls['from'].setValue(dataList[0].from ? dataList[0].from : "");
                _this.addForm.controls['loading_place'].setValue(dataList[0].loading_place ? dataList[0].loading_place : "");
                if (dataList[0].destinations[0]) {
                    _this.addForm.controls['to'].setValue(dataList[0].destinations[0].to ? dataList[0].destinations[0].to : "");
                    _this.addForm.controls['unloading_place'].setValue(dataList[0].destinations[0].unloading_place ? dataList[0].destinations[0].unloading_place : "");
                }
                _this.addForm.controls['rates_company'].setValue(dataList[0].rate ? dataList[0].rate : 0);
                _this.addForm.controls['advance_company'].setValue(dataList[0].advance ? dataList[0].advance : 0);
                _this.addForm.controls['weight_company'].setValue(dataList[0].ton ? dataList[0].ton : 0);
                _this.addForm.controls['truck_weight'].setValue(dataList[0].ton ? dataList[0].ton : 0);
                _this.postLoadID = dataList[0]._id;
            }
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    DealFinalPage.prototype.onselectDealFinalSalesman = function () {
        var _this = this;
        var getFormData = this.addForm.value;
        var i = 0;
        var truckNo = getFormData.truck_no.truck_no ? getFormData.truck_no.truck_no : getFormData.truck_no;
        if (getFormData.company_salesman) {
            console.log("In Company Salesman >>>>");
            this.admin.getRewardsByFirstName(getFormData.company_salesman).subscribe(function (res) {
                var data = res.json();
                console.log("data >>>>", data.reward_points);
                var rp = data.reward_points / 2;
                var obj = {
                    "agency_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
                    "branch": localStorage.getItem('agency_name'),
                    "agency_id": getFormData.agency_name._id,
                    "salesman": getFormData.company_salesman,
                    "truck_no": truckNo,
                    "srno": _this.max_sr_no,
                    "narration_ref_no": "Deal no " + _this.max_sr_no + " Truck no " + truckNo,
                    "document_type": "DF",
                    "debit_amount": '',
                    "credit_amount": rp,
                    "voucher_date": getFormData.deal_date,
                    "username": localStorage.getItem('user_name')
                };
                _this.mainRewardsLedger.push(obj);
            }, function (err) {
                console.log(">>>>error", err);
            });
            i = i + 1;
        }
        if (getFormData.transporter_salesman) {
            console.log("In Transporter Salesman >>>>");
            this.admin.getRewardsByFirstName(getFormData.transporter_salesman).subscribe(function (res) {
                var data = res.json();
                console.log("data >>>>", data.reward_points);
                var rp = data.reward_points / 2;
                var obj = {
                    "agency_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
                    "branch": localStorage.getItem('agency_name'),
                    "agency_id": getFormData.agency_name._id,
                    "salesman": getFormData.transporter_salesman,
                    "truck_no": truckNo,
                    "srno": _this.max_sr_no,
                    "narration_ref_no": "Deal no " + _this.max_sr_no,
                    "document_type": "DF",
                    "debit_amount": '',
                    "credit_amount": rp,
                    "voucher_date": getFormData.deal_date,
                    "username": localStorage.getItem('user_name')
                };
                _this.mainRewardsLedger.push(obj);
            }, function (err) {
                console.log(">>>>error", err);
            });
            i = i + 1;
        }
        // if (i == 0) {
        //   console.log("I 0 >>>>");
        //   this.admin.getRewardsByFirstName(getFormData.deal_final_salesman).subscribe((res: any) => {
        //     var data = res.json(); 
        //     console.log("data >>>>", data.reward_points);  
        //     var obj = {
        //       "agency_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name: getFormData.agency_name,
        //       "branch": localStorage.getItem('agency_name'),
        //       "agency_id":  getFormData.agency_name._id,
        //       "salesman": getFormData.deal_final_salesman,
        //       "truck_no": truckNo,
        //       "srno": this.max_sr_no,
        //       "narration_ref_no": "Deal no "+this.max_sr_no,
        //       "document_type": "DF",
        //       "debit_amount": '',
        //       "credit_amount": data.reward_points,
        //       "voucher_date": getFormData.deal_date,
        //       "username": localStorage.getItem('user_name')
        //     };
        //     this.mainRewardsLedger.push(obj);
        //   }, err => {
        //     console.log(">>>>error", err);
        //   });
        // } else {
        //   console.log("I More >>>>");
        //   this.admin.getRewardsByFirstName(getFormData.deal_final_salesman).subscribe((res: any) => {
        //     var data = res.json(); 
        //     console.log("data >>>>", data.reward_points);  
        //     var rp = data.reward_points / 2; 
        //     var obj = {
        //       "agency_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name: getFormData.agency_name,
        //       "branch": localStorage.getItem('agency_name'),
        //       "agency_id":  getFormData.agency_name._id,
        //       "salesman": getFormData.deal_final_salesman,
        //       "truck_no": truckNo,
        //       "srno": this.max_sr_no,
        //       "narration_ref_no": "Deal no "+this.max_sr_no,
        //       "document_type": "DF",
        //       "debit_amount": '',
        //       "credit_amount": rp,
        //       "voucher_date": getFormData.deal_date,
        //       "username": localStorage.getItem('user_name')
        //     };
        //     this.mainRewardsLedger.push(obj);
        //   }, err => {
        //     console.log(">>>>error", err);
        //   });
        // }
    };
    DealFinalPage.prototype.save = function (isValid) {
        var _this = this;
        console.log("Form Data  >>>>", isValid);
        // if (isValid) {
        var getFormData = this.addForm.value;
        var obj = {
            sr_no: this.max_sr_no,
            deal_date: getFormData.deal_date,
            agency_name: getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
            load_type: getFormData.load_type,
            status: getFormData.status,
            company_ticket_no: getFormData.company_ticket_no,
            company_name: getFormData.company_name.company_name ? getFormData.company_name.company_name : getFormData.company_name,
            from: getFormData.from,
            loading_place: getFormData.loading_place,
            to: getFormData.to,
            unloading_place: getFormData.unloading_place,
            rates_company: getFormData.rates_company,
            advance_company: getFormData.advance_company,
            weight_company: getFormData.weight_company,
            transporter_ticket_no: getFormData.transporter_ticket_no,
            truck_no: getFormData.truck_no.truck_no ? getFormData.truck_no.truck_no : getFormData.truck_no,
            transporter_name: getFormData.transporter_name.transport_name ? getFormData.transporter_name.transport_name : getFormData.transporter_name,
            // // puc: getFormData.puc,
            // // insurance: getFormData.insurance,
            truck_rates: getFormData.truck_rates,
            truck_weight: getFormData.truck_weight,
            truck_advance: getFormData.truck_advance,
            actual_weight: getFormData.actual_weight,
            freight: getFormData.freight,
            driver_name: getFormData.driver_name.driver_name ? getFormData.driver_name.driver_name : getFormData.driver_name,
            licence_expiry: getFormData.licence_expiry,
            rate_calculation: getFormData.rate_calculation,
            user_name: getFormData.user_name,
            transporter_advance_data: this.mainTransporterAdvance,
            company_advance_data: this.mainCompanyAdvance,
            company_salesman: getFormData.company_salesman,
            transporter_salesman: getFormData.transporter_salesman,
            deal_final_salesman: getFormData.deal_final_salesman
            // mainTransporterAdvance mainCompanyAdvance
        };
        console.log("Data  >>>>", obj);
        this.loader.show();
        // ------>> Update Post Load 
        if (getFormData.company_ticket_no && getFormData.status == "Deal Final") {
            var postLoadObj = { "status": "Deal Final" };
            console.log("postLoadID >>>>>", this.postLoadID);
            this.requestLoad.updatePostLoadStatus(this.postLoadID, postLoadObj).subscribe(function (res) {
                console.log("Updated Post Load>>>>>");
            }, function (err) {
                console.log(">>>>>Err", err);
                _this.toast.error({ 'message': 'Something went wrong.' });
            });
        }
        // ------>> Update Request Load 
        if (getFormData.transporter_ticket_no && getFormData.status == "Deal Final") {
            var requestLoadObj = { "status": "Deal Final" };
            console.log("requestLoadID >>>>>", this.requestLoadID);
            this.requestLoad.updateRequestLoadStatus(this.requestLoadID, requestLoadObj).subscribe(function (res) {
                console.log("Updated Request Load>>>>>");
            }, function (err) {
                console.log(">>>>>Err", err);
                _this.toast.error({ 'message': 'Something went wrong.' });
            });
        }
        this.requestLoad.addDealFinal(obj).subscribe(function (res) {
            var data = res.json();
            var accountsLedgerArray = [];
            // Cash / Bank  srno 1
            // BPCL  srno 3
            // Commission srno 4
            // Diesal Account srno 5
            var agencyName = getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name;
            var agencyId = getFormData.agency_name._id;
            var companyBranchName = getFormData.company_name.company_name ? getFormData.company_name.company_name : getFormData.company_name;
            var companyBranchId = getFormData.company_name._id ? getFormData.company_name._id : _this.companyId;
            var transporterBranchName = getFormData.transporter_name.transport_name ? getFormData.transporter_name.transport_name : getFormData.transporter_name;
            var transporterBranchId = getFormData.transporter_name._id ? getFormData.transporter_name._id : _this.transporterId;
            var truckNo = getFormData.truck_no.truck_no ? getFormData.truck_no.truck_no : getFormData.truck_no;
            var srNo = _this.max_sr_no;
            var dealId = data.data._id;
            var userName = localStorage.getItem('user_name');
            var userId = localStorage.getItem('user_id');
            // **************** Company ******************
            var companyMainDebit = {
                "agency_name": agencyName,
                "branch_id": companyBranchId,
                "branch_name": companyBranchName,
                "account_name": "Freight Account",
                "truck_no": truckNo,
                "sr_no": srNo,
                "deal_id": dealId,
                "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                "narration_ref_no": "",
                "document_type": "DF",
                "debit_amount": getFormData.rates_company,
                "credit_amount": '',
                "voucher_date": getFormData.deal_date,
                "party_name": "",
                "user_name": userName,
                "user_id": userId
            };
            accountsLedgerArray.push(companyMainDebit);
            var companyMainCredit = {
                "agency_name": agencyName,
                "branch_id": companyBranchId,
                "branch_name": companyBranchName,
                "account_name": agencyName,
                "truck_no": truckNo,
                "sr_no": srNo,
                "deal_id": dealId,
                "narration": "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                "narration_ref_no": "",
                "document_type": "DF",
                "debit_amount": '',
                "credit_amount": getFormData.rates_company,
                "voucher_date": getFormData.deal_date,
                "party_name": "",
                "user_name": userName,
                "user_id": userId
            };
            accountsLedgerArray.push(companyMainCredit);
            //-------------- For Credit Account ------
            _this.mainCompanyAdvance.forEach(function (element) {
                var mainString = "";
                if (element.srno == 1) {
                    mainString = agencyName + "Advance Paid Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                if (element.srno == 5) {
                    mainString = "Diesal Paid Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                var obj = {
                    "agency_name": agencyName,
                    "branch_id": companyBranchId,
                    "branch_name": companyBranchName,
                    "account_name": element.company_account_name,
                    "truck_no": truckNo,
                    "sr_no": srNo,
                    "deal_id": dealId,
                    "narration": mainString,
                    "narration_ref_no": "",
                    "document_type": "DF",
                    "debit_amount": '',
                    "credit_amount": element.company_amount,
                    "voucher_date": getFormData.deal_date,
                    "party_name": "",
                    "user_name": userName,
                    "user_id": userId
                };
                accountsLedgerArray.push(obj);
            });
            //-------------- For Debit Agency ------
            _this.mainCompanyAdvance.forEach(function (element) {
                var mainString = "";
                if (element.srno == 1) {
                    mainString = "Advance Paid Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                if (element.srno == 5) {
                    mainString = "Diesal Paid Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                var obj = {
                    "agency_name": agencyName,
                    "branch_id": companyBranchId,
                    "branch_name": companyBranchName,
                    "account_name": agencyName,
                    "truck_no": truckNo,
                    "sr_no": srNo,
                    "deal_id": dealId,
                    "narration": mainString,
                    "narration_ref_no": "",
                    "document_type": "DF",
                    "debit_amount": element.company_amount,
                    "credit_amount": '',
                    "voucher_date": getFormData.deal_date,
                    "party_name": "",
                    "user_name": userName,
                    "user_id": userId
                };
                accountsLedgerArray.push(obj);
            });
            // **************** Transporter ******************
            var transporterMainCredit = {
                "agency_name": agencyName,
                "branch_id": transporterBranchId,
                "branch_name": transporterBranchName,
                "account_name": "Freight Account",
                "truck_no": truckNo,
                "sr_no": srNo,
                "deal_id": dealId,
                "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                "narration_ref_no": "",
                "document_type": "DF",
                "debit_amount": '',
                "credit_amount": getFormData.truck_rates,
                "voucher_date": getFormData.deal_date,
                "party_name": "",
                "user_name": userName,
                "user_id": userId
            };
            accountsLedgerArray.push(transporterMainCredit);
            var transporterMainDebit = {
                "agency_name": agencyName,
                "branch_id": transporterBranchId,
                "branch_name": transporterBranchName,
                "account_name": agencyName,
                "truck_no": truckNo,
                "sr_no": srNo,
                "deal_id": dealId,
                "narration": "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                "narration_ref_no": "",
                "document_type": "DF",
                "debit_amount": getFormData.truck_rates,
                "credit_amount": '',
                "voucher_date": getFormData.deal_date,
                "party_name": "",
                "user_name": userName,
                "user_id": userId
            };
            accountsLedgerArray.push(transporterMainDebit);
            //-------------- For Debit Account ------
            _this.mainTransporterAdvance.forEach(function (element) {
                var mainString = "";
                if (element.srno == 1) {
                    mainString = "Advance Received from " + transporterBranchName + " Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                else if (element.srno == 5) {
                    mainString = "Diesal Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                else {
                    mainString = "Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                var transporterDebit = {
                    "agency_name": agencyName,
                    "branch_id": transporterBranchId,
                    "branch_name": transporterBranchName,
                    "account_name": element.transporter_account_name,
                    "truck_no": truckNo,
                    "sr_no": srNo,
                    "deal_id": dealId,
                    "narration": mainString,
                    "narration_ref_no": "",
                    "document_type": "DF",
                    "debit_amount": element.transporter_amount,
                    "credit_amount": '',
                    "voucher_date": getFormData.deal_date,
                    "party_name": "",
                    "user_name": userName,
                    "user_id": userId
                };
                accountsLedgerArray.push(transporterDebit);
            });
            //-------------- For Credit Agency ------
            _this.mainTransporterAdvance.forEach(function (element) {
                var mainString = "";
                if (element.srno == 1) {
                    mainString = "Advance Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                if (element.srno == 4) {
                    mainString = "Commission Paid  Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                if (element.srno == 5) {
                    mainString = "Diesal Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                var transporterDebit = {
                    "agency_name": agencyName,
                    "branch_id": transporterBranchId,
                    "branch_name": transporterBranchName,
                    "account_name": agencyName,
                    "truck_no": truckNo,
                    "sr_no": srNo,
                    "deal_id": dealId,
                    "narration": mainString,
                    "narration_ref_no": "",
                    "document_type": "DF",
                    "debit_amount": '',
                    "credit_amount": element.transporter_amount,
                    "voucher_date": getFormData.deal_date,
                    "party_name": "",
                    "user_name": userName,
                    "user_id": userId
                };
                accountsLedgerArray.push(transporterDebit);
            });
            // **************** Agency ******************
            var AgencyMainCredit = {
                "agency_name": agencyName,
                "branch_id": agencyId,
                "branch_name": agencyName,
                "account_name": transporterBranchName,
                "truck_no": truckNo,
                "sr_no": srNo,
                "deal_id": dealId,
                "narration": "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                "narration_ref_no": "",
                "document_type": "DF",
                "debit_amount": '',
                "credit_amount": getFormData.truck_rates,
                "voucher_date": getFormData.deal_date,
                "party_name": "",
                "user_name": userName,
                "user_id": userId
            };
            accountsLedgerArray.push(AgencyMainCredit);
            var AgencyMainDebit = {
                "agency_name": agencyName,
                "branch_id": agencyId,
                "branch_name": agencyName,
                "account_name": companyBranchName,
                "truck_no": truckNo,
                "sr_no": srNo,
                "deal_id": dealId,
                "narration": "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                "narration_ref_no": "",
                "document_type": "DF",
                "debit_amount": getFormData.truck_rates,
                "credit_amount": '',
                "voucher_date": getFormData.deal_date,
                "party_name": "",
                "user_name": userName,
                "user_id": userId
            };
            accountsLedgerArray.push(AgencyMainDebit);
            var companyMainCreditAgain = {
                "agency_name": agencyName,
                "branch_id": agencyId,
                "branch_name": agencyName,
                "account_name": "Freight Account",
                "truck_no": truckNo,
                "sr_no": srNo,
                "deal_id": dealId,
                "narration": companyBranchName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                "narration_ref_no": "",
                "document_type": "DF",
                "debit_amount": '',
                "credit_amount": getFormData.rates_company,
                "voucher_date": getFormData.deal_date,
                "party_name": "",
                "user_name": userName,
                "user_id": userId
            };
            accountsLedgerArray.push(companyMainCreditAgain);
            var transporterMainDebitAgain = {
                "agency_name": agencyName,
                "branch_id": agencyId,
                "branch_name": agencyName,
                "account_name": "Freight Account",
                "truck_no": truckNo,
                "sr_no": srNo,
                "deal_id": dealId,
                "narration": "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                "narration_ref_no": "",
                "document_type": "DF",
                "debit_amount": getFormData.truck_rates,
                "credit_amount": '',
                "voucher_date": getFormData.deal_date,
                "party_name": "",
                "user_name": userName,
                "user_id": userId
            };
            accountsLedgerArray.push(transporterMainDebitAgain);
            //-------------- For Credit Company ---------
            _this.mainCompanyAdvance.forEach(function (element) {
                var mainString = "";
                if (element.srno == 1) {
                    mainString = "Being Cash Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                if (element.srno == 5) {
                    mainString = "Diesal Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                var obj = {
                    "agency_name": agencyName,
                    "branch_id": agencyId,
                    "branch_name": agencyName,
                    "account_name": companyBranchName,
                    "truck_no": truckNo,
                    "sr_no": srNo,
                    "deal_id": dealId,
                    "narration": mainString,
                    "narration_ref_no": "",
                    "document_type": "DF",
                    "debit_amount": '',
                    "credit_amount": element.company_amount,
                    "voucher_date": getFormData.deal_date,
                    "party_name": "",
                    "user_name": userName,
                    "user_id": userId
                };
                accountsLedgerArray.push(obj);
            });
            //-------------- For Debit Company Account Name ---------
            _this.mainCompanyAdvance.forEach(function (element) {
                var mainString = "";
                if (element.srno == 1) {
                    mainString = "Advance Received from " + companyBranchName + "Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                if (element.srno == 5) {
                    mainString = "Diesal Paid " + transporterBranchName + " Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                var obj = {
                    "agency_name": agencyName,
                    "branch_id": agencyId,
                    "branch_name": agencyName,
                    "account_name": element.company_account_name,
                    "truck_no": truckNo,
                    "sr_no": srNo,
                    "deal_id": dealId,
                    "narration": mainString,
                    "narration_ref_no": "",
                    "document_type": "DF",
                    "debit_amount": element.company_amount,
                    "credit_amount": '',
                    "voucher_date": getFormData.deal_date,
                    "party_name": "",
                    "user_name": userName,
                    "user_id": userId
                };
                accountsLedgerArray.push(obj);
            });
            //-------------- For Credit Transporter ---------
            _this.mainTransporterAdvance.forEach(function (element) {
                var mainString = "";
                if (element.srno == 1) {
                    mainString = "Being Amount Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                if (element.srno == 4) {
                    mainString = "Commission Deducted Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                if (element.srno == 5) {
                    mainString = "Diesal Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                var obj = {
                    "agency_name": agencyName,
                    "branch_id": agencyId,
                    "branch_name": agencyName,
                    "account_name": element.transporter_account_name,
                    "truck_no": truckNo,
                    "sr_no": srNo,
                    "deal_id": dealId,
                    "narration": mainString,
                    "narration_ref_no": "",
                    "document_type": "DF",
                    "debit_amount": '',
                    "credit_amount": element.transporter_amount,
                    "voucher_date": getFormData.deal_date,
                    "party_name": "",
                    "user_name": userName,
                    "user_id": userId
                };
                accountsLedgerArray.push(obj);
            });
            //-------------- For Debit Transporter Account Name ---------
            _this.mainTransporterAdvance.forEach(function (element) {
                var mainString = "";
                if (element.srno == 1) {
                    mainString = "Being Amount Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                if (element.srno == 4) {
                    mainString = "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                if (element.srno == 5) {
                    mainString = "Diesal Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                }
                var obj = {
                    "agency_name": agencyName,
                    "branch_id": agencyId,
                    "branch_name": agencyName,
                    "account_name": transporterBranchName,
                    "truck_no": truckNo,
                    "sr_no": srNo,
                    "deal_id": dealId,
                    "narration": mainString,
                    "narration_ref_no": "",
                    "document_type": "DF",
                    "debit_amount": element.transporter_amount,
                    "credit_amount": '',
                    "voucher_date": getFormData.deal_date,
                    "party_name": "",
                    "user_name": userName,
                    "user_id": userId
                };
                accountsLedgerArray.push(obj);
            });
            // **************** Commission ******************
            _this.mainTransporterAdvance.forEach(function (element) {
                if (element.srno == 4) {
                    // this.investorName
                    var investorCr = (element.transporter_amount * _this.investorPercentage) / 100;
                    var indianaTruckingCr = (element.transporter_amount * _this.indianaTruckingPercentage) / 100;
                    var agencyCr = (element.transporter_amount * _this.agencyPercentage) / 100;
                    // Add Main Commission
                    // var obj = {
                    //   "agency_name": agencyName,
                    //   "branch_id": agencyId,
                    //   "branch_name": agencyName,
                    //   "account_name": transporterBranchName,
                    //   "truck_no": truckNo,
                    //   "sr_no": srNo,
                    //   "deal_id": dealId,
                    //   "narration": "Commission Against Freight From "+ getFormData.from +" To "+ getFormData.to +" as per DF no "+ srNo + " Truck no " + truckNo,  
                    //   "narration_ref_no": "",
                    //   "document_type": "DF",
                    //   "debit_amount": element.transporter_amount,
                    //   "credit_amount": '',
                    //   "voucher_date": getFormData.deal_date,
                    //   "party_name": "",
                    //   "user_name": userName,
                    //   "user_id": userId 
                    // };
                    // accountsLedgerArray.push(obj);
                    // Add Investor Name
                    var investorObj = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": _this.investorName,
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": '',
                        "credit_amount": investorCr,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(investorObj);
                    // Add indiana Trucking
                    var indianaTruckingObj = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": "Indiana Trucking Commission",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": '',
                        "credit_amount": indianaTruckingCr,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(indianaTruckingObj);
                    // Add indiana Trucking
                    var agencyObj = {
                        "agency_name": agencyName,
                        "branch_id": agencyId,
                        "branch_name": agencyName,
                        "account_name": agencyName + " Commission",
                        "truck_no": truckNo,
                        "sr_no": srNo,
                        "deal_id": dealId,
                        "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                        "narration_ref_no": "",
                        "document_type": "DF",
                        "debit_amount": '',
                        "credit_amount": agencyCr,
                        "voucher_date": getFormData.deal_date,
                        "party_name": "",
                        "user_name": userName,
                        "user_id": userId
                    };
                    accountsLedgerArray.push(agencyObj);
                }
            });
            // ********************************************
            console.log("accountsLedgerArray >>>>>", accountsLedgerArray);
            _this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe(function (res) {
                _this.requestLoad.addRewardsLedger(_this.mainRewardsLedger).subscribe(function (res) {
                    // this.mainRewardsLedger.push(obj);
                    _this.loader.hide();
                    _this.addForm.reset();
                    _this.toast.show({ 'message': 'Added successfully.' });
                    _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__manage_deal_final__["a" /* ManageDealFinalPage */]);
                }, function (err) {
                    _this.loader.hide();
                    _this.toast.error({ 'message': 'Something went wrong.' });
                    console.log(">>>>>Err", err);
                });
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }, function (err) {
            _this.loader.hide();
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
        // }
    };
    DealFinalPage.prototype.onDeal = function () {
        this.dealFlag = true;
        this.companyFlag = false;
        this.transportFlag = false;
        this.transporterRatesFlag = false;
        this.driverFlag = false;
    };
    DealFinalPage.prototype.onCompany = function () {
        this.dealFlag = false;
        this.companyFlag = true;
        this.transportFlag = false;
        this.transporterRatesFlag = false;
        this.driverFlag = false;
    };
    DealFinalPage.prototype.onTransport = function () {
        this.dealFlag = false;
        this.companyFlag = false;
        this.transportFlag = true;
        this.transporterRatesFlag = false;
        this.driverFlag = false;
    };
    DealFinalPage.prototype.onTruck = function () {
        this.dealFlag = false;
        this.companyFlag = false;
        this.transportFlag = false;
        this.transporterRatesFlag = true;
        this.driverFlag = false;
    };
    DealFinalPage.prototype.onDriver = function () {
        this.dealFlag = false;
        this.companyFlag = false;
        this.transportFlag = false;
        this.transporterRatesFlag = false;
        this.driverFlag = true;
        this.addForm.controls['user_name'].setValue(localStorage.getItem('user_name'));
        this.getCompanyId();
        this.getTransporterId();
    };
    DealFinalPage.prototype.getCompanyId = function () {
        var _this = this;
        if (this.addForm.value.company_name) {
            this.requestLoad.searchCompany(this.addForm.value.company_name).subscribe(function (res) {
                var data = res.json();
                _this.companyId = data[0]._id;
                console.log("companyId >>>>", _this.companyId);
            }, function (err) {
                console.log(">>>>error", err);
            });
        }
    };
    DealFinalPage.prototype.getTransporterId = function () {
        var _this = this;
        if (this.addForm.value.transporter_name) {
            this.trucks.searchTransporterName(this.addForm.value.transporter_name).subscribe(function (res) {
                var data = res.json();
                _this.transporterId = data[0]._id;
                console.log("transporterId >>>>", _this.transporterId);
            }, function (err) {
                console.log(">>>>error", err);
            });
        }
    };
    DealFinalPage.prototype.getDriverName = function () {
        var _this = this;
        console.log("Get driver ", this.addForm.value.driver_name);
        if (this.addForm.value.driver_name) {
            this.trucks.searchDriverByID(this.addForm.value.driver_name._id).subscribe(function (res) {
                var data = res.json();
                console.log("driver_name", data);
                var licence_expiry = data.result[0].expiry_date;
                console.log("licence", licence_expiry);
                _this.addForm.controls['licence_expiry'].setValue(licence_expiry);
            }, function (err) {
                console.log(">>>>error", err);
            });
        }
    };
    DealFinalPage.prototype.getAgencyListByName = function () {
        var _this = this;
        var getFormData = this.addForm.value;
        var agencyName = getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name;
        // console.log("in getAgencyListByName >>>>");
        this.admin.getAgencyListByName(agencyName).subscribe(function (res) {
            var data = res.json();
            var agencyData = data.results;
            if (agencyData[0]) {
                _this.investorName = agencyData[0].investor_name;
                _this.agencyPercentage = agencyData[0].agency_percentage;
                _this.indianaTruckingPercentage = agencyData[0].indiana_trucking_percentage;
                _this.investorPercentage = agencyData[0].investor_percentage;
            }
            console.log("Agency Data >>>>", agencyData[0]);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    DealFinalPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-deal-final',template:/*ion-inline-start:"D:\truck\src\pages\manage-deal-final\deal-final\deal-final.html"*/'<!--\n  Generated template for the DealFinalPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add Deal Final</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="addForm" novalidate>\n\n\n    <!-- ----------- Deal Final -------------- -->\n    <div *ngIf="dealFlag">\n      <div class="width-full">\n      <label class="fonts-size">Deal Final</label>\n      </div>\n      <div class="form-group">\n        <label class=" label">Deal Date</label>\n        <ion-item class="form-control">\n          <ion-datetime name="deal_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="deal_date"></ion-datetime>\n        </ion-item>\n        <!-- <input type="text" placeholder="" formControlName="deal_date" class="form-control"> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Agency Name</label>\n        <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="agencyName.bind(this)"\n          list-formatter="agency_name"\n          formControlName="agency_name" \n          (change)= "getAgencyListByName()"         \n        />\n        <!-- <input type="text" placeholder="" formControlName="agency_name" class="form-control"> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Type</label>\n        <select class="form-control drop-down" name="load_type" formControlName="load_type"  >\n          <option value="">Select Type</option>\n          <option *ngFor="let tp of types" [ngValue]="tp">{{tp}}</option>\n        </select>\n      </div>\n\n      \n\n      <br>\n      <div class="width-full">\n      <!-- <button ion-button class="pre-button" (click)="preCompany()" type="button" expand="block">Previous</button> -->\n      <button ion-button class="next-button" (click)="onCompany()" type="button" expand="block">Next</button>\n    </div></div>\n\n    <!-- ----------- Company Details -------------- -->\n    <div *ngIf="companyFlag">\n      <div class="width-full">\n      <label class="fonts-size">Company Details</label>\n      </div>\n      <div class="form-group">\n        <label class=" label">Ticket No</label>\n        <input type="text" placeholder="" (change)="getPostLoadById()" formControlName="company_ticket_no" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label mg-top-13">Salesman </label> \n        <input type="text" formControlName="company_salesman" class="form-control" />\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Company Name</label>\n        <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="companyName.bind(this)"\n          list-formatter="company_name"\n          formControlName="company_name"          \n        />\n\n        <!-- <input type="text" placeholder="" formControlName="company_name" class="form-control"> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">From</label>\n        <input type="text" placeholder="" formControlName="from" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Loading Place</label>\n        <input type="text" placeholder="" formControlName="loading_place" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">To</label>\n        <input type="text" placeholder="" formControlName="to" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Unloading Place</label>\n        <input type="text" placeholder="" formControlName="unloading_place" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Rates</label>\n        <input type="number" placeholder="" formControlName="rates_company" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Declared Advance</label>\n        <input type="number" placeholder="" formControlName="advance_company" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Weight</label>\n        <input type="number" placeholder="" formControlName="weight_company" class="form-control">\n      </div>\n\n      <br>\n      <br>\n      <!-- ----------------- Company Advance ----------------- -->\n\n      <div>\n        <div class="width-full">\n          <button ion-button (click)="companyAddInArray()" type="button" class="add-al">Add</button>\n        </div>\n        <div class="btm-margin width-full">\n          <b>Company Advance Amount</b>\n        </div>\n        <br>\n\n        <div class="form-group">\n          <label class=" label">Date</label>\n          <ion-item class="form-control">\n            <ion-datetime name="company_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="company_date"></ion-datetime>\n          </ion-item>\n        </div>\n\n        <div class="form-group">\n          <label class=" label">Payment Type</label>\n          <select class="form-control drop-down" name="company_payment_type" formControlName="company_payment_type" >\n            <option value="">Select Payment Type</option>\n            <option *ngFor="let mpt of mainPaymentTypes" [ngValue]="mpt">{{mpt}}</option>\n          </select>\n        </div>\n<!-- \n        <div class="form-group">\n          <label class=" label">Payment Mode </label>\n          <select class="form-control drop-down" name="company_payment_mode" formControlName="company_payment_mode" >\n            <option value="">Select Payment Mode </option>\n            <option *ngFor="let mpm of mainPaymentMode" [ngValue]="mpm">{{mpm}}</option>\n          </select>\n        </div> -->\n\n        <div class="form-group">\n          <label class=" label">Account Name</label>\n          <select class="form-control drop-down" name="company_account_name" formControlName="company_account_name" >\n            <option value="">Select Account Name</option>\n            <option *ngFor="let mal of mainAccoutsList" [ngValue]="mal.account_name">{{mal.account_name}}</option>\n          </select>\n        </div>\n\n        <div class="form-group">\n          <label class=" label">Amount</label> \n          <input name="company_amount" type="number" formControlName="company_amount" class="form-control" /> \n        </div>\n\n        <div class="form-group">\n          <label class=" label">Remarks</label> \n          <input name="company_remarks" type="text" formControlName="company_remarks" class="form-control" /> \n        </div>\n        <hr>\n        <div class="width-full">\n          <button ion-button (click)="companyAddInArray()" type="button" class="add-al">Add</button><br><br>\n        </div>\n          <hr>\n\n        <ion-card *ngFor="let mca of mainCompanyAdvance; let i = index">\n          <ion-card-content padding>\n            <!-- companyRemoveInArray -->\n            \n            <p>\n              <span>Date: {{ mca.date_format }}</span>\n              <span class="add-al">Amount: {{ mca.company_amount }}</span>\n            </p>\n            <!-- <p>\n              <span>Payment Mode: {{ mca.company_payment_mode }}</span>\n              <span class="add-al">Remarks: {{ mca.company_remarks }}</span>\n            </p> -->\n\n            <p>\n              <span>Payment Type: {{ mca.company_payment_type }}</span>\n              <span class="add-al"><button class="btn-size" (click)="companyRemoveInArray(i)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button></span>\n            </p>\n\n            <p>\n              <span>Account Name: {{ mca.company_account_name }}</span>\n            </p>\n\n          </ion-card-content>\n        </ion-card>\n      </div>\n\n      <!-- ---------------------------------- -->\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="onDeal()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="onTransport()" type="button" expand="block">Next</button>\n    </div>\n    </div>\n\n    <!-- ----------- Transporter Details -------------- -->\n    <div *ngIf="transportFlag">\n      <div class="width-full">\n      <label class="fonts-size">Transporter Details</label>\n      </div>\n      <div class="form-group">\n        <label class=" label">Ticket No</label>\n        <input type="text" placeholder="" (change)="getRequestLoadById()" formControlName="transporter_ticket_no" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label mg-top-13">Salesman </label> \n        <input type="text" formControlName="transporter_salesman" class="form-control" />\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Truck No</label>\n        <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="truckNo.bind(this)"\n          list-formatter="truck_no"\n          formControlName="truck_no"          \n        />\n        <!-- <input type="text" placeholder="" formControlName="truck_no" class="form-control"> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Transporter Name</label>\n        <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="transporterName.bind(this)"\n          list-formatter="transport_name"\n          formControlName="transporter_name"          \n        />\n        <!-- <input type="text" placeholder="" formControlName="transporter_name" class="form-control"> -->\n      </div>\n  \n      <br>\n      <div class="width-full btm-margin">\n      <b>Driver Verification </b>\n      </div>\n      <div class="form-group">\n        <label class=" label">Driver Name <span style="color:red">*</span></label>\n        <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="DriverName.bind(this)"\n          list-formatter="driver_name"\n          formControlName="driver_name" \n          (change)="getDriverName()"         \n        />\n        \n        <!-- <input type="text" placeholder="" formControlName="driver_name" class="form-control"> -->\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.driver_name.invalid && (addForm.controls.driver_name.dirty || addForm.controls.driver_name.touched))">\n        <div *ngIf="addForm.controls[\'driver_name\'].hasError(\'required\')">\n          <label>Driver is required.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Licence Expiry</label>\n        <ion-item class="form-control">\n          <ion-datetime name="licence_expiry" display-format="MM/YYYY" picker-format="YYYY-MM-DD" min="2016" max="2070-10-31" formControlName="licence_expiry"></ion-datetime>\n        </ion-item>\n        <!-- <input type="text" placeholder="" formControlName="licence_expiry" class="form-control"> -->\n      </div>\n     <br>\n<!-- \n      <br>\n      <button ion-button class="pre-button" (click)="onCompany()" type="button" expand="block">Previous</button>\n\n      <button ion-button class="next-button" (click)="onTruck()" type="button" expand="block">Next</button>\n    </div> -->\n\n    <!-- ----------- Transporter Rates -------------- -->\n    <!-- <div *ngIf="transporterRatesFlag"> -->\n      <!-- <label class="fonts-size">Truck Verification  </label> -->\n      <div class="width-full btm-margin">\n      <label class="fonts-size">Transporter Rates</label>\n      </div>\n      <!-- <div class="form-group">\n        <label class=" label">PUC</label>\n        <input type="text" placeholder="" formControlName="puc" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Insurance</label>\n        <input type="text" placeholder="" formControlName="insurance" class="form-control">\n      </div> -->\n\n      <div class="form-group">\n        <label class=" label">Rates</label>\n        <input type="number" placeholder="" formControlName="truck_rates" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Truck Capacity</label>\n        <input type="number" placeholder="" formControlName="truck_weight" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Actual Weight</label>\n        <input type="number" placeholder="" formControlName="actual_weight" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Rate Calculation</label>\n        <select class="form-control drop-down" name="rate_calculation" (change)="addCalculation()" formControlName="rate_calculation"  >\n          <option value="">Select Calculation</option>\n          <option *ngFor="let cls of calculations" [ngValue]="cls">{{cls}}</option>\n        </select>\n        <!-- <input type="text" placeholder="" formControlName="rate_calculation" class="form-control"> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Freight</label>\n        <input type="number" placeholder="" formControlName="freight" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Declared Advance</label>\n        <input type="number" placeholder="" formControlName="truck_advance" class="form-control">\n      </div>\n\n      <br>\n      <br>\n      <!-- ----------------- Transporter Advance ----------------- -->\n\n      <div>\n        <div class="width-full">\n          <button ion-button (click)="transporterAddInArray()" type="button" class="add-al">Add</button>\n        </div>\n        <div class="width-full btm-margin">\n          <b>Transporter Advance Amount</b>\n        </div>\n        <br>\n        <hr>\n\n        <div class="form-group">\n          <label class=" label">Date</label>\n          <ion-item class="form-control">\n            <ion-datetime name="transporter_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="transporter_date"></ion-datetime>\n          </ion-item>\n        </div>\n\n        <div class="form-group">\n          <label class=" label">Payment Type</label>\n          <select class="form-control drop-down" name="transporter_payment_type" formControlName="transporter_payment_type" >\n            <option value="">Select Payment Type</option>\n            <option *ngFor="let mpt of mainPaymentTypes" [ngValue]="mpt">{{mpt}}</option>\n          </select>\n        </div>\n\n        <!-- <div class="form-group">\n          <label class=" label">Payment Mode </label>\n          <select class="form-control drop-down" name="transporter_payment_mode" formControlName="transporter_payment_mode" >\n            <option value="">Select Payment Mode </option>\n            <option *ngFor="let mpm of mainPaymentMode" [ngValue]="mpm">{{mpm}}</option>\n          </select>\n        </div> -->\n\n        <div class="form-group">\n          <label class=" label">Account Name</label>\n          <select class="form-control drop-down" name="transporter_account_name" formControlName="transporter_account_name" >\n            <option value="">Select Account Name</option>\n            <option *ngFor="let mal of mainAccoutsList" [ngValue]="mal.account_name">{{mal.account_name}}</option>\n          </select>\n        </div>\n\n        <div class="form-group">\n          <label class=" label">Amount</label> \n          <input name="transporter_amount" type="number" formControlName="transporter_amount" class="form-control" /> \n        </div>\n\n        <div class="form-group">\n          <label class=" label">Remarks</label> \n          <input name="transporter_remarks" type="text" formControlName="transporter_remarks" class="form-control" /> \n        </div>\n        <hr>\n        <div class="width-full">\n          <button ion-button (click)="transporterAddInArray()" type="button" class="add-al">Add</button><br><br>\n        </div>\n          <hr>\n\n\n        <ion-card *ngFor="let mta of mainTransporterAdvance; let i = index">\n          <ion-card-content padding>\n              <!-- companyRemoveInArray -->\n            \n            <p>\n              <span>Date: {{ mta.date_format }}</span>\n              <span class="add-al">Amount: {{ mta.transporter_amount }}</span>\n            </p>\n            <!-- <p>\n              <span>Payment Mode: {{ mta.transporter_payment_mode }}</span>\n              <span class="add-al">Remarks: {{ mta.transporter_remarks }}</span>\n            </p> -->\n\n            <p>\n              <span>Payment Type: {{ mta.transporter_payment_type }}</span>\n              <span class="add-al"><button class="btn-size" (click)="transporterRemoveInArray(i)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button></span>\n            </p>\n\n            <p>\n              <span>Account Name: {{ mta.transporter_account_name }}</span>\n            </p>\n  \n              \n          </ion-card-content>\n        </ion-card>\n      </div>\n\n      <!-- ---------------------------------- -->\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="onCompany()" type="button" expand="block">Previous</button>\n      <!-- <button ion-button class="pre-button" (click)="onTransport()" type="button" expand="block">Previous</button> -->\n      <button ion-button class="next-button" (click)="onDriver()" type="button" expand="block">Next</button>\n    </div>\n    </div>\n\n    <!-- ----------- Deal Status-------------- -->\n    <div *ngIf="driverFlag">\n      <div class="width-full">\n      <label class="fonts-size">Deal Status</label>\n      </div>\n      <div class="form-group">\n        <label class=" label">Status</label>\n        <select class="form-control drop-down" name="status" formControlName="status" >\n          <option value="">Select Status</option>\n          <option *ngFor="let st of statuses" [ngValue]="st">{{st}}</option>\n        </select>\n        <!-- <input type="text" placeholder="" formControlName="status" class="form-control"> -->\n      </div>\n\n\n      <div class="form-group">\n        <label class=" label">Salesman (Deal Done By) <span style="color:red">*</span></label>\n        <select class="form-control drop-down" name="deal_final_salesman" formControlName="deal_final_salesman" (change)="onselectDealFinalSalesman()"  >\n          <option value="">Select Salesman</option>\n          <option *ngFor="let sml of salesmanList" [ngValue]="sml">{{sml}}</option>\n        </select>\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.deal_final_salesman.invalid && (addForm.controls.deal_final_salesman.dirty || addForm.controls.deal_final_salesman.touched))">\n        <div *ngIf="addForm.controls[\'deal_final_salesman\'].hasError(\'required\')">\n          <label>Salesman is required.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">User Name</label>\n        <input type="text" placeholder="" formControlName="user_name" class="form-control">\n      </div>\n\n      <br>\n      <div class="width-full">\n      <!-- <button ion-button class="pre-button" (click)="onTruck()" type="button" expand="block">Previous</button> -->\n      <button ion-button class="pre-button" (click)="onTransport()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="save()" type="submit" expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Save Deal</button>\n      </div>\n      <!-- <div padding>\n        <button ion-button block (click)="save()" size="large" type="submit"  expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Save Deal</button>\n      </div> -->\n    </div>\n        \n  \n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-deal-final\deal-final\deal-final.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_11__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_6__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_7__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_8__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_9__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], DealFinalPage);
    return DealFinalPage;
}());

//# sourceMappingURL=deal-final.js.map

/***/ }),

/***/ 196:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageUserPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__edit_user_edit_user__ = __webpack_require__(458);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};






/**
 * Generated class for the ManageUserPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageUserPage = /** @class */ (function () {
    function ManageUserPage(navCtrl, navParams, admin, actionSheetController, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.admin = admin;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.usersList = [];
        this.getUsersList();
    }
    ManageUserPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManageUserPage');
    };
    ManageUserPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */]);
    };
    ManageUserPage.prototype.getUsersList = function () {
        var _this = this;
        this.loader.show();
        this.admin.getUsersList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.usersList = data.results;
            console.log("Data  >>>", _this.usersList);
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageUserPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add User',
                //     icon: 'add',
                //     handler: () => {
                //       // AdminPrivileges
                this.navCtrl.push('AddUserPage');
                return [2 /*return*/];
            });
        });
    };
    ManageUserPage.prototype.presentActionSheet = function (userData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit User',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__edit_user_edit_user__["a" /* EditUserPage */], { data: userData });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deleteApi(userData);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageUserPage.prototype.deleteApi = function (id) {
        var _this = this;
        var user_id = id._id;
        console.log("id  >>>", user_id);
        this.admin.deleteUser(user_id).subscribe(function (res) {
            _this.navCtrl.push('ManageUserPage');
        }, function (err) {
            console.log("error");
        });
    };
    ManageUserPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-user',template:/*ion-inline-start:"D:\truck\src\pages\manage-user\manage-user.html"*/'<!--\n  Generated template for the ManageUserPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Users</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n     \n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n    <ion-card *ngFor="let list of usersList; let i = index">\n      <ion-icon name="more" class="more fright" (click)="presentActionSheet(list, $event)"></ion-icon>\n      <ion-card-content>\n        <p class="card-header">\n          <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ i + 1 }} {{ list.user_name  }}</span><br>\n        </p>\n  \n        <div padding>\n  \n  \n            <ion-row>\n              <ion-col col-12>\n                  <span><b>User Role: </b> {{ list.user_role  }}</span>\n              </ion-col>\n\n              <ion-col col-3>\n                  <span><b>Assign for: </b></span>\n              </ion-col>\n              <ion-col *ngFor="let a of list.assigns;" col-3>\n                  <span>{{ a.assign}}</span>\n              </ion-col>\n\n            </ion-row>\n        </div>\n        \n      </ion-card-content>\n    </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-user\manage-user.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */]])
    ], ManageUserPage);
    return ManageUserPage;
}());

//# sourceMappingURL=manage-user.js.map

/***/ }),

/***/ 197:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageEmployeesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__edit_employee_edit_employee__ = __webpack_require__(459);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};






/**
 * Generated class for the ManageEmployeesPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageEmployeesPage = /** @class */ (function () {
    function ManageEmployeesPage(navCtrl, navParams, admin, actionSheetController, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.admin = admin;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.employeesList = [];
        this.getEmployeesList();
    }
    ManageEmployeesPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManageEmployeesPage');
    };
    ManageEmployeesPage.prototype.getEmployeesList = function () {
        var _this = this;
        this.loader.show();
        this.admin.getEmployeesList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.employeesList = data.results;
            console.log("Data  >>>", _this.employeesList);
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManageEmployeesPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */]);
    };
    ManageEmployeesPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add Employee',
                //     icon: 'add',
                //     handler: () => {
                //       // AdminPrivileges
                this.navCtrl.push("AddEmployeePage");
                return [2 /*return*/];
            });
        });
    };
    ManageEmployeesPage.prototype.presentActionSheet = function (employeeData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit Employee',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__edit_employee_edit_employee__["a" /* EditEmployeePage */], { data: employeeData });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deleteApi(employeeData);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageEmployeesPage.prototype.deleteApi = function (id) {
        var _this = this;
        var employee_id = id._id;
        console.log("id  >>>", employee_id);
        this.admin.deleteEmployee(employee_id).subscribe(function (res) {
            _this.navCtrl.push("ManageEmployeesPage");
        }, function (err) {
            console.log("error");
        });
    };
    ManageEmployeesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-employees',template:/*ion-inline-start:"D:\truck\src\pages\manage-employees\manage-employees.html"*/'<!--\n  Generated template for the ManageEmployeesPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Employees</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n    <ion-card *ngFor="let employee of employeesList; let i = index">\n        <ion-icon name="more" class="more fright" (click)="presentActionSheet(employee, $event)"></ion-icon>\n        <ion-card-content>\n          <p class="card-header">\n            <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ i + 1 }} {{ employee.first_name +  " " + employee.last_name }}</span><br>\n          </p>\n    \n          <div padding>\n              <ion-row>\n                <ion-col col-12>\n                  <span><b>Mobile No:</b> {{ employee.mobile_no  }}</span>\n                </ion-col>\n  \n                <ion-col col-12>\n                  <span><b>Email:</b> {{ employee.email  }}</span>\n                </ion-col>\n  \n                <ion-col col-12>\n                  <span><b>Category:</b> {{ employee.category  }}</span>\n                </ion-col>\n\n                <!-- <ion-col col-12>\n                  <span><b>Reports To:</b> {{ employee.reports_to  }}</span>\n                </ion-col> -->\n              </ion-row>\n          </div>\n          \n        </ion-card-content>\n      </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-employees\manage-employees.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_2__providers_loader__["a" /* LoaderProvider */]])
    ], ManageEmployeesPage);
    return ManageEmployeesPage;
}());

//# sourceMappingURL=manage-employees.js.map

/***/ }),

/***/ 200:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAdvanceAmountPageModule", function() { return AddAdvanceAmountPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_advance_amount__ = __webpack_require__(486);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var AddAdvanceAmountPageModule = /** @class */ (function () {
    function AddAdvanceAmountPageModule() {
    }
    AddAdvanceAmountPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_advance_amount__["a" /* AddAdvanceAmountPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_advance_amount__["a" /* AddAdvanceAmountPage */]),
            ],
        })
    ], AddAdvanceAmountPageModule);
    return AddAdvanceAmountPageModule;
}());

//# sourceMappingURL=add-advance-amount.module.js.map

/***/ }),

/***/ 201:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddDealFinalNewPageModule", function() { return AddDealFinalNewPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_deal_final_new__ = __webpack_require__(189);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var AddDealFinalNewPageModule = /** @class */ (function () {
    function AddDealFinalNewPageModule() {
    }
    AddDealFinalNewPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_deal_final_new__["a" /* AddDealFinalNewPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_deal_final_new__["a" /* AddDealFinalNewPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AddDealFinalNewPageModule);
    return AddDealFinalNewPageModule;
}());

//# sourceMappingURL=add-deal-final-new.module.js.map

/***/ }),

/***/ 202:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DealFinalPageModule", function() { return DealFinalPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__deal_final__ = __webpack_require__(195);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var DealFinalPageModule = /** @class */ (function () {
    function DealFinalPageModule() {
    }
    DealFinalPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__deal_final__["a" /* DealFinalPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__deal_final__["a" /* DealFinalPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], DealFinalPageModule);
    return DealFinalPageModule;
}());

//# sourceMappingURL=deal-final.module.js.map

/***/ }),

/***/ 203:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditDealFinalPageModule", function() { return EditDealFinalPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_deal_final__ = __webpack_require__(457);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var EditDealFinalPageModule = /** @class */ (function () {
    function EditDealFinalPageModule() {
    }
    EditDealFinalPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_deal_final__["a" /* EditDealFinalPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_deal_final__["a" /* EditDealFinalPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], EditDealFinalPageModule);
    return EditDealFinalPageModule;
}());

//# sourceMappingURL=edit-deal-final.module.js.map

/***/ }),

/***/ 23:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EventsService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__ = __webpack_require__(751);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var EventsService = /** @class */ (function () {
    function EventsService() {
        var _this = this;
        this.listeners = {};
        this.eventsSubject = new __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__["Subject"]();
        this.events = __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__["Observable"].from(this.eventsSubject);
        this.events.subscribe(function (_a) {
            var name = _a.name, args = _a.args;
            if (_this.listeners[name]) {
                for (var _i = 0, _b = _this.listeners[name]; _i < _b.length; _i++) {
                    var listener = _b[_i];
                    listener.apply(void 0, args);
                }
            }
        });
    }
    EventsService.prototype.on = function (name, listener) {
        if (!this.listeners[name]) {
            this.listeners[name] = [];
        }
        this.listeners[name].push(listener);
    };
    EventsService.prototype.broadcast = function (name) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        this.eventsSubject.next({
            name: name,
            args: args
        });
    };
    EventsService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], EventsService);
    return EventsService;
}());

//# sourceMappingURL=event.service.js.map

/***/ }),

/***/ 258:
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = 258;

/***/ }),

/***/ 301:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"../pages/accounts-transactions/accounts-transactions.module": [
		302
	],
	"../pages/accounts-transactions/edit-accounts-transactions/edit-accounts-transactions.module": [
		492
	],
	"../pages/admin-privileges/add-agencies/add-agencies.module": [
		493
	],
	"../pages/admin-privileges/add-company/add-company.module": [
		496
	],
	"../pages/admin-privileges/add-driver/add-driver.module": [
		497
	],
	"../pages/admin-privileges/add-employee/add-employee.module": [
		498
	],
	"../pages/admin-privileges/add-transporter/add-transporter.module": [
		499
	],
	"../pages/admin-privileges/add-user/add-user.module": [
		501
	],
	"../pages/admin-privileges/admin-privileges-add-truck/admin-privileges-add-truck.module": [
		502
	],
	"../pages/admin-privileges/admin-privileges.module": [
		503
	],
	"../pages/admin-privileges/manage-account-categories/add-account-category/add-account-category.module": [
		505
	],
	"../pages/admin-privileges/manage-account-categories/edit-account-category/edit-account-category.module": [
		506
	],
	"../pages/admin-privileges/manage-account-categories/manage-account-categories.module": [
		507
	],
	"../pages/admin-privileges/manage-account-types/add-account-type/add-account-type.module": [
		508
	],
	"../pages/admin-privileges/manage-account-types/edit-account-type/edit-account-type.module": [
		509
	],
	"../pages/admin-privileges/manage-account-types/manage-account-types.module": [
		510
	],
	"../pages/admin-privileges/manage-cancel-reasons/add-cancel-reasons/add-cancel-reasons.module": [
		511
	],
	"../pages/admin-privileges/manage-cancel-reasons/edit-cancel-reasons/edit-cancel-reasons.module": [
		512
	],
	"../pages/admin-privileges/manage-cancel-reasons/manage-cancel-reasons.module": [
		513
	],
	"../pages/admin-privileges/manage-payment-mode/add-payment-mode/add-payment-mode.module": [
		514
	],
	"../pages/admin-privileges/manage-payment-mode/edit-payment-mode/edit-payment-mode.module": [
		515
	],
	"../pages/admin-privileges/manage-payment-mode/manage-payment-mode.module": [
		516
	],
	"../pages/admin-privileges/manage-payment-type/add-payment-type/add-payment-type.module": [
		517
	],
	"../pages/admin-privileges/manage-payment-type/edit-payment-type/edit-payment-type.module": [
		518
	],
	"../pages/admin-privileges/manage-payment-type/manage-payment-type.module": [
		519
	],
	"../pages/admin-privileges/manage-rewards-redemption/add-rewards-redemption/manage-rewards.module": [
		520
	],
	"../pages/admin-privileges/manage-rewards-redemption/edit-rewards-redemption/edit-rewards-redemption.module": [
		521
	],
	"../pages/admin-privileges/manage-rewards-redemption/manage-rewards-redemption.module": [
		522
	],
	"../pages/admin-privileges/request-load/request-load.module": [
		504
	],
	"../pages/attach-documents/add-documents-master/add-documents-master.module": [
		523
	],
	"../pages/attach-documents/attach-documents.module": [
		524
	],
	"../pages/attach-documents/edit-attach-documents/edit-attach-documents.module": [
		525
	],
	"../pages/auth-login/auth-login.module": [
		526
	],
	"../pages/call-booking-request-load/call-booking-request-load.module": [
		528
	],
	"../pages/deal-final-dashboard/deal-final-dashboard.module": [
		529
	],
	"../pages/edit-agencies-details/edit-agencies-details.module": [
		1033,
		6
	],
	"../pages/edit-company-details/edit-company-details.module": [
		1034,
		5
	],
	"../pages/edit-company-requirements/edit-company-requirements.module": [
		1035,
		4
	],
	"../pages/edit-driver-details/edit-driver-details.module": [
		1036,
		3
	],
	"../pages/edit-employee/edit-employee.module": [
		530
	],
	"../pages/edit-request-load/edit-request-load.module": [
		531
	],
	"../pages/edit-transport-details/edit-transport-details.module": [
		1037,
		2
	],
	"../pages/edit-truck-details/edit-truck-details.module": [
		1038,
		1
	],
	"../pages/edit-user/edit-user.module": [
		532
	],
	"../pages/loads-availability/loads-availability.module": [
		533
	],
	"../pages/manage-accounts-ledger/manage-accounts-ledger.module": [
		534
	],
	"../pages/manage-accounts-master/add-account-master/add-account-master.module": [
		535
	],
	"../pages/manage-accounts-master/edit-account-master/edit-account-master.module": [
		536
	],
	"../pages/manage-accounts-master/manage-accounts-master.module": [
		537
	],
	"../pages/manage-advance-amount/add-advance-amount/add-advance-amount.module": [
		200
	],
	"../pages/manage-advance-amount/edit-advance-amount/edit-advance-amount.module": [
		538
	],
	"../pages/manage-advance-amount/manage-advance-amount.module": [
		539
	],
	"../pages/manage-agencies/manage-agencies.module": [
		540
	],
	"../pages/manage-company-list/manage-company-list.module": [
		541
	],
	"../pages/manage-deal-final-new/add-deal-final-new/add-deal-final-new.module": [
		201
	],
	"../pages/manage-deal-final-new/edit-deal-final-new/edit-deal-final-new.module": [
		542
	],
	"../pages/manage-deal-final-new/manage-deal-final-new.module": [
		543
	],
	"../pages/manage-deal-final/deal-final/deal-final.module": [
		202
	],
	"../pages/manage-deal-final/edit-deal-final/edit-deal-final.module": [
		203
	],
	"../pages/manage-deal-final/manage-deal-final.module": [
		544
	],
	"../pages/manage-driver/manage-driver.module": [
		545
	],
	"../pages/manage-employees/manage-employees.module": [
		546
	],
	"../pages/manage-pod/add-pod/add-pod.module": [
		547
	],
	"../pages/manage-pod/edit-pod/edit-pod.module": [
		548
	],
	"../pages/manage-pod/manage-pod.module": [
		549
	],
	"../pages/manage-post-load/add-post-load/add-post-load.module": [
		550
	],
	"../pages/manage-post-load/edit-post-load/edit-post-load.module": [
		551
	],
	"../pages/manage-post-load/manage-post-load.module": [
		552
	],
	"../pages/manage-request-load/manage-request-load.module": [
		553
	],
	"../pages/manage-transport/manage-transport.module": [
		554
	],
	"../pages/manage-truck-list/manage-truck-list.module": [
		555
	],
	"../pages/manage-user/manage-user.module": [
		556
	],
	"../pages/match-company-list/match-company-list.module": [
		557
	],
	"../pages/rewards-ledger/rewards-ledger.module": [
		558
	],
	"../pages/rewards-trial-balance/rewards-trial-balance.module": [
		559
	],
	"../pages/setting/setting.module": [
		1039,
		0
	],
	"../pages/traffic-operation/traffic-operation.module": [
		560
	],
	"../pages/traffic-operations/traffic-operations.module": [
		561
	],
	"../pages/traffic-quality-control/traffic-quality-control.module": [
		562
	],
	"../pages/traffic-quality-edit/traffic-quality-edit.module": [
		563
	],
	"../pages/trial-balance/trial-balance.module": [
		564
	],
	"../pages/trucks-availability/trucks-availability.module": [
		565
	]
};
function webpackAsyncContext(req) {
	var ids = map[req];
	if(!ids)
		return Promise.reject(new Error("Cannot find module '" + req + "'."));
	return Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {
		return __webpack_require__(ids[0]);
	});
};
webpackAsyncContext.keys = function webpackAsyncContextKeys() {
	return Object.keys(map);
};
webpackAsyncContext.id = 301;
module.exports = webpackAsyncContext;

/***/ }),

/***/ 302:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccountsTransactionsPageModule", function() { return AccountsTransactionsPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__accounts_transactions__ = __webpack_require__(170);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__edit_accounts_transactions_edit_accounts_transactions_module__ = __webpack_require__(492);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var AccountsTransactionsPageModule = /** @class */ (function () {
    function AccountsTransactionsPageModule() {
    }
    AccountsTransactionsPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__accounts_transactions__["a" /* AccountsTransactionsPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__accounts_transactions__["a" /* AccountsTransactionsPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"],
                __WEBPACK_IMPORTED_MODULE_4__edit_accounts_transactions_edit_accounts_transactions_module__["EditAccountsTransactionsPageModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AccountsTransactionsPageModule);
    return AccountsTransactionsPageModule;
}());

//# sourceMappingURL=accounts-transactions.module.js.map

/***/ }),

/***/ 31:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CommonHelper; });
var CommonHelper = /** @class */ (function () {
    function CommonHelper() {
    }
    CommonHelper.getGeocodeLocationParts = function (result) {
        var address_components = result.address_components;
        var components = {
            name: result.name,
            formatted_address: result.formatted_address,
            latitude: result.geometry.location.lat(),
            longitude: result.geometry.location.lng()
        };
        for (var i = 0; i < address_components.length; i++) {
            for (var j = 0; j < address_components[i].types.length; j++) {
                components[address_components[i].types[j]] = address_components[i].long_name;
            }
        }
        return components;
    };
    ;
    CommonHelper.getAddressParts = function (location) {
        var address = {
            name: '',
            address_type: 'home',
            raw_address: '',
            address_line1: '',
            address_line2: '',
            country: '',
            state: '',
            stateName: '',
            city: '',
            pincode: '',
            lat: null,
            lng: null,
            landmark: '',
            alt_contact: '',
        };
        address.address_line1 = location.name ? location.name : '';
        if (location.street_number) {
            if (address.address_line1) {
                address.address_line1 += ', ';
            }
            address.address_line1 = location.street_number;
        }
        if (location.route) {
            if (address.address_line1) {
                address.address_line1 += ', ';
            }
            address.address_line1 += location.route;
        }
        if (location.sublocality_level_2) {
            if (address.address_line1) {
                address.address_line1 += ', ';
            }
            address.address_line1 += location.sublocality_level_2;
        }
        if (location.sublocality_level_1 && location.locality) {
            if (address.address_line1) {
                address.address_line1 += ', ';
            }
            address.address_line1 += location.sublocality_level_1;
            address.landmark = location.sublocality_level_1;
        }
        address.city = location.locality ? location.locality : '';
        address.state = location.administrative_area_level_1 ? location.administrative_area_level_1 : '';
        address.stateName = location.stateName || location.administrative_area_level_1;
        address.country = location.country || '';
        address.pincode = location.postal_code || '';
        address.raw_address = location.formatted_address ? location.formatted_address : '';
        address.lat = location.latitude ? location.latitude : null;
        address.lng = location.longitude ? location.longitude : null;
        return address;
    };
    ;
    // public static getAddressObj() {
    //     return {
    //         name: '',
    //         address_type: 'home',
    //         raw_address: '',
    //         address_line1: '',
    //         address_line2: '',
    //         country: '',
    //         state: '',
    //         stateName: '',
    //         city: '',
    //         pincode: '',
    //         lat: null,
    //         lng: null,
    //         landmark: '',
    //         alt_contact: '',
    //     };
    // }
    CommonHelper.extract_components = function (place) {
        var components = {};
        place.address_components.forEach(function (k, v1) {
            place.address_components[v1].types.forEach(function (k2, v2) {
                components[place.address_components[v1].types[v2]] = place.address_components[v1].long_name;
            });
        });
        return components;
    };
    CommonHelper.get_sublocality = function (place) {
        var get_city;
        if (place.sublocality) {
            get_city = place.sublocality;
        }
        else if (place.sublocality_level_1) {
            get_city = place.sublocality_level_1;
        }
        else if (place.sublocality_level_2) {
            get_city = place.sublocality_level_2;
        }
        else if (place.sublocality_level_3) {
            get_city = place.sublocality_level_3;
        }
        else {
            get_city = place.locality;
        }
        return get_city;
    };
    return CommonHelper;
}());

//# sourceMappingURL=common.js.map

/***/ }),

/***/ 34:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Accounts; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__api__ = __webpack_require__(56);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var Accounts = /** @class */ (function () {
    function Accounts(api) {
        this.api = api;
    }
    Accounts.prototype.getAccountsLedgerAccountsName = function () {
        return this.api.get('accounts_ledger/list_accounts_name');
    };
    Accounts.prototype.getAccountsLedgerBranchName = function () {
        return this.api.get('accounts_ledger/list_branch_name');
    };
    Accounts.prototype.getFetchAccountsLedger = function (filters) {
        return this.api.get('accounts_ledger/fetch_accounts_ledger', filters);
    };
    Accounts.prototype.displayRewardLedger = function (filters) {
        return this.api.get('rewards_ledger/display', filters);
    };
    Accounts.prototype.displayTrialBalance = function (filters) {
        return this.api.get('accounts_master/trial_balance', filters);
    };
    Accounts.prototype.displayRewardsTrialBalance = function (filters) {
        return this.api.get('rewards_ledger/trial_balance', filters);
    };
    Accounts.prototype.getAccountsNameByAgencyAndTruck = function (filters) {
        return this.api.get('accounts_ledger/accounts_name_by_agency_truck', filters);
    };
    Accounts.prototype.getAccountsNameByAgencyInLedger = function (agency_name) {
        return this.api.get('accounts_ledger/accounts_name_by_agency_truck?agency_name=' + agency_name);
    };
    Accounts.prototype.getTruckNoByAgencyLedger = function (agency_name) {
        return this.api.get('accounts_ledger/truck_by_agency?agency_name=' + agency_name);
    };
    Accounts.prototype.searchAccountsNameByAgency = function (account_name, agency_name) {
        return this.api.get('accounts_ledger/search_accounts_name_by_agency?q=' + account_name + '&agency_name=' + agency_name);
    };
    Accounts.prototype.getMaxVoucherNo = function (agency_name, voucher_type) {
        return this.api.get('accounts_transactions/max_voucher_no?agency_name=' + agency_name + '&voucher_type=' + voucher_type);
    };
    Accounts.prototype.addVoucherNo = function (data) {
        return this.api.post('accounts_transactions/add_voucher_no', data);
    };
    Accounts.prototype.addAccountsTransactions = function (data) {
        return this.api.post('accounts_transactions/add', data);
    };
    Accounts.prototype.getAccountsTransactions = function () {
        return this.api.get('accounts_transactions/list');
    };
    Accounts.prototype.updateAccountsTransactions = function (id, data) {
        return this.api.put('accounts_transactions/update?id=' + id, data);
    };
    Accounts.prototype.deleteAccountsTransactions = function (id) {
        return this.api.delete('accounts_transactions/delete?id=' + id);
    };
    // -------------- POD -------------
    Accounts.prototype.getDealNosList = function (transporter_name, truck_no) {
        return this.api.get('pod/list_deal_no?transporter_name=' + transporter_name + '&truck_no=' + truck_no);
    };
    Accounts.prototype.getNewDealNosList = function (transporter_name, truck_no) {
        return this.api.get('pod/list_new_deal_no?transporter_name=' + transporter_name + '&truck_no=' + truck_no);
    };
    Accounts.prototype.getNewDealNosListByTruckNo = function (truck_no) {
        return this.api.get('pod/list_new_deal_no?truck_no=' + truck_no);
    };
    Accounts.prototype.getPostLoadByTicketNo = function (ticket_no) {
        return this.api.get('pod/post_load_by_ticket_no?ticket_no=' + ticket_no);
    };
    Accounts.prototype.addPOD = function (data) {
        return this.api.post('pod/add', data);
    };
    Accounts.prototype.getPODList = function () {
        return this.api.get('pod/list');
    };
    Accounts.prototype.updatePOD = function (id, data) {
        return this.api.put('pod/update?id=' + id, data);
    };
    Accounts.prototype.deletePOD = function (id) {
        return this.api.delete('pod/delete?id=' + id);
    };
    Accounts.prototype.getListByTruckNo = function (truck_no) {
        return this.api.get('pod/list_by_truck_no?truck_no=' + truck_no);
    };
    // ------------- Advance Amount ---------
    Accounts.prototype.addAdvanceAmount = function (data) {
        return this.api.post('advance_amount/add', data);
    };
    Accounts.prototype.getAdvanceAmountList = function () {
        return this.api.get('advance_amount/list');
    };
    Accounts.prototype.updateAdvanceAmount = function (id, data) {
        return this.api.put('advance_amount/update?id=' + id, data);
    };
    Accounts.prototype.deleteAdvanceAmount = function (id) {
        return this.api.delete('advance_amount/delete?id=' + id);
    };
    Accounts.prototype.deleteAdvanceAmountAccountsLedger = function (sr_no, document_type, party_name) {
        return this.api.delete('advance_amount/delete_accounts_ledger?sr_no=' + sr_no + "&document_type=" + document_type + "&party_name=" + party_name);
    };
    Accounts.prototype.searchAccountNamebyDeal = function (account_name, sr_no) {
        return this.api.get('advance_amount/search_account_name?account_name=' + account_name + "&sr_no=" + sr_no);
    };
    Accounts.prototype.searchDealByDealNo = function (deal_no) {
        return this.api.get('advance_amount/select_deal?deal_no=' + deal_no);
    };
    Accounts = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__api__["a" /* Api */]])
    ], Accounts);
    return Accounts;
}());

//# sourceMappingURL=accounts.js.map

/***/ }),

/***/ 38:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ComponentsModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__google_maps_google_maps__ = __webpack_require__(981);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__OnlyNumber__ = __webpack_require__(982);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__traffic_ops_deals_tab_traffic_ops_deals_tab__ = __webpack_require__(983);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_common__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__traffic_ops_trucks_verification_traffic_ops_trucks_verification__ = __webpack_require__(984);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__traffic_ops_bank_detail_traffic_ops_bank_detail__ = __webpack_require__(985);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__traffic_ops_receivable_advance_traffic_ops_receivable_advance__ = __webpack_require__(986);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__traffic_ops_pending_pod_t_traffic_ops_pending_pod_t__ = __webpack_require__(987);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__traffic_ops_pending_pod_c_traffic_ops_pending_pod_c__ = __webpack_require__(988);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__traffic_ops_receivable_balance_traffic_ops_receivable_balance__ = __webpack_require__(989);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__traffic_ops_commission_traffic_ops_commission__ = __webpack_require__(990);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__traffic_qc_deals_tab_traffic_qc_deals_tab__ = __webpack_require__(991);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__traffic_qc_payable_advance_traffic_qc_payable_advance__ = __webpack_require__(992);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__traffic_qc_receivable_advance_traffic_qc_receivable_advance__ = __webpack_require__(993);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__traffic_qc_receivable_balance_traffic_qc_receivable_balance__ = __webpack_require__(994);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__traffic_qc_payable_balance_traffic_qc_payable_balance__ = __webpack_require__(995);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__traffic_qc_clearing_cheques_traffic_qc_clearing_cheques__ = __webpack_require__(996);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__angular_forms__ = __webpack_require__(7);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




















var ComponentsModule = /** @class */ (function () {
    function ComponentsModule() {
    }
    ComponentsModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_1__google_maps_google_maps__["a" /* GoogleMapsComponent */],
                __WEBPACK_IMPORTED_MODULE_3__OnlyNumber__["a" /* OnlyNumber */],
                __WEBPACK_IMPORTED_MODULE_4__traffic_ops_deals_tab_traffic_ops_deals_tab__["a" /* TrafficOpsDealsTabComponent */],
                __WEBPACK_IMPORTED_MODULE_6__traffic_ops_trucks_verification_traffic_ops_trucks_verification__["a" /* TrafficOpsTrucksVerificationComponent */],
                __WEBPACK_IMPORTED_MODULE_7__traffic_ops_bank_detail_traffic_ops_bank_detail__["a" /* TrafficOpsBankDetailComponent */],
                __WEBPACK_IMPORTED_MODULE_8__traffic_ops_receivable_advance_traffic_ops_receivable_advance__["a" /* TrafficOpsReceivableAdvanceComponent */],
                __WEBPACK_IMPORTED_MODULE_9__traffic_ops_pending_pod_t_traffic_ops_pending_pod_t__["a" /* TrafficOpsPendingPodTComponent */],
                __WEBPACK_IMPORTED_MODULE_10__traffic_ops_pending_pod_c_traffic_ops_pending_pod_c__["a" /* TrafficOpsPendingPodCComponent */],
                __WEBPACK_IMPORTED_MODULE_11__traffic_ops_receivable_balance_traffic_ops_receivable_balance__["a" /* TrafficOpsReceivableBalanceComponent */],
                __WEBPACK_IMPORTED_MODULE_12__traffic_ops_commission_traffic_ops_commission__["a" /* TrafficOpsCommissionComponent */],
                __WEBPACK_IMPORTED_MODULE_13__traffic_qc_deals_tab_traffic_qc_deals_tab__["a" /* TrafficQcDealsTabComponent */],
                __WEBPACK_IMPORTED_MODULE_14__traffic_qc_payable_advance_traffic_qc_payable_advance__["a" /* TrafficQcPayableAdvanceComponent */],
                __WEBPACK_IMPORTED_MODULE_15__traffic_qc_receivable_advance_traffic_qc_receivable_advance__["a" /* TrafficQcReceivableAdvanceComponent */],
                __WEBPACK_IMPORTED_MODULE_16__traffic_qc_receivable_balance_traffic_qc_receivable_balance__["a" /* TrafficQcReceivableBalanceComponent */],
                __WEBPACK_IMPORTED_MODULE_17__traffic_qc_payable_balance_traffic_qc_payable_balance__["a" /* TrafficQcPayableBalanceComponent */],
                __WEBPACK_IMPORTED_MODULE_18__traffic_qc_clearing_cheques_traffic_qc_clearing_cheques__["a" /* TrafficQcClearingChequesComponent */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_5__angular_common__["CommonModule"],
                __WEBPACK_IMPORTED_MODULE_2__agm_core__["a" /* AgmCoreModule */].forRoot({
                    apiKey: 'AIzaSyCUZpL9YeIKIsRWTU8QDo_Z97KQ9hJXIX4'
                }),
                __WEBPACK_IMPORTED_MODULE_19__angular_forms__["FormsModule"],
                __WEBPACK_IMPORTED_MODULE_19__angular_forms__["ReactiveFormsModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_1__google_maps_google_maps__["a" /* GoogleMapsComponent */],
                __WEBPACK_IMPORTED_MODULE_3__OnlyNumber__["a" /* OnlyNumber */],
                __WEBPACK_IMPORTED_MODULE_4__traffic_ops_deals_tab_traffic_ops_deals_tab__["a" /* TrafficOpsDealsTabComponent */],
                __WEBPACK_IMPORTED_MODULE_6__traffic_ops_trucks_verification_traffic_ops_trucks_verification__["a" /* TrafficOpsTrucksVerificationComponent */],
                __WEBPACK_IMPORTED_MODULE_7__traffic_ops_bank_detail_traffic_ops_bank_detail__["a" /* TrafficOpsBankDetailComponent */],
                __WEBPACK_IMPORTED_MODULE_8__traffic_ops_receivable_advance_traffic_ops_receivable_advance__["a" /* TrafficOpsReceivableAdvanceComponent */],
                __WEBPACK_IMPORTED_MODULE_9__traffic_ops_pending_pod_t_traffic_ops_pending_pod_t__["a" /* TrafficOpsPendingPodTComponent */],
                __WEBPACK_IMPORTED_MODULE_10__traffic_ops_pending_pod_c_traffic_ops_pending_pod_c__["a" /* TrafficOpsPendingPodCComponent */],
                __WEBPACK_IMPORTED_MODULE_11__traffic_ops_receivable_balance_traffic_ops_receivable_balance__["a" /* TrafficOpsReceivableBalanceComponent */],
                __WEBPACK_IMPORTED_MODULE_12__traffic_ops_commission_traffic_ops_commission__["a" /* TrafficOpsCommissionComponent */],
                __WEBPACK_IMPORTED_MODULE_13__traffic_qc_deals_tab_traffic_qc_deals_tab__["a" /* TrafficQcDealsTabComponent */],
                __WEBPACK_IMPORTED_MODULE_14__traffic_qc_payable_advance_traffic_qc_payable_advance__["a" /* TrafficQcPayableAdvanceComponent */],
                __WEBPACK_IMPORTED_MODULE_15__traffic_qc_receivable_advance_traffic_qc_receivable_advance__["a" /* TrafficQcReceivableAdvanceComponent */],
                __WEBPACK_IMPORTED_MODULE_16__traffic_qc_receivable_balance_traffic_qc_receivable_balance__["a" /* TrafficQcReceivableBalanceComponent */],
                __WEBPACK_IMPORTED_MODULE_17__traffic_qc_payable_balance_traffic_qc_payable_balance__["a" /* TrafficQcPayableBalanceComponent */],
                __WEBPACK_IMPORTED_MODULE_18__traffic_qc_clearing_cheques_traffic_qc_clearing_cheques__["a" /* TrafficQcClearingChequesComponent */]
            ],
            schemas: [__WEBPACK_IMPORTED_MODULE_0__angular_core__["CUSTOM_ELEMENTS_SCHEMA"]]
        })
    ], ComponentsModule);
    return ComponentsModule;
}());

//# sourceMappingURL=components.module.js.map

/***/ }),

/***/ 446:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MatchCompanyListPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










/**
 * Generated class for the MatchCompanyListPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var MatchCompanyListPage = /** @class */ (function () {
    function MatchCompanyListPage(navCtrl, navParams, requestLoad, toastController, formBuilder, loader, toast, trucks) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.toastController = toastController;
        this.formBuilder = formBuilder;
        this.loader = loader;
        this.toast = toast;
        this.trucks = trucks;
        this.transporter_name = "";
        this.truck_no = "";
        this.from = "";
        this.loading_place = "";
        this.id = "";
        this.srno = "";
        this.loctions = [];
        this.companyList = [];
        this.statuses = ['Load Available', 'No Load'];
        this.countCompany = 0;
        this.materialList = [];
        // Search query for truck no list
        this.companyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.requestLoad.searchCompany(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs__["Observable"].of([]);
            }
        };
        this.id = navParams.get('id');
        this.srno = navParams.get('srno');
        this.transporter_name = navParams.get('transporter_name');
        this.truck_no = navParams.get('truck_no');
        this.loctions = navParams.get('to');
        this.from = navParams.get('from');
        console.log("loading_place >>>", navParams.get('loading_place'));
        // this.loading_place = navParams.get('loading_place');
        this.getRequestLoadList();
        this.statuses = ['Load Available', 'No Load'];
        console.log(" >+> ", this.statuses);
        this.addForm = this.formBuilder.group({
            addMultipleNegotiate: this.formBuilder.array([])
        });
        this.getMaterials();
    }
    MatchCompanyListPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad MatchCompanyListPage');
    };
    MatchCompanyListPage.prototype.ngOnInit = function () {
        console.log('ID >>>>>', this.id);
    };
    Object.defineProperty(MatchCompanyListPage.prototype, "NegotiateData", {
        get: function () { return this.addForm.get('addMultipleNegotiate'); },
        enumerable: true,
        configurable: true
    });
    MatchCompanyListPage.prototype.createItem = function (data) {
        return this.formBuilder.group({
            company_name: new __WEBPACK_IMPORTED_MODULE_5__angular_forms__["FormControl"](data.company_name ? data.company_name : ''),
            from: new __WEBPACK_IMPORTED_MODULE_5__angular_forms__["FormControl"](data.from ? data.from : ''),
            // to: new FormControl(data.to ? data.to : ''),
            // unloading_place: new FormControl(data.unloading_place ? data.unloading_place : ''),
            // material: new FormControl(data.material ? data.material : ''),
            // ton: new FormControl(data.ton ? data.ton : ''),
            // rates: new FormControl(data.rates ? data.rates : ''),
            status: new __WEBPACK_IMPORTED_MODULE_5__angular_forms__["FormControl"](data.status ? data.status : ''),
        });
    };
    MatchCompanyListPage.prototype.getRequestLoadList = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getNegotiateDetails(this.id).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            if (data.results[0]) {
                // this.companyList = data.results;
                var company_groups = [];
                data.results.forEach(function (element) {
                    company_groups.push(_this.createItem(element));
                    _this.countCompany = _this.countCompany + 1;
                });
                _this.companyList = data;
                _this.addForm = _this.formBuilder.group({
                    addMultipleNegotiate: _this.formBuilder.array(company_groups)
                });
            }
            else {
                _this.requestLoad.getMatchCompanyList(_this.id).subscribe(function (res) {
                    var data = res.json();
                    var company_groups = [];
                    data.forEach(function (element) {
                        company_groups.push(_this.createItem(element));
                        _this.countCompany = _this.countCompany + 1;
                    });
                    _this.companyList = data;
                    _this.addForm = _this.formBuilder.group({
                        addMultipleNegotiate: _this.formBuilder.array(company_groups)
                    });
                });
            }
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    MatchCompanyListPage.prototype.onSelectCompany = function (e) {
        console.log(e);
        this.countCompany = this.countCompany + 1;
        var obj = {
            "company_name": e.company_name,
            "from": this.from
            // "to": ""
            // "unloading_place": ""
        };
        this.addMultipleNegotiate = this.addForm.get('addMultipleNegotiate');
        this.addMultipleNegotiate.push(this.createItem(obj));
        // this.companyList.unshift(obj);
    };
    MatchCompanyListPage.prototype.update = function () {
        var _this = this;
        var getFromData = this.addForm.value;
        var obj = { "negotiate": getFromData.addMultipleNegotiate };
        this.loader.show();
        this.requestLoad.updateNegotiate(this.id, obj).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            // this.addForm.reset();
            _this.toast.show('Updated successfully.');
        }, function (err) {
            _this.loader.hide();
        });
    };
    MatchCompanyListPage.prototype.getMaterials = function () {
        var _this = this;
        this.trucks.getMaterials().subscribe(function (res) {
            var data = res.json();
            data.results.forEach(function (r) {
                _this.materialList.push(r.name);
            });
            console.log("getMaterials >>>", _this.materialList);
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    MatchCompanyListPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__home_home__["a" /* HomePage */]);
    };
    MatchCompanyListPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-match-company-list',template:/*ion-inline-start:"D:\truck\src\pages\match-company-list\match-company-list.html"*/'<!--\n  Generated template for the MatchCompanyListPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Load Request #{{srno}}</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n    <ion-card class="card-header">\n      <ion-card-content class="card-header">\n        <div class="card-header">\n          <p class="font-col">\n            <span><ion-icon name="cube"></ion-icon> {{ transporter_name }} </span>\n            <span class="fright">Truck No: {{ truck_no }}</span>\n          </p>\n          <br>\n          <p class="font-col">\n            <!-- <span>Loading place: {{ loading_place }}</span> -->\n            <span>From: {{ from }}</span>\n            <span class="fright">Total: {{ countCompany }}</span>\n          </p>\n\n          <!-- <p class="font-col">\n            <span>From: {{ from }}</span>\n          </p> -->\n\n          <p class="font-col">\n            <span>Preferred Location: {{ loctions.toString() }}</span>\n\n          </p>\n        </div>    \n      </ion-card-content>\n    </ion-card>\n  \n\n  <div padding>\n    <div class="width-full">\n    <label class="margintop15">Add Company To Negotiate</label>\n    </div>\n    <input\n        class="form-control"\n        ng2-auto-complete\n        [source]="companyName.bind(this)"\n        list-formatter="company_name"\n        (valueChanged)="onSelectCompany($event)"           \n      /> \n           <!-- (click)=="onSelectCompany()" -->\n  </div>\n  <hr>\n\n  \n\n  <ion-row padding>\n    <ion-col col-9 >\n      <div class="width-full">\n      <b>Matching Companies List</b>\n      </div>\n      <!-- <p class="transporter-name">Total Companies : {{ countCompany }}</p> -->\n    </ion-col>\n    <ion-col col-3>\n      <div class="width-full">\n      <button ion-button color="secondary" (click)="update()"><ion-icon name="archive"></ion-icon>&nbsp;&nbsp;Save</button>\n    </div>\n    </ion-col>\n  </ion-row>\n\n  <form [formGroup]="addForm">\n    <div formArrayName="addMultipleNegotiate">\n      <div *ngFor="let d of NegotiateData.controls; let i = index" [formGroup]="d">\n          <ion-card>\n            <ion-card-content>\n              <ion-grid>\n                <ion-row>\n                  <ion-col col-6>\n                    <span >Company Name</span>\n                  </ion-col>\n                  <ion-col col-6>\n                    <div>\n                      <input type="text" formControlName="company_name"  readonly style="border:0"  />\n                    </div>\n                  </ion-col>\n                \n                  <ion-col col-6>\n                    From \n                  </ion-col>\n                  <ion-col col-6>\n                    <div>\n                      <input type="text" formControlName="from"  readonly style="border:0"  />\n                    </div>\n                  </ion-col>\n\n\n                  <!-- <ion-col col-6>\n                    To \n                  </ion-col>\n                  <ion-col col-6>\n                    <div>\n                      <input type="text" class="form-control" formControlName="to" />\n                    </div>\n                  </ion-col>\n\n                  <ion-col col-6>\n                    Unloading Place \n                  </ion-col>\n                  <ion-col col-6>\n                    <div>\n                      <input type="text" class="form-control" formControlName="unloading_place" />\n                    </div>\n                  </ion-col>\n\n                  \n\n                  <ion-col col-6>\n                    Material \n                  </ion-col>\n                  <ion-col col-6>\n                    <div> -->\n                      <!-- <input type="text" class="form-control" formControlName="material"  /> -->\n                      <!-- <div>\n                        <ion-select formControlName="material" placeholder="Select One" >\n                        <ion-option *ngFor="let m of materialList" [value]="m">{{m}}</ion-option>\n                        </ion-select>\n                      </div>\n                    </div>\n                  </ion-col>\n\n                  <ion-col col-6>\n                      Ton \n                  </ion-col>\n                  <ion-col col-6>\n                    <div>\n                      <input type="number" class="form-control" formControlName="ton"  />\n                    </div>\n                  </ion-col>\n\n                  <ion-col col-6>\n                    Rates \n                  </ion-col>\n                  <ion-col col-6>\n                    <div>\n                      <input type="number" class="form-control" formControlName="rates" />\n                    </div>\n                  </ion-col> -->\n\n                  <ion-col col-6>\n                      Status \n                  </ion-col>\n                  <ion-col col-6>\n                    <div>\n                      <ion-select formControlName="status" placeholder="Select One" >\n                      <ion-option *ngFor="let s of statuses" [value]="s">{{s}}</ion-option>\n                      </ion-select>\n                    </div>\n                  </ion-col>\n\n                  <!-- <ion-col col-6>\n                      Advance \n                  </ion-col>\n                  <ion-col col-6>\n                    <input type="text" class="form-control" formControlName="advance" /> \n                  </ion-col> -->\n\n                </ion-row>\n              </ion-grid>\n            </ion-card-content>\n          </ion-card> \n      </div>\n    </div>\n  </form>\n  <div class="width-full">\n  <button ion-button color="secondary" (click)="update()"><ion-icon name="archive"></ion-icon>&nbsp;&nbsp;Save</button><br>\n</div>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\match-company-list\match-company-list.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_5__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_6__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_8__providers_truck__["a" /* Trucks */]])
    ], MatchCompanyListPage);
    return MatchCompanyListPage;
}());

//# sourceMappingURL=match-company-list.js.map

/***/ }),

/***/ 448:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditRequestLoadPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__helpers_common__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the EditRequestLoadPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditRequestLoadPage = /** @class */ (function () {
    function EditRequestLoadPage(navCtrl, navParams, formBuilder, requestLoad, trucks, toastController, loader, toast, mapsAPILoader, ngZone, admin) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.formBuilder = formBuilder;
        this.requestLoad = requestLoad;
        this.trucks = trucks;
        this.toastController = toastController;
        this.loader = loader;
        this.toast = toast;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.admin = admin;
        this.submitted = false;
        this.statuses = ['Pending', 'Cancel', 'Deal Final'];
        this.DestinationsArray = [];
        this.getTo = "";
        this.cancelFlag = false;
        this.mainCancelMaster = [];
        this.cancelReasons = [];
        this.salesmanList = [];
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Transporter Name list
        this.transporterName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTransporterName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].of([]);
            }
        };
        this.data = navParams.get('data');
        this.id = this.data._id;
        this.getSalesmanList();
    }
    Object.defineProperty(EditRequestLoadPage.prototype, "destinationsData", {
        get: function () { return this.editForm.get('addMultipleDestinations'); },
        enumerable: true,
        configurable: true
    });
    EditRequestLoadPage.prototype.createItem = function (data) {
        return this.formBuilder.group({
            to: [data.to ? data.to : '', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])]
        });
    };
    EditRequestLoadPage.prototype.createNewItem = function () {
        return this.formBuilder.group({
            to: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])]
        });
    };
    EditRequestLoadPage.prototype.addTo = function () {
        this.addMultipleDestinations = this.editForm.get('addMultipleDestinations');
        this.addMultipleDestinations.push(this.createItem(''));
    };
    EditRequestLoadPage.prototype.removeTo = function (index) {
        if (index === 0) {
            this.toast.error({ 'message': 'Cannot remove this form..' });
        }
        else {
            this.addMultipleDestinations = this.editForm.get('addMultipleDestinations');
            this.addMultipleDestinations.removeAt(index);
        }
    };
    EditRequestLoadPage.prototype.addToArray = function () {
        var obj = { "to": this.getTo };
        this.DestinationsArray.push(obj);
        this.editForm.get('location_to').setValue('');
    };
    EditRequestLoadPage.prototype.removeToArray = function (index) {
        this.DestinationsArray.splice(index, 1);
        console.log("array >>>", this.DestinationsArray);
    };
    EditRequestLoadPage.prototype.ionViewDidLoad = function () {
        var _this = this;
        console.log('ionViewDidLoad EditRequestLoadPage');
        setTimeout(function () {
            var toSearch = new google.maps.places.Autocomplete(_this.searchElementRefTo.nativeElement, {
                componentRestrictions: { "country": "IN" },
                types: []
            });
            toSearch.addListener("place_changed", function () {
                _this.ngZone.run(function () {
                    //get the place result
                    var place = toSearch.getPlace();
                    var components = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].extract_components(place);
                    var pre_city = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                    console.log(components, pre_city);
                    document.getElementById('TO').value = pre_city;
                    _this.getTo = pre_city;
                });
            });
            var fromLoction = new google.maps.places.Autocomplete(_this.searchElementRefFrom.nativeElement, {
                componentRestrictions: { "country": "IN" },
                types: []
            });
            fromLoction.addListener("place_changed", function () {
                _this.ngZone.run(function () {
                    //get the place result
                    var place = fromLoction.getPlace();
                    var components = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].extract_components(place);
                    var pre_city = __WEBPACK_IMPORTED_MODULE_11__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                    console.log(components, pre_city);
                    document.getElementById('From').value = pre_city;
                    _this.editForm.controls['from'].setValue(pre_city);
                });
            });
        }, 1000);
    };
    EditRequestLoadPage.prototype.ngOnInit = function () {
        var _this = this;
        var destinations = [];
        this.data.destinations.forEach(function (element) {
            destinations.push(_this.createItem(element));
            var obj = { "to": element.to };
            _this.DestinationsArray.push(obj);
        });
        this.editForm = this.formBuilder.group({
            date: [this.data.date],
            agency_name: [this.data.agency_name, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            transporter_name: [this.data.transporter_name, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            truck_no: [this.data.truck_no, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            from: [this.data.from, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            // // loading_place: [this.data.loading_place],
            addMultipleDestinations: this.formBuilder.array(destinations),
            status: [this.data.status],
            location_to: [''],
            salesman: [this.data.salesman, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
        });
        if (this.editForm.value.status == "Cancel") {
            this.getCancel();
        }
    };
    EditRequestLoadPage.prototype.getSalesmanList = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        this.admin.getListByAgency(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.salesmanList.push(element.first_name);
            });
            console.log("salesmanList >>>>", _this.salesmanList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditRequestLoadPage.prototype.getCancel = function () {
        var _this = this;
        console.log("Data >>>", this.editForm.value.status);
        if (this.editForm.value.status == "Cancel") {
            this.cancelFlag = true;
            this.requestLoad.getCancelReasons("Post Load").subscribe(function (res) {
                var data = res.json();
                _this.cancelReasons = [];
                data.results.forEach(function (element) {
                    _this.cancelReasons.push({ "name": element.cancel_reason, "flag": false });
                });
                if (_this.data.cancel_reasons[0]) {
                    _this.data.cancel_reasons.forEach(function (mainElement) {
                        _this.cancelReasons.forEach(function (subElement) {
                            if (subElement.name == mainElement) {
                                subElement.flag = true;
                                _this.mainCancelMaster.push(mainElement);
                            }
                        });
                    });
                }
                console.log("Data >>>", _this.cancelReasons);
            }, function (err) {
                console.log(">>>error", err);
            });
        }
        else {
            this.cancelFlag = false;
            this.cancelReasons = [];
        }
    };
    EditRequestLoadPage.prototype.addCancel = function (e, tt, ind) {
        var _this = this;
        if (e.target.checked) {
            this.mainCancelMaster.push(tt);
            this.cancelReasons[ind].flag = true;
            console.log("this.mainCancelMaster >>>>", this.mainCancelMaster);
        }
        else {
            var i = 0;
            this.mainCancelMaster.forEach(function (element) {
                if (element == tt) {
                    console.log(" IN    >>>>", i);
                    _this.mainCancelMaster.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.mainCancelMaster >>>>", this.mainCancelMaster);
        }
    };
    EditRequestLoadPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__home_home__["a" /* HomePage */]);
    };
    EditRequestLoadPage.prototype.update = function (isValid) {
        var _this = this;
        this.submitted = true;
        if (isValid) {
            var getFromData = this.editForm.value;
            if (getFromData.truck_no.truck_no || getFromData.truck_no == this.data.truck_no) {
                var truckNo = getFromData.truck_no.truck_no ? getFromData.truck_no.truck_no : this.data.truck_no;
                var agencyName = getFromData.agency_name.agency_name ? getFromData.agency_name.agency_name : this.data.agency_name;
                var transporterName = getFromData.transporter_name.transporter_name ? getFromData.transporter_name.transporter_name : this.data.transporter_name;
                var obj = {
                    "date": getFromData.date,
                    "agency_name": agencyName,
                    "transporter_name": transporterName,
                    "truck_no": truckNo,
                    "from": getFromData.from,
                    // // "loading_place": getFromData.loading_place,
                    // "destinations": getFromData.addMultipleDestinations,
                    "destinations": this.DestinationsArray,
                    "status": getFromData.status,
                    "cancel_reasons": this.mainCancelMaster,
                    "salesman": getFromData.salesman,
                };
                console.log("obj  >>>>>", obj);
                console.log("id  >>>>>", this.id);
                this.requestLoad.updateRequestLoad(this.id, obj).subscribe(function (res) {
                    _this.editForm.reset();
                    _this.toast.show({ 'message': 'Updated successfully.' });
                    _this.navCtrl.setRoot('ManageRequestLoadPage');
                }, function (err) {
                    console.log(">>>>>Err", err);
                    _this.toast.error({ 'message': 'Something went wrong.' });
                });
            }
            else {
                console.log("Else Select >>>");
                this.toast.error({ 'message': 'Please Add New Truck OR Select Truck from List..' });
            }
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchTo"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditRequestLoadPage.prototype, "searchElementRefTo", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchFrom"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditRequestLoadPage.prototype, "searchElementRefFrom", void 0);
    EditRequestLoadPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-request-load',template:/*ion-inline-start:"D:\truck\src\pages\edit-request-load\edit-request-load.html"*/'<!--\n  Generated template for the EditRequestLoadPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit Request Load</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="editForm" (ngSubmit)="update(editForm.valid)" novalidate>\n    <div class="form-group">\n      <label class=" label">Date</label> \n      <ion-item class="form-control">\n        <ion-datetime name="date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="date"></ion-datetime>\n      </ion-item>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Agency name <span style="color:red">*</span> </label> \n      <!-- <input name="agency_name" type="text" placeholder="" formControlName="agency_name" class="form-control" />  -->\n      <input class="form-control"\n      ng2-auto-complete\n      formControlName="agency_name"\n      [source]="agencyName.bind(this)"\n      list-formatter="agency_name" /> \n    </div>\n    <div class="error-msg" *ngIf="submitted || (editForm.controls.agency_name.invalid && (editForm.controls.agency_name.dirty || editForm.controls.agency_name.touched))">\n      <div *ngIf="editForm.controls[\'agency_name\'].hasError(\'required\')">\n        <label>Agency name is required.</label>\n      </div>\n      <div *ngIf="editForm.controls[\'agency_name\'].hasError(\'minlength\')">\n        <label>Minimum length is upto 2 letters.</label>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Transporter name <span style="color:red">*</span> </label> \n      <!-- <input name="transporter_name" type="text" placeholder="" formControlName="transporter_name" class="form-control" />  -->\n      <input class="form-control"\n      ng2-auto-complete\n      formControlName="transporter_name"\n      [source]="transporterName.bind(this)"\n      list-formatter="transport_name" /> \n    </div>\n    <div class="error-msg" *ngIf="submitted || (editForm.controls.transporter_name.invalid && (editForm.controls.transporter_name.dirty || editForm.controls.transporter_name.touched))">\n      <div *ngIf="editForm.controls[\'transporter_name\'].hasError(\'required\')">\n        <label>Transporter name is required.</label>\n      </div>\n      <div *ngIf="editForm.controls[\'transporter_name\'].hasError(\'minlength\')">\n        <label>Minimum length is upto 2 letters.</label>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Truck No <span style="color:red">*</span> </label>                 \n      <input\n        class="form-control"\n        ng2-auto-complete\n        formControlName="truck_no"\n        [source]="truckNo.bind(this)"\n        list-formatter="truck_no"\n        (select)="onSelectTruck()" \n      /> \n    </div>\n    <div class="error-msg" *ngIf="submitted || (editForm.controls.truck_no.invalid && (editForm.controls.truck_no.dirty || editForm.controls.truck_no.touched))">\n      <div *ngIf="editForm.controls[\'truck_no\'].hasError(\'required\')">\n        <label>Truck number is required.</label>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">From <span style="color:red">*</span> </label> \n      <input name="from" id="From" type="text"  #searchFrom formControlName="from" class="form-control" /> \n    </div>\n    <div class="error-msg" *ngIf="submitted || (editForm.controls.from.invalid && (editForm.controls.from.dirty || editForm.controls.from.touched))">\n      <div *ngIf="editForm.controls[\'from\'].hasError(\'required\')">\n        <label>From is required.</label>\n      </div>\n    </div>\n\n    <!-- <div class="form-group">\n      <label class=" label">Loading Place <span style="color:red">*</span> </label> \n      <input name="loading_place" type="text" formControlName="loading_place" class="form-control" /> \n    </div> -->\n\n    <!-- <div formArrayName="addMultipleDestinations" class="form-group">            \n      <div *ngFor="let d of destinationsData.controls; let i = index" [formGroup]="d">\n        <ion-grid>\n          <ion-row>\n            <ion-col>\n              <label class=" label mg-top-13">Destination {{ i + 1}} <span style="color:red">*</span></label>\n            </ion-col>\n            <ion-col>\n              <ion-row right>\n                <ion-col text-right>\n                  <button class="btn-size" ion-button color="secondary" (click)="addTo()"><ion-icon name="add"></ion-icon></button>\n                  <button class="btn-size" ion-button color="danger" (click)="removeTo(i)"><ion-icon name="close"></ion-icon></button>\n                </ion-col>\n              </ion-row>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n        <input type="text" formControlName="to" class="form-control" />\n        <div class="error-msg" *ngIf="submitted || (d.controls.to.invalid && (d.controls.to.dirty || d.controls.to.touched))">\n          <div *ngIf="d.controls[\'to\'].hasError(\'required\')">\n            <label>To is required.</label>\n          </div>\n          <div *ngIf="d.controls[\'to\'].hasError(\'minlength\')">\n            <label>Minimum length is upto 2 letters.</label>\n          </div>\n        </div>\n      </div>\n    </div> -->\n\n    <hr>\n    <div class="form-group">\n      <button ion-button (click)="addToArray()" type="button" class="add-al">Add</button>\n      <label class=" label">Location <span style="color:red">*</span></label> \n      <input type="text" id="TO" formControlName="location_to" class="form-control" #searchTo />\n    \n    \n      <div *ngFor="let d of DestinationsArray; let i = index" class="margintop15">\n          <ion-row>\n            <ion-col class="col-pad">\n              {{ d.to }}\n            </ion-col>\n          \n            <ion-col>\n                <button class="btn-size" (click)="removeToArray(i)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button>\n            </ion-col>\n          </ion-row>\n        </div>\n    </div>\n    <hr>\n    <br>\n\n\n    <br>\n\n    <div class="form-group">\n      <label class=" label">Status <span style="color:red">*</span></label>\n      <select class="form-control drop-down" name="status" (change)="getCancel()"  formControlName="status" required  >\n        <option value="">Select Status</option>\n        <option *ngFor="let st of statuses" [ngValue]="st">{{st}}</option>\n      </select>\n    </div>\n    <div class="error-msg" *ngIf="submitted || (editForm.controls.status.invalid && (editForm.controls.status.dirty || editForm.controls.status.touched))">\n      <div *ngIf="editForm.controls[\'status\'].hasError(\'required\')">\n        <label>Status is required.</label>\n      </div>\n    </div>\n\n    <div *ngIf="cancelFlag" class="form-group">\n      <div *ngFor="let cr of cancelReasons; let j = index;" padding>\n        <div *ngIf="cr.flag">\n          <input type="checkbox" checked="{{cr.flag}}" value="cr.name" (change)="addCancel($event, cr.name, a)"> &nbsp;{{ cr.name }}\n        </div>\n        <div *ngIf="!cr.flag">\n            <input type="checkbox" value="cr.name" (change)="addCancel($event, cr.name, j)"> &nbsp;{{ cr.name }}\n        </div>\n      </div> \n    </div>\n\n    <!-- <div class="form-group">\n      <label class=" label mg-top-13">Salesman </label> \n      <input type="text" formControlName="salesman" class="form-control" />\n    </div> -->\n\n    <div class="form-group">\n      <label class=" label">Salesman <span style="color:red">*</span></label>\n      <select class="form-control drop-down" name="salesman" formControlName="salesman" >\n        <option value="">Select Salesman</option>\n        <option *ngFor="let sml of salesmanList" [ngValue]="sml">{{sml}}</option>\n      </select>\n    </div>\n    <div class="error-msg" *ngIf="submitted || (editForm.controls.salesman.invalid && (editForm.controls.salesman.dirty || editForm.controls.salesman.touched))">\n      <div *ngIf="editForm.controls[\'salesman\'].hasError(\'required\')">\n        <label>Salesman is required.</label>\n      </div>\n    </div>\n\n    <div padding class="button-submit">\n      <button ion-button block size="large" type="button" type="submit" expand="block"><ion-icon name="create"></ion-icon>&nbsp;&nbsp;Update Request Load</button>\n    </div> \n \n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\edit-request-load\edit-request-load.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_7__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_8__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_10__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"],
            __WEBPACK_IMPORTED_MODULE_12__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], EditRequestLoadPage);
    return EditRequestLoadPage;
}());

//# sourceMappingURL=edit-request-load.js.map

/***/ }),

/***/ 449:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditPostLoadPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of__ = __webpack_require__(90);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__manage_post_load__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__helpers_common__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the EditPostLoadPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditPostLoadPage = /** @class */ (function () {
    function EditPostLoadPage(navCtrl, navParams, formBuilder, requestLoad, trucks, toastController, loader, toast, mapsAPILoader, ngZone, admin) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.formBuilder = formBuilder;
        this.requestLoad = requestLoad;
        this.trucks = trucks;
        this.toastController = toastController;
        this.loader = loader;
        this.toast = toast;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.admin = admin;
        this.submitted = false;
        this.paymentModes = ['To Pay', 'To Be Billed', 'Advance To Pay', 'Advance Pod'];
        this.materialsArray = [];
        this.types = [
            { name: 'OPEN', value: 'OPEN' },
            { name: 'CONTAINER', value: 'CONTAINER' },
            { name: 'TRAILER', value: 'TRAILER' },
        ];
        this.statuses = ['Pending', 'Cancel', 'Deal Final'];
        this.capacity = [];
        this.count = 1;
        this.getTo = "";
        this.getUnload = "";
        this.DestinationsArray = [];
        this.cancelFlag = false;
        this.mainCancelMaster = [];
        this.cancelReasons = [];
        this.salesmanList = [];
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Transporter Name list
        this.transporterName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTransporterName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].of([]);
            }
        };
        // Search query for truck no list
        this.companyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.requestLoad.searchCompany(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_5_rxjs__["Observable"].of([]);
            }
        };
        this.getSalesmanList();
        this.data = navParams.get('data');
        this.id = this.data._id;
        console.log("data >>>>>", this.data);
        console.log("id >>>>>", this.id);
        var destinations = [];
        this.data.destinations.forEach(function (element) {
            destinations.push(_this.createItem(element));
        });
        this.DestinationsArray = this.data.destinations;
        console.log("Length >>>>>", this.data.destinations.length);
        this.count = this.data.destinations.length;
        this.getMaterials();
        this.editForm = this.formBuilder.group({
            posting_date: [this.data.posting_date],
            agency_name: [this.data.agency_name, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            company_name: [this.data.company_name, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            despatch_date: [this.data.despatch_date],
            delivery_date: [this.data.delivery_date],
            from: [this.data.from, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            loading_place: [this.data.loading_place],
            addMultipleDestinations: this.formBuilder.array(destinations),
            // // unloading_place: [this.data.unloading_place],
            material: [this.data.material],
            ton: [this.data.ton],
            truck_type: [''],
            capacity: [''],
            rate: [this.data.rate],
            payment_mode: [this.data.payment_mode],
            advance: [this.data.advance],
            status: [this.data.status, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            salesman: [this.data.salesman, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            to: [''],
            unloading_place: [''],
            late_delivery_amount: [this.data.late_delivery_amount],
            detention_amount: [this.data.detention_amount],
        });
        this.editForm.controls['truck_type'].setValue(this.data.truck_type);
        this.getCapacity();
        this.editForm.controls['capacity'].setValue(parseFloat(this.data.capacity));
        if (this.editForm.value.status == "Cancel") {
            this.getCancel();
        }
    }
    Object.defineProperty(EditPostLoadPage.prototype, "destinationsData", {
        get: function () { return this.editForm.get('addMultipleDestinations'); },
        enumerable: true,
        configurable: true
    });
    EditPostLoadPage.prototype.createItem = function (data) {
        return this.formBuilder.group({
            to: [data.to ? data.to : '', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            unloading_place: [data.unloading_place ? data.unloading_place : '']
        });
    };
    EditPostLoadPage.prototype.createNewItem = function () {
        return this.formBuilder.group({
            to: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            unloading_place: ['']
        });
    };
    EditPostLoadPage.prototype.addTo = function () {
        console.log("this.count");
        if (this.count < 3) {
            this.addMultipleDestinations = this.editForm.get('addMultipleDestinations');
            this.addMultipleDestinations.push(this.createItem(''));
            this.count = this.count + 1;
        }
        else {
            this.toast.show({ 'message': 'Maximum Add only Three Destinations.' });
        }
    };
    EditPostLoadPage.prototype.removeTo = function (index) {
        if (index === 0) {
            this.toast.error({ 'message': 'Cannot remove this form..' });
        }
        else {
            this.addMultipleDestinations = this.editForm.get('addMultipleDestinations');
            this.addMultipleDestinations.removeAt(index);
            this.count = this.count - 1;
        }
    };
    EditPostLoadPage.prototype.addToArray = function () {
        if (this.DestinationsArray.length < 3) {
            var obj = { "to": this.getTo, "unloading_place": this.getUnload };
            this.DestinationsArray.push(obj);
            this.editForm.get('to').setValue('');
            this.editForm.get('unloading_place').setValue('');
        }
        else {
            this.toast.show({ 'message': 'Maximum Add only Three Destinations.' });
        }
    };
    EditPostLoadPage.prototype.getCancel = function () {
        var _this = this;
        console.log("Data >>>", this.editForm.value.status);
        if (this.editForm.value.status == "Cancel") {
            this.cancelFlag = true;
            this.requestLoad.getCancelReasons("Post Load").subscribe(function (res) {
                var data = res.json();
                _this.cancelReasons = [];
                data.results.forEach(function (element) {
                    _this.cancelReasons.push({ "name": element.cancel_reason, "flag": false });
                });
                if (_this.data.cancel_reasons[0]) {
                    _this.data.cancel_reasons.forEach(function (mainElement) {
                        _this.cancelReasons.forEach(function (subElement) {
                            if (subElement.name == mainElement) {
                                subElement.flag = true;
                                _this.mainCancelMaster.push(mainElement);
                            }
                        });
                    });
                }
                console.log("Data >>>", _this.cancelReasons);
            }, function (err) {
                console.log(">>>error", err);
            });
        }
        else {
            this.cancelFlag = false;
            this.cancelReasons = [];
        }
    };
    EditPostLoadPage.prototype.addCancel = function (e, tt, ind) {
        var _this = this;
        if (e.target.checked) {
            this.mainCancelMaster.push(tt);
            this.cancelReasons[ind].flag = true;
            console.log("this.mainCancelMaster >>>>", this.mainCancelMaster);
        }
        else {
            var i = 0;
            this.mainCancelMaster.forEach(function (element) {
                if (element == tt) {
                    console.log(" IN    >>>>", i);
                    _this.mainCancelMaster.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.mainCancelMaster >>>>", this.mainCancelMaster);
        }
    };
    EditPostLoadPage.prototype.removeToArray = function (index) {
        this.DestinationsArray.splice(index, 1);
        console.log("array >>>", this.DestinationsArray);
    };
    EditPostLoadPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditRequestLoadPage');
    };
    EditPostLoadPage.prototype.ngOnInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var formSearch = new google.maps.places.Autocomplete(_this.searchElementRefFrom.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                formSearch.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = formSearch.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('From').value = pre_city;
                        _this.editForm.controls['from'].setValue(pre_city);
                        // this.editForm.value.form = pre_city;
                    });
                });
                var LoadingPlace = new google.maps.places.Autocomplete(_this.searchElementRefLoadingPlace.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                LoadingPlace.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = LoadingPlace.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('LoadingPlace').value = pre_city;
                        _this.editForm.controls['loading_place'].setValue(pre_city);
                        // this.editForm.value.loading_place = place.vicinity;
                    });
                });
                var toSearch = new google.maps.places.Autocomplete(_this.searchElementRefTo.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                toSearch.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = toSearch.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('TO').value = pre_city;
                        _this.getTo = pre_city;
                        // let addr = this.editForm.get('addMultipleDestinations') as FormArray;
                        // let first = addr.value[this.toIndex];
                        // first.to = place.vicinity;
                    });
                });
                var UnloadingPlace = new google.maps.places.Autocomplete(_this.searchElementRefUnloadingPlace.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                UnloadingPlace.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = UnloadingPlace.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('UnloadingPlace').value = pre_city;
                        _this.getUnload = pre_city;
                    });
                });
            });
        }, 2000);
    };
    EditPostLoadPage.prototype.getSalesmanList = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        this.admin.getListByAgency(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.salesmanList.push(element.first_name);
            });
            console.log("salesmanList >>>>", _this.salesmanList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditPostLoadPage.prototype.getMaterials = function () {
        var _this = this;
        this.trucks.getMaterials().subscribe(function (res) {
            var data = res.json();
            data.results.forEach(function (r) {
                _this.materialsArray.push(r.name);
            });
            console.log('Materials data >>>>>>> ', _this.materialsArray);
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    EditPostLoadPage.prototype.getCapacity = function () {
        var _this = this;
        var ttype = this.editForm.value.truck_type;
        this.trucks.getCapacityOfTruck().subscribe(function (res) {
            var data = res.json();
            // console.log('res >>>>>>> ', res);
            _this.capacity = [];
            data.results.forEach(function (r) {
                if (r.type == ttype) {
                    r.capacity.forEach(function (a) {
                        var obj = {
                            "name": a.ton,
                            "value": a.ton,
                        };
                        _this.capacity.push(obj);
                    });
                }
            });
            console.log('capacity >>>>>>> ', _this.capacity);
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    EditPostLoadPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_10__home_home__["a" /* HomePage */]);
    };
    EditPostLoadPage.prototype.update = function (isValid) {
        var _this = this;
        this.submitted = true;
        console.log(" isValid >>>>>", isValid);
        console.log(">>>>>>>>>>COntrols", this.editForm);
        if (isValid) {
            var getFromData = this.editForm.value;
            if (getFromData.to && getFromData.unloading_place) {
                var addMore = { "to": this.getTo, "unloading_place": this.getUnload };
                this.DestinationsArray.push(addMore);
            }
            var obj = {
                "posting_date": getFromData.posting_date,
                "agency_name": getFromData.agency_name.agency_name ? getFromData.agency_name.agency_name : getFromData.agency_name,
                "company_name": getFromData.company_name.company_name ? getFromData.company_name.company_name : getFromData.company_name,
                "despatch_date": getFromData.despatch_date,
                "delivery_date": getFromData.delivery_date,
                "from": getFromData.from,
                "loading_place": getFromData.loading_place,
                // "destinations": getFromData.addMultipleDestinations,
                "destinations": this.DestinationsArray,
                // // "unloading_place": getFromData.unloading_place,
                "material": getFromData.material,
                "ton": getFromData.ton,
                "truck_type": getFromData.truck_type,
                "capacity": getFromData.capacity,
                "rate": getFromData.rate,
                "payment_mode": getFromData.payment_mode,
                "advance": getFromData.advance,
                "status": getFromData.status,
                "cancel_reasons": this.mainCancelMaster,
                "salesman": getFromData.salesman,
                "late_delivery_amount": getFromData.late_delivery_amount,
                "detention_amount": getFromData.detention_amount,
            };
            console.log("obj  >>>>>", obj);
            this.requestLoad.updatePostLoad(this.id, obj).subscribe(function (res) {
                _this.editForm.reset();
                _this.toast.show({ 'message': 'Updated successfully.' });
                _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__manage_post_load__["a" /* ManagePostLoadPage */]);
            }, function (err) {
                console.log(">>>>>Err", err);
                _this.toast.error({ 'message': 'Something went wrong.' });
            });
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchFrom"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditPostLoadPage.prototype, "searchElementRefFrom", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchLoadingPlace"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditPostLoadPage.prototype, "searchElementRefLoadingPlace", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchTo"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditPostLoadPage.prototype, "searchElementRefTo", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchUnloadingPlace"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditPostLoadPage.prototype, "searchElementRefUnloadingPlace", void 0);
    EditPostLoadPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-post-load',template:/*ion-inline-start:"D:\truck\src\pages\manage-post-load\edit-post-load\edit-post-load.html"*/'<!--\n  Generated template for the EditRequestLoadPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit Post Load</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="editForm" novalidate>\n\n    <div class="form-group">\n      <label class=" label">Posting Date</label> \n      <ion-item class="form-control">\n        <ion-datetime name="posting_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="posting_date"></ion-datetime>\n      </ion-item>\n    </div>\n    \n    <div class="form-group">\n      <label class=" label">Dispatch Date</label> \n      <ion-item class="form-control">\n        <ion-datetime name="despatch_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="despatch_date"></ion-datetime>\n      </ion-item>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Agency Name </label> \n      <input\n        class="form-control"\n        ng2-auto-complete\n        [source]="agencyName.bind(this)"\n        list-formatter="agency_name"\n        formControlName="agency_name"          \n      />\n    </div>\n    <div class="error-msg" *ngIf="submitted || (editForm.controls.agency_name.invalid && (editForm.controls.agency_name.dirty || editForm.controls.agency_name.touched))">\n      <div *ngIf="editForm.controls[\'agency_name\'].hasError(\'required\')">\n        <label>Agency name is required.</label>\n      </div>\n      <div *ngIf="editForm.controls[\'agency_name\'].hasError(\'minlength\')">\n        <label>Minimum length is upto 2 letters.</label>\n      </div>\n      <div *ngIf="editForm.controls[\'agency_name\'].hasError(\'maxlength\')">\n        <label>Maximum length is upto 25 letters.</label>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Company Name </label> \n      <!-- <input name="company_name" type="text" formControlName="company_name" class="form-control" />  -->\n      <input\n        class="form-control"\n        ng2-auto-complete\n        [source]="companyName.bind(this)"\n        list-formatter="company_name"\n        formControlName="company_name"          \n      />\n    </div>\n    <div class="error-msg" *ngIf="submitted || (editForm.controls.company_name.invalid && (editForm.controls.company_name.dirty || editForm.controls.company_name.touched))">\n      <div *ngIf="editForm.controls[\'company_name\'].hasError(\'required\')">\n        <label>Company name is required.</label>\n      </div>\n      <div *ngIf="editForm.controls[\'company_name\'].hasError(\'minlength\')">\n        <label>Minimum length is upto 2 letters.</label>\n      </div>\n      <div *ngIf="editForm.controls[\'company_name\'].hasError(\'maxlength\')">\n        <label>Maximum length is upto 25 letters.</label>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">From <span style="color:red">*</span> </label> \n      <input name="from" id="From" type="text" formControlName="from" class="form-control" #searchFrom /> \n    </div>\n    <div class="error-msg" *ngIf="submitted || (editForm.controls.from.invalid && (editForm.controls.from.dirty || editForm.controls.from.touched))">\n      <div *ngIf="editForm.controls[\'from\'].hasError(\'required\')">\n        <label>From is required.</label>\n      </div>\n      <div *ngIf="editForm.controls[\'from\'].hasError(\'minlength\')">\n        <label>Minimum length is upto 2 letters.</label>\n      </div>\n      <div *ngIf="editForm.controls[\'from\'].hasError(\'maxlength\')">\n        <label>Maximum length is upto 25 letters.</label>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Loading Place </label> \n      <input name="loading_place" id="LoadingPlace" type="text" formControlName="loading_place" class="form-control" #searchLoadingPlace /> \n    </div>\n\n\n\n    <br>\n\n    <!-- <div formArrayName="addMultipleDestinations" class="form-group">            \n      <div *ngFor="let d of destinationsData.controls; let i = index" [formGroup]="d">\n        <ion-grid>\n          <ion-row>\n            <ion-col>\n              <label class=" label mg-top-13">Destination {{ i + 1}} <span style="color:red">*</span></label>\n            </ion-col>\n            <ion-col>\n              <ion-row right>\n                <ion-col text-right>\n                  <button class="btn-size" ion-button color="secondary" (click)="addTo()"><ion-icon name="add"></ion-icon></button>\n                  <button class="btn-size" ion-button color="danger" (click)="removeTo(i)"><ion-icon name="close"></ion-icon></button>\n                </ion-col>\n              </ion-row>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n        <input type="text" formControlName="to" id="TO" class="form-control" #searchTo />\n        <div class="error-msg" *ngIf="submitted || (d.controls.to.invalid && (d.controls.to.dirty || d.controls.to.touched))">\n          <div *ngIf="d.controls[\'to\'].hasError(\'required\')">\n            <label>To is required.</label>\n          </div>\n          <div *ngIf="d.controls[\'to\'].hasError(\'minlength\')">\n            <label>Minimum length is upto 2 letters.</label>\n          </div>\n        </div>\n\n        <label class=" label">Unloading Place </label> \n        <input name="unloading_place" id="UnloadingPlace" type="text" formControlName="unloading_place" class="form-control" #searchUnloadingPlace /> \n\n      </div>\n    </div> -->\n\n    <hr>\n    <div class="form-group">\n        <button ion-button (click)="addToArray()" type="button" class="add-al">Add more</button>\n      <label class=" label mg-top-13">Destination </label> \n      <input type="text" id="TO" formControlName="to" class="form-control" (change)="getIndex(i)" #searchTo />\n    \n      <div *ngFor="let d of DestinationsArray; let i = index" class="margintop15">\n          <ion-row>\n            <ion-col class="col-pad">\n              {{ d.to }}\n            </ion-col>\n            <ion-col class="col-pad">\n              {{ d.unloading_place }}\n            </ion-col>\n            <ion-col>\n                <button class="btn-size" (click)="removeToArray(i)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button>\n            </ion-col>\n          </ion-row>\n        </div>\n    </div>\n    \n    <div class="form-group">\n      <label class=" label">Unloading Place </label> \n      <input name="unloading_place" id="UnloadingPlace" type="text" formControlName="unloading_place" (change)="getIndex(i)" class="form-control" #searchUnloadingPlace /> \n    </div>\n    <!-- <hr>\n    <br> -->\n\n\n        <br>\n\n    <!-- <div class="form-group">\n        <label class=" label">Unloading Place </label> \n        <input name="unloading_place" type="text" formControlName="unloading_place" class="form-control" /> \n      </div> -->\n\n      <div class="form-group">\n        <label class=" label">Delivery Date</label> \n        <ion-item class="form-control">\n          <ion-datetime name="delivery_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="delivery_date"></ion-datetime>\n        </ion-item>\n      </div>\n  \n      <div class="form-group">\n        <label class=" label">Material </label> \n        <!-- <input name="material" type="text" formControlName="material" class="form-control" />  -->\n        <select class="form-control drop-down" name="material" formControlName="material" >\n          <option value="">Select Material</option>\n          <option *ngFor="let m of materialsArray" [ngValue]="m">{{m}}</option>\n        </select>\n      </div>\n  \n      <div class="form-group">\n        <label class=" label">Ton</label> \n        <input name="ton" type="text" formControlName="ton" class="form-control" /> \n      </div>\n  \n      <div class="form-group">\n        <label class=" label">Truck Type </label> \n        <!-- <input name="truck_type" type="text" formControlName="truck_type" class="form-control" />  -->\n        <select class="form-control drop-down" name="truck_type" formControlName="truck_type" (change)="getCapacity()"  >\n          <option value="">Select Truck Type</option>\n          <option *ngFor="let t of types" [ngValue]="t.value">{{t.name}}</option>\n        </select>\n      </div>\n  \n      <div class="form-group">\n        <label class=" label">Capacity (Ton)</label> \n        <!-- <input name="capacity" type="text" formControlName="capacity" class="form-control" />  -->\n        <select class="form-control drop-down" name="capacity" formControlName="capacity"  >\n          <option value="">Select Truck Capacity</option>\n          <option *ngFor="let c of capacity" [ngValue]="c.value">{{c.name}}</option>\n        </select>\n      </div>\n  \n      <div class="form-group">\n        <label class=" label">Rate </label> \n        <input name="rate" type="number" formControlName="rate" class="form-control" /> \n      </div>\n  \n      <div class="form-group">\n        <label class=" label">Payment Mode</label> \n        <!-- <input name="payment_mode" type="text" formControlName="payment_mode" class="form-control" />  -->\n        <select class="form-control drop-down" name="payment_mode" formControlName="payment_mode" placeholder="Select Payment Mode"  >\n          <option value="">Select Payment Mode</option>\n          <option *ngFor="let p of paymentModes" [ngValue]="p">{{p}}</option>\n        </select>\n      </div>\n  \n      <div class="form-group">\n        <label class=" label">Advance</label> \n        <input name="advance" type="number" formControlName="advance" class="form-control" /> \n      </div>\n\n      <div class="form-group">\n        <label class=" label">Late Delivery Amount</label> \n        <input name="late_delivery_amount" type="number" formControlName="late_delivery_amount" class="form-control" /> \n      </div>\n  \n      <div class="form-group">\n        <label class=" label">Detention Amount</label> \n        <input name="detention_amount" type="number" formControlName="detention_amount" class="form-control" /> \n      </div>\n\n      <div class="form-group">\n        <label class=" label">Status <span style="color:red">*</span></label>\n        <select class="form-control drop-down" name="status" (change)="getCancel()" formControlName="status"  >\n          <option value="">Select Status</option>\n          <option *ngFor="let st of statuses" [ngValue]="st">{{st}}</option>\n        </select>\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.status.invalid && (editForm.controls.status.dirty || editForm.controls.status.touched))">\n        <div *ngIf="editForm.controls[\'status\'].hasError(\'required\')">\n          <label>Status is required.</label>\n        </div>\n      </div>\n\n      <div *ngIf="cancelFlag" class="form-group">\n        <div *ngFor="let cr of cancelReasons; let j = index;" padding>\n          <div *ngIf="cr.flag">\n            <input type="checkbox" checked="{{cr.flag}}" value="cr.name" (change)="addCancel($event, cr.name, a)"> &nbsp;{{ cr.name }}\n          </div>\n          <div *ngIf="!cr.flag">\n              <input type="checkbox" value="cr.name" (change)="addCancel($event, cr.name, j)"> &nbsp;{{ cr.name }}\n          </div>\n        </div> \n      </div>\n\n      <!-- <div class="form-group">\n        <label class=" label mg-top-13">Salesman </label> \n        <input type="text" formControlName="salesman" class="form-control" />\n      </div> -->\n\n      <div class="form-group">\n        <label class=" label">Salesman <span style="color:red">*</span></label>\n        <select class="form-control drop-down" name="salesman" formControlName="salesman" >\n          <option value="">Select Salesman</option>\n          <option *ngFor="let sml of salesmanList" [ngValue]="sml">{{sml}}</option>\n        </select>\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.salesman.invalid && (editForm.controls.salesman.dirty || editForm.controls.salesman.touched))">\n        <div *ngIf="editForm.controls[\'salesman\'].hasError(\'required\')">\n          <label>Salesman is required.</label>\n        </div>\n      </div>\n    \n\n    <div padding>\n      <button ion-button block size="large" (click)="update(editForm.valid)" type="button" type="submit" expand="block"><ion-icon name="create"></ion-icon>&nbsp;&nbsp;Update Post Load</button>\n    </div>\n\n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-post-load\edit-post-load\edit-post-load.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* ToastController */],
            __WEBPACK_IMPORTED_MODULE_7__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_8__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_11__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"],
            __WEBPACK_IMPORTED_MODULE_13__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], EditPostLoadPage);
    return EditPostLoadPage;
}());

//# sourceMappingURL=edit-post-load.js.map

/***/ }),

/***/ 456:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditDealFinalNewPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__manage_deal_final_new__ = __webpack_require__(109);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__helpers_common__ = __webpack_require__(31);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the EditDealFinalNewPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditDealFinalNewPage = /** @class */ (function () {
    function EditDealFinalNewPage(navCtrl, navParams, loader, toast, fb, requestLoad, events, trucks, admin, mapsAPILoader, ngZone) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.events = events;
        this.trucks = trucks;
        this.admin = admin;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.toDate = new Date().toISOString();
        this.dealFlag = true;
        this.advanceFlag = false;
        this.calculations = ['Fixed', 'Actual Weight', 'Truck Capacity'];
        this.Party_Category = ['Company', 'Transporter'];
        this.PAYMENT_TYPES = ['Receivable Advance', 'Receivalbe Freight', 'Payable Advance', 'Payable Freight'];
        this.capacity = [];
        this.truckCapacity = "";
        this.mainAccoutsList = [];
        this.mainAdvanceAmountArray = [];
        this.agencyPercentage = 0;
        this.indianaTruckingPercentage = 0;
        this.investorPercentage = 0;
        this.investorName = "";
        this.cancelDealFlag = false;
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        this.editForm = fb.group({
            agency_name: [''],
            deal_no: [''],
            deal_date: [''],
            from: [''],
            to: [''],
            loading_place: [''],
            unloading_place: [''],
            weight_company: [''],
            payment_mode: [''],
            dispatch_date: [''],
            delivery_date: [''],
            late_delivery_amount: [''],
            detention_amount: [''],
            company_salesman: [''],
            user_name: [''],
            transporter_ticket_no: [''],
            transporter_name: [''],
            transporter_rates: [''],
            truck_no: [''],
            truck_type: [''],
            truck_capacity: [''],
            transporter_actual_weight: [''],
            transporter_rates_calculation: [''],
            transporter_freight: [''],
            transporter_advance: [''],
            transporter_salesman: [''],
            transporter_labour_charges: [''],
            transporter_mamul: [''],
            transporter_payment_charge: [''],
            transporter_tds: [''],
            company_ticket_no: [''],
            company_name: [''],
            company_rates: [''],
            company_advance: [''],
            company_labour_charges: [''],
            company_mamul: [''],
            company_payment_charge: [''],
            company_tds: [''],
            transporter_commission: [''],
            company_commission: [''],
            destination_1: [''],
            destination_2: [''],
            ackwnoldgement_due_date: [''],
        });
        this.dealFinalDetails = this.navParams.get('data');
        this.editForm.controls['agency_name'].setValue(this.dealFinalDetails.agency_name);
        this.editForm.controls['deal_no'].setValue(this.dealFinalDetails.deal_no);
        this.editForm.controls['deal_date'].setValue(this.dealFinalDetails.deal_date);
        this.editForm.controls['from'].setValue(this.dealFinalDetails.from);
        this.editForm.controls['to'].setValue(this.dealFinalDetails.to);
        this.editForm.controls['loading_place'].setValue(this.dealFinalDetails.loading_place);
        this.editForm.controls['unloading_place'].setValue(this.dealFinalDetails.unloading_place);
        this.editForm.controls['weight_company'].setValue(this.dealFinalDetails.weight_company);
        this.editForm.controls['payment_mode'].setValue(this.dealFinalDetails.payment_mode);
        this.editForm.controls['dispatch_date'].setValue(this.dealFinalDetails.dispatch_date);
        this.editForm.controls['delivery_date'].setValue(this.dealFinalDetails.delivery_date);
        this.editForm.controls['late_delivery_amount'].setValue(this.dealFinalDetails.late_delivery_amount);
        this.editForm.controls['detention_amount'].setValue(this.dealFinalDetails.detention_amount);
        this.editForm.controls['company_salesman'].setValue(this.dealFinalDetails.company_salesman);
        this.editForm.controls['user_name'].setValue(this.dealFinalDetails.user_name);
        this.editForm.controls['transporter_ticket_no'].setValue(this.dealFinalDetails.transporter_ticket_no);
        this.editForm.controls['transporter_name'].setValue(this.dealFinalDetails.transporter_name);
        this.editForm.controls['transporter_rates'].setValue(this.dealFinalDetails.transporter_rates);
        this.editForm.controls['truck_no'].setValue(this.dealFinalDetails.truck_no);
        this.editForm.controls['truck_type'].setValue(this.dealFinalDetails.truck_type);
        this.editForm.controls['truck_capacity'].setValue(this.dealFinalDetails.truck_capacity);
        this.editForm.controls['transporter_actual_weight'].setValue(this.dealFinalDetails.transporter_actual_weight);
        this.editForm.controls['transporter_rates_calculation'].setValue(this.dealFinalDetails.transporter_rates_calculation);
        this.editForm.controls['transporter_freight'].setValue(this.dealFinalDetails.transporter_freight);
        this.editForm.controls['transporter_advance'].setValue(this.dealFinalDetails.transporter_advance);
        this.editForm.controls['transporter_salesman'].setValue(this.dealFinalDetails.transporter_salesman);
        this.editForm.controls['company_ticket_no'].setValue(this.dealFinalDetails.company_ticket_no);
        this.editForm.controls['company_name'].setValue(this.dealFinalDetails.company_name);
        this.editForm.controls['company_rates'].setValue(this.dealFinalDetails.company_rates);
        this.editForm.controls['company_advance'].setValue(this.dealFinalDetails.company_advance);
        this.editForm.controls['transporter_commission'].setValue(this.dealFinalDetails.transporter_commission);
        this.editForm.controls['company_commission'].setValue(this.dealFinalDetails.company_commission);
        this.editForm.controls['transporter_labour_charges'].setValue(this.dealFinalDetails.transporter_labour_charges);
        this.editForm.controls['transporter_mamul'].setValue(this.dealFinalDetails.transporter_mamul);
        this.editForm.controls['transporter_payment_charge'].setValue(this.dealFinalDetails.transporter_payment_charge);
        this.editForm.controls['transporter_tds'].setValue(this.dealFinalDetails.transporter_tds);
        this.editForm.controls['company_labour_charges'].setValue(this.dealFinalDetails.company_labour_charges);
        this.editForm.controls['company_mamul'].setValue(this.dealFinalDetails.company_mamul);
        this.editForm.controls['company_payment_charge'].setValue(this.dealFinalDetails.company_payment_charge);
        this.editForm.controls['company_tds'].setValue(this.dealFinalDetails.company_tds);
        this.editForm.controls['destination_1'].setValue(this.dealFinalDetails.destination_1);
        this.editForm.controls['destination_2'].setValue(this.dealFinalDetails.destination_2);
        this.editForm.controls['ackwnoldgement_due_date'].setValue(this.dealFinalDetails.ackwnoldgement_due_date);
        this.getPostLoadById();
        this.getRequestLoadById();
        this.getAgencyListByName();
    }
    EditDealFinalNewPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditDealFinalNewPage');
    };
    EditDealFinalNewPage.prototype.ngOnInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var presentCity = new google.maps.places.Autocomplete(_this.searchElementRef.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentCity.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_13__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_13__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('Destination1').value = pre_city;
                        _this.editForm.controls['destination_1'].setValue(pre_city);
                    });
                });
                var presentState = new google.maps.places.Autocomplete(_this.searchElementRef2.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentState.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentState.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_13__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_13__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('Destination2').value = pre_city;
                        _this.editForm.controls['destination_2'].setValue(pre_city);
                    });
                });
            });
        }, 1000);
    };
    EditDealFinalNewPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__home_home__["a" /* HomePage */]);
    };
    EditDealFinalNewPage.prototype.isReadonly = function () {
        return this.isReadonly; //return true/false 
    };
    EditDealFinalNewPage.prototype.cancelDeal = function (event) {
        if (event.target.checked) {
            this.cancelDealFlag = true;
            console.log("cancelDealFlag >>", this.cancelDealFlag);
        }
        else {
            this.cancelDealFlag = false;
            console.log("cancelDealFlag >>", this.cancelDealFlag);
        }
    };
    EditDealFinalNewPage.prototype.getRequestLoadById = function () {
        var _this = this;
        // this.loader.show();
        this.requestLoad.getRequestLoadIdByTicketNo(this.editForm.value.transporter_ticket_no).subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                _this.admin.getTruckData(dataList[0].truck_no).subscribe(function (res) {
                    // this.loader.hide();
                    var truckData = res.json();
                    var truckDetails = truckData.result;
                    console.log("dataList >>>>", dataList);
                    console.log("truckDetails >>>>", truckDetails);
                    _this.editForm.controls['truck_no'].setValue(dataList[0].truck_no ? dataList[0].truck_no : "");
                    _this.editForm.controls['transporter_name'].setValue(dataList[0].transporter_name ? dataList[0].transporter_name : "");
                    _this.editForm.controls['truck_type'].setValue(truckDetails[0].type);
                    _this.truckCapacity = truckDetails[0].capacity;
                    _this.transporterTruckType = truckDetails[0].type;
                    _this.transporterId = truckDetails[0]._id;
                    console.log("this.transporterId >>>>", _this.transporterId);
                    _this.getCapacity();
                    // this.editForm.controls['transporter_salesman'].setValue(dataList[0].salesman ? dataList[0].salesman: "");
                    // this.requestLoadID = dataList[0]._id;
                }, function (err) {
                    _this.loader.hide();
                    console.log(">>>>error", err);
                });
            }
            else {
                _this.loader.hide();
            }
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    EditDealFinalNewPage.prototype.getPostLoadById = function () {
        var _this = this;
        // this.loader.show();
        this.requestLoad.getPostLoadIdByTicketNo(this.editForm.value.company_ticket_no).subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                _this.postLoadId = dataList[0]._id;
                console.log("this.postLoadId >>>>", _this.postLoadId);
            }
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    EditDealFinalNewPage.prototype.getAgencyListByName = function () {
        var _this = this;
        var getFormData = this.editForm.value;
        var agencyName = getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name;
        // console.log("in getAgencyListByName >>>>");
        this.admin.getAgencyListByName(agencyName).subscribe(function (res) {
            var data = res.json();
            var agencyData = data.results;
            if (agencyData[0]) {
                _this.agencyId = agencyData[0]._id;
                _this.investorName = agencyData[0].investor_name;
                _this.agencyPercentage = agencyData[0].agency_percentage;
                _this.indianaTruckingPercentage = agencyData[0].indiana_trucking_percentage;
                _this.investorPercentage = agencyData[0].investor_percentage;
            }
            console.log("agencyId  >>>>", _this.agencyId);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditDealFinalNewPage.prototype.getCapacity = function () {
        var _this = this;
        var ttype = this.transporterTruckType;
        this.trucks.getCapacityOfTruck().subscribe(function (res) {
            var data = res.json();
            console.log('res >>>>>>> ', res);
            _this.capacity = [];
            data.results.forEach(function (r) {
                if (r.type == ttype) {
                    r.capacity.forEach(function (a) {
                        var obj = {
                            "name": a.ton,
                            "value": a.ton,
                        };
                        _this.capacity.push(obj);
                    });
                }
            });
            _this.editForm.controls['truck_capacity'].setValue(_this.truckCapacity);
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    EditDealFinalNewPage.prototype.addCalculation = function () {
        var getFormData = this.editForm.value;
        var rateCalculation = getFormData.transporter_rates_calculation;
        var transporterRates = getFormData.transporter_rates ? getFormData.transporter_rates : 0;
        var weightCompany = getFormData.weight_company ? getFormData.weight_company : 0;
        var actualWeight = getFormData.transporter_actual_weight ? getFormData.transporter_actual_weight : 0;
        var freightTotal = 0;
        // calculations = ['Fixed', 'Actual Weight', 'Truck capacity'];
        if (rateCalculation == "Fixed") {
            freightTotal = transporterRates;
        }
        if (rateCalculation == "Actual Weight") {
            freightTotal = transporterRates * actualWeight;
        }
        if (rateCalculation == "Truck Capacity") {
            freightTotal = transporterRates * weightCompany;
        }
        this.editForm.controls['transporter_freight'].setValue(freightTotal);
    };
    EditDealFinalNewPage.prototype.advanceAmountAddInArray = function () {
        // var srno; 
        // this.mainAccoutsList.forEach(element => {
        //   if (element.account_name == this.editForm.value.transporter_account_name) {
        //     srno = element.srno;
        //   }
        // });
        var obj = {
            "advance_account_name": this.editForm.value.advance_account_name,
            "amount": this.editForm.value.amount,
            "remarks": this.editForm.value.remarks,
        };
        this.mainAdvanceAmountArray.push(obj);
        this.editForm.controls['advance_account_name'].setValue('');
        this.editForm.controls['amount'].setValue('');
        this.editForm.controls['remarks'].setValue('');
    };
    EditDealFinalNewPage.prototype.advanceAmountRemoveInArray = function (index) {
        this.mainAdvanceAmountArray.splice(index, 1);
        console.log("array >>>", this.mainAdvanceAmountArray);
    };
    EditDealFinalNewPage.prototype.update = function () {
        var _this = this;
        if (this.cancelDealFlag) {
            // ------>> Update Post Load 
            var postLoadObj = { "status": "Cancel" };
            this.requestLoad.updatePostLoadStatus(this.postLoadId, postLoadObj).subscribe(function (res) {
                // ------>> Update Request Load 
                var requestLoadObj = { "status": "Cancel" };
                _this.requestLoad.updateRequestLoadStatus(_this.transporterId, requestLoadObj).subscribe(function (res) {
                    _this.toast.error({ 'message': 'Cancel Deal Final..!' });
                }, function (err) {
                    console.log(">>>>>Err", err);
                    _this.toast.error({ 'message': 'Something went wrong.' });
                });
            }, function (err) {
                console.log(">>>>>Err", err);
                _this.toast.error({ 'message': 'Something went wrong.' });
            });
        }
        else {
            var getFormData = this.editForm.value;
            var obj = {
                'agency_name': getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
                'deal_no': getFormData.deal_no,
                'deal_date': getFormData.deal_date,
                'from': getFormData.from,
                'to': getFormData.to,
                'loading_place': getFormData.loading_place,
                'unloading_place': getFormData.unloading_place,
                'weight_company': getFormData.weight_company,
                'payment_mode': getFormData.payment_mode,
                'dispatch_date': getFormData.dispatch_date,
                'delivery_date': getFormData.delivery_date,
                'late_delivery_amount': getFormData.late_delivery_amount,
                'detention_amount': getFormData.detention_amount,
                'company_salesman': getFormData.company_salesman,
                'user_name': getFormData.user_name,
                'transporter_ticket_no': getFormData.transporter_ticket_no,
                'transporter_name': getFormData.transporter_name,
                'transporter_rates': getFormData.transporter_rates,
                'truck_no': getFormData.truck_no,
                'truck_type': getFormData.truck_type,
                'truck_capacity': getFormData.truck_capacity,
                'transporter_actual_weight': getFormData.transporter_actual_weight,
                'transporter_rates_calculation': getFormData.transporter_rates_calculation,
                'transporter_freight': getFormData.transporter_freight,
                'transporter_advance': getFormData.transporter_advance,
                'company_ticket_no': getFormData.company_ticket_no,
                'company_name': getFormData.company_name,
                'company_rates': getFormData.company_rates,
                'company_advance': getFormData.company_advance,
                // 'advance_date': getFormData.advance_date,
                // 'party_category': getFormData.party_category,
                // 'account_name': getFormData.account_name,
                // 'payment_type': getFormData.payment_type,
                // 'advance_account_name': getFormData.advance_account_name,
                // 'amount': getFormData.amount,
                // 'remarks': getFormData.remarks,
                // 'advance_amount': this.mainAdvanceAmountArray
                "transporter_commission": getFormData.transporter_commission,
                "company_commission": getFormData.company_commission,
                "transporter_labour_charges": getFormData.transporter_labour_charges,
                "transporter_mamul": getFormData.transporter_mamul,
                "transporter_payment_charge": getFormData.transporter_payment_charge,
                "transporter_tds": getFormData.transporter_tds,
                "company_labour_charges": getFormData.company_labour_charges,
                "company_mamul": getFormData.company_mamul,
                "company_payment_charge": getFormData.company_payment_charge,
                "company_tds": getFormData.company_tds,
                "destination_1": getFormData.destination_1,
                "destination_2": getFormData.destination_2,
                "ackwnoldgement_due_date": getFormData.ackwnoldgement_due_date,
            };
            this.loader.show();
            // // ------>> Update Post Load 
            // var postLoadObj = {"status": "Deal Final"};
            // this.requestLoad.updatePostLoadStatus(this.postLoadId, postLoadObj).subscribe(res => {
            //   console.log("Updated Post Load>>>>>");
            // }, err => {
            //   console.log(">>>>>Err", err);
            //   this.toast.error({ 'message': 'Something went wrong.' });
            // });
            // // ------>> Update Request Load 
            // var requestLoadObj = {"status": "Deal Final"};
            // this.requestLoad.updateRequestLoadStatus(this.transporterId, requestLoadObj).subscribe(res => {
            //   console.log("Updated Request Load>>>>>");
            // }, err => {
            //   console.log(">>>>>Err", err);
            //   this.toast.error({ 'message': 'Something went wrong.' });
            // });
            // Delete Accounts Ledger Records
            var df_document_type = "DF";
            this.requestLoad.deleteAccountsLedger(this.dealFinalDetails.deal_no, df_document_type).subscribe(function (res) {
                _this.requestLoad.updateDealFinalNew(_this.dealFinalDetails._id, obj).subscribe(function (res) {
                    // var data = res.json(); 
                    var accountsLedgerArray = [];
                    var agencyName = getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name;
                    var agencyId = _this.agencyId;
                    var companyBranchName = getFormData.company_name;
                    var companyBranchId = _this.postLoadId;
                    var transporterBranchName = getFormData.transporter_name;
                    var transporterBranchId = _this.transporterId;
                    var truckNo = getFormData.truck_no;
                    var srNo = _this.dealFinalDetails.deal_no;
                    var dealId = _this.dealFinalDetails._id;
                    var userName = localStorage.getItem('user_name');
                    var userId = localStorage.getItem('user_id');
                    // 'To Pay', 'To Be Billed', 'Advance To Pay', 'Advance Pod';
                    if (getFormData.payment_mode == 'To Be Billed') {
                        // 1        
                        var companyMainDebit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": agencyName + " TPT Charges",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.company_rates,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainDebit);
                        // 2        
                        var companyMainCredit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.company_rates,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainCredit);
                        // 3        
                        var companyMainCredit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": companyBranchName + " TPT Income",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.company_rates,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainCredit2);
                        // 4        
                        var companyMainDebit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": companyBranchName + " Unbilled A/c.",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.company_rates,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainDebit2);
                        // 5       
                        var transporterMainCredit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": agencyName + " TPT Income",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.transporter_freight,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainCredit);
                        // 6       
                        var transporterMainDebit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.transporter_freight,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainDebit);
                        // 7    
                        var transporterMainDebit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": transporterBranchName + " TPT Charges",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.transporter_freight,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainDebit2);
                        // 8   
                        var transporterMainCredit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": truckNo,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.transporter_freight,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainCredit2);
                    }
                    if (getFormData.payment_mode == 'To Pay') {
                        // 1        
                        var companyMainDebit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": agencyName + " TPT Charges",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.company_rates,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainDebit);
                        // 2        
                        var companyMainCredit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.company_rates,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainCredit);
                        // 3        
                        var companyMainCredit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": companyBranchName + " TPT Income",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.company_rates,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainCredit2);
                        // 4        
                        var companyMainDebit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": companyBranchName + " Billed A/c.",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.company_rates,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainDebit2);
                        // 5       
                        var transporterMainCredit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": agencyName + " TPT Income",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.transporter_freight,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainCredit);
                        // 6       
                        var transporterMainDebit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.transporter_freight,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainDebit);
                        // 7    
                        var transporterMainDebit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": transporterBranchName + " TPT Charges",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.transporter_freight,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainDebit2);
                        // 8   
                        var transporterMainCredit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": truckNo,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.transporter_freight,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainCredit2);
                    }
                    if (getFormData.payment_mode == 'Advance Pod') {
                        // 1        
                        var companyMainDebit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": agencyName + " TPT Charges",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.company_rates,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainDebit);
                        // 2        
                        var companyMainCredit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.company_rates,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainCredit);
                        // 3        
                        var companyMainCredit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": companyBranchName + " TPT Income",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.company_rates,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainCredit2);
                        // 4        
                        var companyMainDebit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": companyBranchName + " Billed A/c.",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.company_rates,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainDebit2);
                        // 5       
                        var transporterMainCredit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": agencyName + " TPT Income",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.transporter_freight,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainCredit);
                        // 6       
                        var transporterMainDebit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.transporter_freight,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainDebit);
                        // 7    
                        var transporterMainDebit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": transporterBranchName + " TPT Charges",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.transporter_freight,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainDebit2);
                        // 8   
                        var transporterMainCredit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": truckNo,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.transporter_freight,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainCredit2);
                    }
                    if (getFormData.payment_mode == 'Advance To Pay') {
                        // 1        
                        var companyMainDebit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": agencyName + " TPT Charges",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.company_rates,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainDebit);
                        // 2        
                        var companyMainCredit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.company_rates,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainCredit);
                        // 3        
                        var companyMainCredit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": companyBranchName + " TPT Income",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.company_rates,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainCredit2);
                        // 4        
                        var companyMainDebit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": companyBranchName + " Billed A/c.",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.company_rates,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainDebit2);
                        // 5       
                        var transporterMainCredit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": agencyName + " TPT Income",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.transporter_freight,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainCredit);
                        // 6       
                        var transporterMainDebit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.transporter_freight,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainDebit);
                        // 7    
                        var transporterMainDebit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": transporterBranchName + " TPT Charges",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.transporter_freight,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainDebit2);
                        // 8   
                        var transporterMainCredit2 = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": truckNo,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.transporter_freight,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainCredit2);
                    }
                    // **************** Commission ******************
                    if (getFormData.transporter_commission) {
                        var mainDebit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": "Commission A/c.",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.transporter_commission,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(mainDebit);
                        var mainCredit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": "Commission A/c.",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "Commission Deducted Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": getFormData.transporter_commission,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(mainCredit);
                        var investorCr = (getFormData.transporter_commission * _this.investorPercentage) / 100;
                        var indianaTruckingCr = (getFormData.transporter_commission * _this.indianaTruckingPercentage) / 100;
                        var agencyCr = (getFormData.transporter_commission * _this.agencyPercentage) / 100;
                        var commissionAccountName = "";
                        if (getFormData.payment_mode == 'To Pay') {
                            commissionAccountName = "Receipt " + transporterBranchName;
                        }
                        else {
                            commissionAccountName = truckNo;
                        }
                        // Add Commission Debit
                        var commissionDebitObj = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": commissionAccountName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.transporter_commission,
                            "credit_amount": 0,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(commissionDebitObj);
                        // Add Investor Name
                        var investorObj = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": _this.investorName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": investorCr,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(investorObj);
                        // Add indiana Trucking
                        var indianaTruckingObj = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": "Indiana Trucking Commission",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": indianaTruckingCr,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(indianaTruckingObj);
                        // Add indiana Trucking
                        var agencyObj = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": agencyName + " Commission",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": 0,
                            "credit_amount": agencyCr,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(agencyObj);
                    }
                    // this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe((res: any) => {
                    _this.loader.hide();
                    _this.mainAdvanceAmountArray = [];
                    _this.editForm.reset();
                    _this.toast.show({ 'message': 'Updated successfully.' });
                    _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_11__manage_deal_final_new__["a" /* ManageDealFinalNewPage */]);
                    // }, err => {
                    //   this.loader.hide();
                    //   this.toast.error({ 'message': 'Something went wrong.' });
                    //   console.log(">>>>>Err", err);
                    // });
                }, function (err) {
                    _this.loader.hide();
                    _this.toast.error({ 'message': 'Something went wrong.' });
                    console.log(">>>>>Err", err);
                });
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditDealFinalNewPage.prototype, "searchElementRef", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search2"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditDealFinalNewPage.prototype, "searchElementRef2", void 0);
    EditDealFinalNewPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-deal-final-new',template:/*ion-inline-start:"D:\truck\src\pages\manage-deal-final-new\edit-deal-final-new\edit-deal-final-new.html"*/'<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit Deal Final New</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="editForm" novalidate>\n    <!-- ----------- Deal Final -------------- -->\n    <div *ngIf="dealFlag">\n\n      <ion-row>\n        <ion-col col-3 class="label-font">\n          <label >Agency Name </label> \n        </ion-col>\n\n        <ion-col col-9>\n          <div class="form-group">\n            <input\n            class="form-control"\n            ng2-auto-complete\n            [source]="agencyName.bind(this)"\n            list-formatter="agency_name"\n            formControlName="agency_name"     \n            (change)="getAgencyListByName()"  \n          />\n          </div>\n        </ion-col>\n\n        <!-- 1 -->\n        <ion-col col-3 class="label-font">\n          <span>\n            <label class="label">DF No. </label> \n          </span>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="deal_no" [readonly]="isReadonly()" type="number" formControlName="deal_no" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-3  class="label-font">\n          <label class="label">Posting Date </label> \n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <ion-item class="form-control">\n              <ion-datetime name="deal_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="deal_date"></ion-datetime>\n            </ion-item>\n          </div>\n        </ion-col>\n\n\n        <!-- 2 -->\n        <ion-col col-3 class="label-font">\n          <span>\n            <label class="label">From </label> \n          </span>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="from" type="text" [readonly]="isReadonly()" formControlName="from" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-3  class="label-font">\n          <label class="label">To </label> \n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="to" type="text" [readonly]="isReadonly()" formControlName="to" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <!-- 3 -->\n        <ion-col col-3 class="label-font">\n          <span>\n            <label class="label">Loading Place </label> \n          </span>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="loading_place" [readonly]="isReadonly()" type="text" formControlName="loading_place" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-3  class="label-font">\n          <label class="label">Unloading Place </label> \n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="unloading_place" [readonly]="isReadonly()" type="text" formControlName="unloading_place" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <!-- 4 -->\n        <ion-col col-3 class="label-font">\n          <span>\n            <label class="label">Weight </label> \n          </span>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="weight_company" type="number" [readonly]="isReadonly()" formControlName="weight_company" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-3  class="label-font">\n          <label class="label">Dispatch Date </label> \n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <ion-item class="form-control">\n              <ion-datetime name="dispatch_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="dispatch_date"></ion-datetime>\n            </ion-item>\n          </div>\n        </ion-col>\n        \n        <!-- 5 -->\n        <ion-col col-3 class="label-font">\n          <span>\n            <label class="label">Payment Mode </label> \n          </span>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="payment_mode" [readonly]="isReadonly()" type="text" formControlName="payment_mode" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-3  class="label-font">\n          <label class="label">Delivery Date </label> \n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <ion-item class="form-control">\n              <ion-datetime name="delivery_date"  display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="delivery_date"></ion-datetime>\n            </ion-item>\n          </div>\n        </ion-col>\n\n        <!-- 6 -->\n        <ion-col col-3 class="label-font">\n          <span>\n            <label class="label">Late Delivery Amount </label> \n          </span>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="late_delivery_amount" type="number" formControlName="late_delivery_amount" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-3  class="label-font">\n          <label class="label">Detention Amount</label> \n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="detention_amount" type="number" formControlName="detention_amount" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <!-- 7 -->\n        <ion-col col-3 class="label-font">\n          <span>\n            <label class="label">Salesman </label> \n          </span>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="company_salesman" [readonly]="isReadonly()" type="text" formControlName="company_salesman" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-3  class="label-font">\n          <label class="label">User Name</label> \n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="user_name" [readonly]="isReadonly()" type="text" formControlName="user_name" class="form-control" /> \n          </div>\n        </ion-col>\n\n      </ion-row>\n\n\n      <br>\n      <ion-row>\n\n        <ion-col col-4 class="label-font">\n          <label class="label"><b>Transporter</b></label> \n        </ion-col>\n\n        <ion-col col-4  class="label-font">\n          <!-- <label class="label">User Name</label>  -->\n        </ion-col>\n\n        <ion-col col-4 class="label-font">\n          <label class="label"><b>Company</b></label> \n        </ion-col>\n        <br>\n\n\n        <!-- 1 -->\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="transporter_ticket_no" (change)="getRequestLoadById()" type="number" formControlName="transporter_ticket_no" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class=label-font-center>\n          <label class="label">Ticket No</label> \n        </ion-col>\n\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="company_ticket_no" [readonly]="isReadonly()" type="number" formControlName="company_ticket_no" class="form-control" /> \n          </div> \n        </ion-col>\n\n        <!-- 2 -->\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="transporter_name" [readonly]="isReadonly()" type="text" formControlName="transporter_name" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Name</label> \n        </ion-col>\n\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="company_name" [readonly]="isReadonly()" type="text" formControlName="company_name" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <!-- 3 -->\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="transporter_rates" [readonly]="isReadonly()" type="number" formControlName="transporter_rates" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Rates</label> \n        </ion-col>\n\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="company_rates" [readonly]="isReadonly()" type="number" formControlName="company_rates" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <!-- 4 -->\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="truck_no" [readonly]="isReadonly()" type="text" formControlName="truck_no" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Truck No</label> \n        </ion-col>\n\n        <ion-col col-4>\n        </ion-col>\n\n        <!-- 5 -->\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="truck_type" [readonly]="isReadonly()" type="text" formControlName="truck_type" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Truck Type</label> \n        </ion-col>\n\n        <ion-col col-4>\n        </ion-col>\n\n        <!-- 6 -->\n        <ion-col col-4>\n          <div class="form-group">\n              <input name="truck_capacity" [readonly]="isReadonly()" type="number" formControlName="truck_capacity" class="form-control" /> \n            <!-- <select class="form-control drop-down" formControlName="truck_capacity">\n              <option *ngFor="let c of capacity" [ngValue]="c.value">{{c.name}}</option>\n            </select>  -->\n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Truck Capacity</label> \n        </ion-col>\n\n        <ion-col col-4>\n        </ion-col>\n\n        <!-- 7 -->\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="transporter_actual_weight" type="number" formControlName="transporter_actual_weight" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Actual Weight</label> \n        </ion-col>\n\n        <ion-col col-4>\n        </ion-col>\n\n        <!-- 8 -->\n        <ion-col col-4>\n          <div class="form-group">\n            <select class="form-control drop-down" (change)="addCalculation()" name="transporter_rates_calculation" formControlName="transporter_rates_calculation"  >\n              <option value="">Select Calculation</option>\n              <option *ngFor="let cls of calculations" [ngValue]="cls">{{cls}}</option>\n            </select>\n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Rates Calculation</label> \n        </ion-col>\n\n        <ion-col col-4>\n        </ion-col>\n\n        <!-- 9 -->\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="transporter_freight" type="number" formControlName="transporter_freight" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Freight</label> \n        </ion-col>\n\n        <ion-col col-4>\n        </ion-col>\n\n        <!-- 10 -->\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="transporter_advance" type="number" formControlName="transporter_advance" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Declare Advance</label> \n        </ion-col>\n\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="company_advance" type="number" formControlName="company_advance" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4>\n          <div class="sub-form-group">\n            <input name="transporter_labour_charges" type="number" formControlName="transporter_labour_charges" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Labour Charges</label> \n        </ion-col>\n\n        <ion-col col-4>\n          <div class="sub-form-group">\n            <input name="company_labour_charges" type="number" formControlName="company_labour_charges" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <!-- 13 -->\n        <ion-col col-4>\n          <div class="sub-form-group">\n            <input name="transporter_mamul" type="number" formControlName="transporter_mamul" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Mamul</label> \n        </ion-col>\n\n        <ion-col col-4>\n          <div class="sub-form-group">\n            <input name="company_mamul" type="number" formControlName="company_mamul" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <!-- 14 -->\n        <ion-col col-4>\n          <div class="sub-form-group">\n            <input name="transporter_payment_charge" type="number" formControlName="transporter_payment_charge" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Payment Charge</label> \n        </ion-col>\n\n        <ion-col col-4>\n          <div class="sub-form-group">\n            <input name="company_payment_charge" type="number" formControlName="company_payment_charge" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <!-- 15 -->\n        <ion-col col-4>\n          <div class="sub-form-group">\n            <input name="transporter_tds" type="number" formControlName="transporter_tds" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">TDS</label> \n        </ion-col>\n\n        <ion-col col-4>\n          <div class="sub-form-group">\n            <input name="company_tds" type="number" formControlName="company_tds" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <!-- 11 -->\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="transporter_commission" type="number" formControlName="transporter_commission" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Commission</label> \n        </ion-col>\n\n        <ion-col col-4>\n          <div class="form-group">\n            <input name="company_commission" type="number" formControlName="company_commission" class="form-control" /> \n          </div>\n        </ion-col>\n\n         <!-- 16 -->\n         <ion-col col-4>\n          <div class="sub-form-group">\n            <input name="transporter_salesman" [readonly]="isReadonly()" type="text" formControlName="transporter_salesman" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-4  class="label-font-center">\n          <label class="label">Salesman</label> \n        </ion-col>\n\n        <ion-col col-4>\n          <div class="sub-form-group">\n            <input name="company_salesman" [readonly]="isReadonly()" type="text" formControlName="company_salesman" class="form-control" /> \n          </div>\n        </ion-col>\n\n      </ion-row>\n\n      <!-- </div> -->\n      <ion-row style="width: 100%;">\n\n        <!-- 17 -->\n        <ion-col col-4>\n          </ion-col>\n  \n          <ion-col col-4 class="label-font label-font-center">\n            <label class="label"><b>Ask Driver for return Load</b></label> \n          </ion-col>\n  \n          <ion-col col-4>\n          </ion-col>\n  \n          <!-- 18 -->\n          <ion-col col-4>\n            <div class="sub-form-group">\n              <input id="Destination1" name="destination_1" type="text" formControlName="destination_1" class="form-control" #search/> \n            </div>\n          </ion-col>\n  \n          <ion-col col-4 class="label-font-center">\n            <label class="label">Destination 1</label> \n          </ion-col>\n  \n          <ion-col col-4>\n          </ion-col>\n  \n          <!-- 19 -->\n          <ion-col col-4>\n            <div class="sub-form-group">\n              <input id="Destination2" name="destination_2" type="text" formControlName="destination_2" class="form-control" #search2/> \n            </div>\n          </ion-col>\n  \n          <ion-col col-4  class="label-font-center">\n            <label class="label">Destination 2</label> \n          </ion-col>\n  \n          <ion-col col-4>\n          </ion-col>\n  \n          <!-- 20 -->\n          <ion-col col-4>\n            <div class="sub-form-group">\n              <ion-item class="form-control">\n                <ion-datetime name="ackwnoldgement_due_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="ackwnoldgement_due_date"></ion-datetime>\n              </ion-item>\n            </div>\n          </ion-col>\n  \n          <ion-col col-4  class="label-font-center">\n            <label class="label">Ackwnoldgement Due Date</label> \n          </ion-col>\n  \n          <ion-col col-4>\n          </ion-col>\n  \n          <!-- 21 -->\n          <ion-col col-4>\n          </ion-col>\n  \n          <ion-col col-4>\n              <input type="checkbox" (change)="cancelDeal($event)"> &nbsp; Cancel  Deal\n          </ion-col>\n  \n          <ion-col col-4>\n          </ion-col>\n\n      </ion-row>\n\n      <br>\n      <ion-row>\n        <ion-col col-4>          \n        </ion-col>\n\n        <ion-col col-4>   \n          <button ion-button block size="large" type="submit" (click)="update()" expand="block"> Update Deal Final </button>       \n        </ion-col>\n\n        <ion-col col-4>          \n        </ion-col>\n      </ion-row>\n\n    </div>\n  </form>\n\n</ion-content>'/*ion-inline-end:"D:\truck\src\pages\manage-deal-final-new\edit-deal-final-new\edit-deal-final-new.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_8__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_6__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_5__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_3__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_2__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_12__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], EditDealFinalNewPage);
    return EditDealFinalNewPage;
}());

//# sourceMappingURL=edit-deal-final-new.js.map

/***/ }),

/***/ 457:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditDealFinalPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__manage_deal_final__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_moment__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the EditDealFinalPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditDealFinalPage = /** @class */ (function () {
    function EditDealFinalPage(navCtrl, navParams, loader, toast, fb, requestLoad, events, trucks, admin, mapsAPILoader, ngZone) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.events = events;
        this.trucks = trucks;
        this.admin = admin;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.toDate = new Date().toISOString();
        this.types = ['Request Load', 'Post Load'];
        this.statuses = ['Deal Final', 'Cancel'];
        this.calculations = ['Fixed', 'Actual Weight', 'Truck Capacity'];
        this.mainCompanyAdvance = [];
        this.mainTransporterAdvance = [];
        this.mainAccoutsList = [];
        this.mainPaymentMode = [];
        this.mainPaymentTypes = [];
        this.salesmanList = [];
        this.cancelFlag = false;
        this.mainCancelMaster = [];
        this.cancelReasons = [];
        this.dealFlag = true;
        this.companyFlag = false;
        this.transportFlag = false;
        this.transporterRatesFlag = false;
        this.driverFlag = false;
        this.agencyPercentage = 0;
        this.indianaTruckingPercentage = 0;
        this.investorPercentage = 0;
        this.investorName = "";
        this.mainRewardsLedger = [];
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Transporter Name list
        this.transporterName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTransporterName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Company no list
        this.companyName = function (keyword) {
            if (keyword) {
                return _this.requestLoad.searchCompany(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Driver Name list
        this.DriverName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchDriverName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        this.editForm = this.fb.group({
            deal_date: [''],
            agency_name: [''],
            load_type: [''],
            status: [''],
            company_ticket_no: [''],
            company_name: [''],
            from: [''],
            loading_place: [''],
            to: [''],
            unloading_place: [''],
            rates_company: [''],
            advance_company: [''],
            weight_company: [''],
            transporter_ticket_no: [''],
            truck_no: [''],
            transporter_name: [''],
            // puc: [''],
            // insurance: [''],
            truck_rates: [''],
            truck_weight: [''],
            truck_advance: [''],
            actual_weight: [''],
            freight: [''],
            driver_name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            licence_expiry: [''],
            rate_calculation: [''],
            // ---------- New -------
            user_name: [''],
            company_date: [this.toDate],
            company_payment_type: [''],
            // company_payment_mode: [''],
            company_account_name: [''],
            company_amount: [''],
            company_remarks: [''],
            transporter_date: [this.toDate],
            transporter_payment_type: [''],
            // transporter_payment_mode: [''],
            transporter_account_name: [''],
            transporter_amount: [''],
            transporter_remarks: [''],
            company_salesman: [''],
            transporter_salesman: [''],
            deal_final_salesman: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
        });
        this.getAccounts();
        this.getPaymentMode();
        this.getPaymentType();
        this.getSalesmanList();
        this.data = navParams.get('data');
        this.id = this.data._id;
        this.dealSrNo = this.data.sr_no;
        console.log("this.data >>>>>", this.data);
        this.editForm.controls['deal_date'].setValue(this.data.deal_date);
        this.editForm.controls['agency_name'].setValue(this.data.agency_name);
        this.editForm.controls['load_type'].setValue(this.data.load_type);
        this.editForm.controls['status'].setValue(this.data.status);
        this.editForm.controls['company_ticket_no'].setValue(this.data.company_ticket_no);
        this.editForm.controls['company_name'].setValue(this.data.company_name);
        this.editForm.controls['from'].setValue(this.data.from);
        this.editForm.controls['loading_place'].setValue(this.data.loading_place);
        this.editForm.controls['to'].setValue(this.data.to);
        this.editForm.controls['unloading_place'].setValue(this.data.unloading_place);
        this.editForm.controls['rates_company'].setValue(this.data.rates_company);
        this.editForm.controls['advance_company'].setValue(this.data.advance_company);
        this.editForm.controls['weight_company'].setValue(this.data.weight_company);
        this.editForm.controls['transporter_ticket_no'].setValue(this.data.transporter_ticket_no);
        this.editForm.controls['truck_no'].setValue(this.data.truck_no);
        this.editForm.controls['transporter_name'].setValue(this.data.transporter_name);
        this.editForm.controls['truck_rates'].setValue(this.data.truck_rates);
        this.editForm.controls['truck_weight'].setValue(this.data.truck_weight);
        this.editForm.controls['truck_advance'].setValue(this.data.truck_advance);
        this.editForm.controls['actual_weight'].setValue(this.data.actual_weight);
        this.editForm.controls['freight'].setValue(this.data.freight);
        this.editForm.controls['driver_name'].setValue(this.data.driver_name);
        this.editForm.controls['licence_expiry'].setValue(this.data.licence_expiry);
        this.editForm.controls['rate_calculation'].setValue(this.data.rate_calculation);
        this.editForm.controls['user_name'].setValue(this.data.user_name);
        this.editForm.controls['company_salesman'].setValue(this.data.company_salesman);
        this.editForm.controls['transporter_salesman'].setValue(this.data.transporter_salesman);
        this.editForm.controls['deal_final_salesman'].setValue(this.data.deal_final_salesman);
        if (this.editForm.value.status == "Cancel") {
            this.getCancel();
        }
        if (this.data.company_ticket_no) {
            this.getPostLoadById();
        }
        if (this.data.transporter_ticket_no) {
            this.getRequestLoadById();
        }
        this.getAgencyListByName();
    }
    EditDealFinalPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditDealFinalPage');
    };
    EditDealFinalPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_11__home_home__["a" /* HomePage */]);
    };
    EditDealFinalPage.prototype.getCancel = function () {
        var _this = this;
        console.log("Data >>>", this.editForm.value.status);
        if (this.editForm.value.status == "Cancel") {
            this.cancelFlag = true;
            this.requestLoad.getCancelReasons("Deal Final").subscribe(function (res) {
                var data = res.json();
                _this.cancelReasons = [];
                data.results.forEach(function (element) {
                    _this.cancelReasons.push({ "name": element.cancel_reason, "flag": false });
                });
                if (_this.data.cancel_reasons[0]) {
                    _this.data.cancel_reasons.forEach(function (mainElement) {
                        _this.cancelReasons.forEach(function (subElement) {
                            if (subElement.name == mainElement) {
                                subElement.flag = true;
                                _this.mainCancelMaster.push(mainElement);
                            }
                        });
                    });
                }
                console.log("Data >>>", _this.cancelReasons);
            }, function (err) {
                console.log(">>>error", err);
            });
        }
        else {
            this.cancelFlag = false;
            this.cancelReasons = [];
        }
    };
    EditDealFinalPage.prototype.addCancel = function (e, tt, ind) {
        var _this = this;
        if (e.target.checked) {
            this.mainCancelMaster.push(tt);
            this.cancelReasons[ind].flag = true;
            console.log("this.mainCancelMaster >>>>", this.mainCancelMaster);
        }
        else {
            var i = 0;
            this.mainCancelMaster.forEach(function (element) {
                if (element == tt) {
                    console.log(" IN    >>>>", i);
                    _this.mainCancelMaster.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.mainCancelMaster >>>>", this.mainCancelMaster);
        }
    };
    EditDealFinalPage.prototype.companyAddInArray = function () {
        var _this = this;
        var srno;
        this.mainAccoutsList.forEach(function (element) {
            if (element.account_name == _this.editForm.value.company_account_name) {
                srno = element.srno;
            }
        });
        var obj = {
            "company_date": this.editForm.value.company_date,
            "company_payment_type": this.editForm.value.company_payment_type,
            // "company_payment_mode": this.editForm.value.company_payment_mode, 
            "company_account_name": this.editForm.value.company_account_name,
            "company_amount": this.editForm.value.company_amount,
            "company_remarks": this.editForm.value.company_remarks,
            "date_format": __WEBPACK_IMPORTED_MODULE_13_moment__(this.editForm.value.company_date).format('DD-MM-YYYY'),
            "srno": srno
        };
        this.mainCompanyAdvance.push(obj);
        this.editForm.controls['company_date'].setValue(this.toDate);
        this.editForm.controls['company_payment_type'].setValue('');
        // this.editForm.controls['company_payment_mode'].setValue('');
        this.editForm.controls['company_account_name'].setValue('');
        this.editForm.controls['company_amount'].setValue('');
        this.editForm.controls['company_remarks'].setValue('');
    };
    EditDealFinalPage.prototype.companyRemoveInArray = function (index) {
        this.mainCompanyAdvance.splice(index, 1);
        console.log("array >>>", this.mainCompanyAdvance);
    };
    EditDealFinalPage.prototype.transporterAddInArray = function () {
        // mainTransporterAdvance mainCompanyAdvance
        var _this = this;
        var srno;
        this.mainAccoutsList.forEach(function (element) {
            if (element.account_name == _this.editForm.value.transporter_account_name) {
                srno = element.srno;
            }
        });
        var obj = {
            "transporter_date": this.editForm.value.transporter_date,
            "transporter_payment_type": this.editForm.value.transporter_payment_type,
            // "transporter_payment_mode": this.editForm.value.transporter_payment_mode, 
            "transporter_account_name": this.editForm.value.transporter_account_name,
            "transporter_amount": this.editForm.value.transporter_amount,
            "transporter_remarks": this.editForm.value.transporter_remarks,
            "date_format": __WEBPACK_IMPORTED_MODULE_13_moment__(this.editForm.value.transporter_date).format('DD-MM-YYYY'),
            "srno": srno
        };
        this.mainTransporterAdvance.push(obj);
        this.editForm.controls['transporter_date'].setValue(this.toDate);
        this.editForm.controls['transporter_payment_type'].setValue('');
        // this.editForm.controls['transporter_payment_mode'].setValue('');
        this.editForm.controls['transporter_account_name'].setValue('');
        this.editForm.controls['transporter_amount'].setValue('');
        this.editForm.controls['transporter_remarks'].setValue('');
    };
    EditDealFinalPage.prototype.transporterRemoveInArray = function (index) {
        this.mainTransporterAdvance.splice(index, 1);
        console.log("array >>>", this.mainTransporterAdvance);
    };
    EditDealFinalPage.prototype.getAccounts = function () {
        var _this = this;
        var agency_name = localStorage.getItem('agency_name');
        console.log("agency_name >>>>", agency_name);
        this.loader.show();
        this.requestLoad.getAccountsByAgency(agency_name).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            dataList.forEach(function (element) {
                _this.mainAccoutsList.push({ "srno": element.srno, "account_name": element.account_name });
            });
            console.log("mainAccoutsList >>>>", _this.mainAccoutsList);
            _this.createOldCards();
            _this.loader.hide();
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditDealFinalPage.prototype.createOldCards = function () {
        var _this = this;
        this.data.company_advance_data.forEach(function (element) {
            var srno;
            _this.mainAccoutsList.forEach(function (r) {
                if (r.account_name == element.company_account_name) {
                    srno = r.srno;
                }
            });
            element.srno = srno;
            element.date_format = __WEBPACK_IMPORTED_MODULE_13_moment__(element.company_date).format('DD-MM-YYYY');
            _this.mainCompanyAdvance.push(element);
        });
        this.data.transporter_advance_data.forEach(function (element) {
            var srno;
            _this.mainAccoutsList.forEach(function (r) {
                if (r.account_name == element.transporter_account_name) {
                    srno = r.srno;
                }
            });
            element.srno = srno;
            element.date_format = __WEBPACK_IMPORTED_MODULE_13_moment__(element.transporter_date).format('DD-MM-YYYY');
            _this.mainTransporterAdvance.push(element);
        });
        console.log("mainCompanyAdvance >>>>", this.mainCompanyAdvance);
        console.log("mainTransporterAdvance >>>>", this.mainTransporterAdvance);
    };
    EditDealFinalPage.prototype.getPaymentMode = function () {
        var _this = this;
        this.requestLoad.getPaymentModeList().subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            dataList.forEach(function (element) {
                _this.mainPaymentMode.push(element.name);
            });
            console.log("mainPaymentMode >>>>", _this.mainPaymentMode);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditDealFinalPage.prototype.getPaymentType = function () {
        var _this = this;
        this.requestLoad.getPaymentTypesList().subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            dataList.forEach(function (element) {
                _this.mainPaymentTypes.push(element.name);
            });
            console.log("mainPaymentTypes >>>>", _this.mainPaymentTypes);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditDealFinalPage.prototype.addCalculation = function () {
        var getFormData = this.editForm.value;
        var rateCalculation = getFormData.rate_calculation;
        var truckRates = getFormData.truck_rates ? getFormData.truck_rates : 0;
        var truckWeight = getFormData.truck_weight ? getFormData.truck_weight : 0;
        var actualWeight = getFormData.actual_weight ? getFormData.actual_weight : 0;
        var freightTotal = 0;
        if (rateCalculation == "Fixed") {
            freightTotal = truckRates;
        }
        if (rateCalculation == "Actual Weight") {
            freightTotal = truckRates * actualWeight;
        }
        if (rateCalculation == "Truck Capacity") {
            freightTotal = truckRates * truckWeight;
        }
        this.editForm.controls['freight'].setValue(freightTotal);
    };
    EditDealFinalPage.prototype.getRequestLoadById = function () {
        var _this = this;
        // this.loader.show();
        this.requestLoad.getRequestLoadByID(this.editForm.value.transporter_ticket_no).subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                _this.editForm.controls['truck_no'].setValue(dataList[0].truck_no ? dataList[0].truck_no : "");
                _this.editForm.controls['transporter_salesman'].setValue(dataList[0].salesman ? dataList[0].salesman : "");
                _this.editForm.controls['transporter_name'].setValue(dataList[0].transporter_name ? dataList[0].transporter_name : "");
                _this.requestLoadID = dataList[0]._id;
            }
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    EditDealFinalPage.prototype.getPostLoadById = function () {
        var _this = this;
        // this.loader.show();
        this.requestLoad.getPostLoadByID(this.editForm.value.company_ticket_no).subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            if (dataList[0]) {
                _this.editForm.controls['company_salesman'].setValue(dataList[0].salesman ? dataList[0].salesman : "");
                _this.editForm.controls['company_name'].setValue(dataList[0].company_name ? dataList[0].company_name : "");
                _this.editForm.controls['from'].setValue(dataList[0].from ? dataList[0].from : "");
                _this.editForm.controls['loading_place'].setValue(dataList[0].loading_place ? dataList[0].loading_place : "");
                if (dataList[0].destinations[0]) {
                    _this.editForm.controls['to'].setValue(dataList[0].destinations[0].to ? dataList[0].destinations[0].to : "");
                    _this.editForm.controls['unloading_place'].setValue(dataList[0].destinations[0].unloading_place ? dataList[0].destinations[0].unloading_place : "");
                }
                _this.editForm.controls['rates_company'].setValue(dataList[0].rate ? dataList[0].rate : 0);
                _this.editForm.controls['advance_company'].setValue(dataList[0].advance ? dataList[0].advance : 0);
                _this.editForm.controls['weight_company'].setValue(dataList[0].ton ? dataList[0].ton : 0);
                _this.editForm.controls['truck_weight'].setValue(dataList[0].ton ? dataList[0].ton : 0);
                _this.postLoadID = dataList[0]._id;
            }
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    EditDealFinalPage.prototype.getSalesmanList = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        this.admin.getListByAgency(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.salesmanList.push(element.first_name);
            });
            console.log("salesmanList >>>>", _this.salesmanList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditDealFinalPage.prototype.onselectDealFinalSalesman = function () {
        var _this = this;
        var getFormData = this.editForm.value;
        var i = 0;
        var truckNo = getFormData.truck_no.truck_no ? getFormData.truck_no.truck_no : getFormData.truck_no;
        if (getFormData.company_salesman) {
            console.log("In Company Salesman >>>>");
            this.admin.getRewardsByFirstName(getFormData.company_salesman).subscribe(function (res) {
                var data = res.json();
                console.log("data >>>>", data.reward_points);
                var rp = data.reward_points / 2;
                var obj = {
                    "agency_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
                    "branch": localStorage.getItem('agency_name'),
                    "agency_id": getFormData.agency_name._id,
                    "salesman": getFormData.company_salesman,
                    "truck_no": truckNo,
                    "srno": _this.data.sr_no,
                    "narration_ref_no": "Deal no " + _this.data.sr_no + " Truck no " + truckNo,
                    "document_type": "DF",
                    "debit_amount": '',
                    "credit_amount": rp,
                    "voucher_date": getFormData.deal_date,
                    "username": localStorage.getItem('user_name')
                };
                _this.mainRewardsLedger.push(obj);
            }, function (err) {
                console.log(">>>>error", err);
            });
            i = i + 1;
        }
        if (getFormData.transporter_salesman) {
            console.log("In Transporter Salesman >>>>");
            this.admin.getRewardsByFirstName(getFormData.transporter_salesman).subscribe(function (res) {
                var data = res.json();
                console.log("data >>>>", data.reward_points);
                var rp = data.reward_points / 2;
                var obj = {
                    "agency_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
                    "branch": localStorage.getItem('agency_name'),
                    "agency_id": getFormData.agency_name._id,
                    "salesman": getFormData.transporter_salesman,
                    "truck_no": truckNo,
                    "srno": _this.data.sr_no,
                    "narration_ref_no": "Deal no " + _this.data.sr_no + " Truck no " + truckNo,
                    "document_type": "DF",
                    "debit_amount": '',
                    "credit_amount": rp,
                    "voucher_date": getFormData.deal_date,
                    "username": localStorage.getItem('user_name')
                };
                _this.mainRewardsLedger.push(obj);
            }, function (err) {
                console.log(">>>>error", err);
            });
            i = i + 1;
        }
        // if (i == 0) {
        //   console.log("I 0 >>>>");
        //   this.admin.getRewardsByFirstName(getFormData.deal_final_salesman).subscribe((res: any) => {
        //     var data = res.json(); 
        //     console.log("data >>>>", data.reward_points);  
        //     var obj = {
        //       "agency_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name: getFormData.agency_name,
        //       "branch": localStorage.getItem('agency_name'),
        //       "agency_id":  getFormData.agency_name._id,
        //       "salesman": getFormData.deal_final_salesman,
        //       "truck_no": truckNo,
        //       "srno": this.max_sr_no,
        //       "narration_ref_no": "Deal no "+this.max_sr_no + " Truck no " + truckNo,
        //       "document_type": "DF",
        //       "debit_amount": '',
        //       "credit_amount": data.reward_points,
        //       "voucher_date": getFormData.deal_date,
        //       "username": localStorage.getItem('user_name')
        //     };
        //     this.mainRewardsLedger.push(obj);
        //   }, err => {
        //     console.log(">>>>error", err);
        //   });
        // } else {
        //   console.log("I More >>>>");
        //   this.admin.getRewardsByFirstName(getFormData.deal_final_salesman).subscribe((res: any) => {
        //     var data = res.json(); 
        //     console.log("data >>>>", data.reward_points);  
        //     var rp = data.reward_points / 2; 
        //     var obj = {
        //       "agency_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name: getFormData.agency_name,
        //       "branch": localStorage.getItem('agency_name'),
        //       "agency_id":  getFormData.agency_name._id,
        //       "salesman": getFormData.deal_final_salesman,
        //       "truck_no": truckNo,
        //       "srno": this.max_sr_no,
        //       "narration_ref_no": "Deal no "+this.max_sr_no + " Truck no " + truckNo,
        //       "document_type": "DF",
        //       "debit_amount": '',
        //       "credit_amount": rp,
        //       "voucher_date": getFormData.deal_date,
        //       "username": localStorage.getItem('user_name')
        //     };
        //     this.mainRewardsLedger.push(obj);
        //   }, err => {
        //     console.log(">>>>error", err);
        //   });
        // }
    };
    EditDealFinalPage.prototype.update = function (isValid) {
        var _this = this;
        // if (isValid) {
        var getFormData = this.editForm.value;
        var obj = {
            deal_date: getFormData.deal_date,
            agency_name: getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
            load_type: getFormData.load_type,
            status: getFormData.status,
            company_ticket_no: getFormData.company_ticket_no,
            company_name: getFormData.company_name.company_name ? getFormData.company_name.company_name : getFormData.company_name,
            from: getFormData.from,
            loading_place: getFormData.loading_place,
            to: getFormData.to,
            unloading_place: getFormData.unloading_place,
            rates_company: getFormData.rates_company,
            advance_company: getFormData.advance_company,
            weight_company: getFormData.weight_company,
            transporter_ticket_no: getFormData.transporter_ticket_no,
            truck_no: getFormData.truck_no.truck_no ? getFormData.truck_no.truck_no : getFormData.truck_no,
            transporter_name: getFormData.transporter_name.transport_name ? getFormData.transporter_name.transport_name : getFormData.transporter_name,
            // // puc: getFormData.puc,
            // // insurance: getFormData.insurance,
            truck_rates: getFormData.truck_rates,
            truck_weight: getFormData.truck_weight,
            truck_advance: getFormData.truck_advance,
            actual_weight: getFormData.actual_weight,
            freight: getFormData.freight,
            driver_name: getFormData.driver_name.driver_name ? getFormData.driver_name.driver_name : getFormData.driver_name,
            licence_expiry: getFormData.licence_expiry,
            rate_calculation: getFormData.rate_calculation,
            user_name: getFormData.user_name,
            transporter_advance_data: this.mainTransporterAdvance,
            company_advance_data: this.mainCompanyAdvance,
            cancel_reasons: this.mainCancelMaster,
            company_salesman: getFormData.company_salesman,
            transporter_salesman: getFormData.transporter_salesman,
            deal_final_salesman: getFormData.deal_final_salesman,
        };
        console.log("Data  >>>>", obj);
        this.loader.show();
        // ------>> Update Post Load 
        if (getFormData.company_ticket_no && getFormData.status == "Deal Final") {
            var postLoadObj = { "status": "Deal Final" };
            console.log("postLoadID >>>>>", this.postLoadID);
            this.requestLoad.updatePostLoadStatus(this.postLoadID, postLoadObj).subscribe(function (res) {
                console.log("Updated Post Load>>>>>");
            }, function (err) {
                console.log(">>>>>Err", err);
                _this.toast.error({ 'message': 'Something went wrong.' });
            });
        }
        // ------>> Update Request Load 
        if (getFormData.transporter_ticket_no && getFormData.status == "Deal Final") {
            var requestLoadObj = { "status": "Deal Final" };
            console.log("requestLoadID >>>>>", this.requestLoadID);
            this.requestLoad.updateRequestLoadStatus(this.requestLoadID, requestLoadObj).subscribe(function (res) {
                console.log("Updated Request Load>>>>>");
            }, function (err) {
                console.log(">>>>>Err", err);
                _this.toast.error({ 'message': 'Something went wrong.' });
            });
        }
        // Update Deal Final Record
        this.requestLoad.updateDealFinal(this.id, obj).subscribe(function (res) {
            // Delete Rewards Ledger Records
            _this.requestLoad.deleteRewardsLedger(_this.data.sr_no).subscribe(function (res) {
                // Add Rewards Ledger Records
                _this.requestLoad.addRewardsLedger(_this.mainRewardsLedger).subscribe(function (res) {
                    // Delete Accounts Ledger Records
                    var document_type = "DF";
                    _this.requestLoad.deleteAccountsLedger(_this.dealSrNo, document_type).subscribe(function (res) {
                        var accountsLedgerArray = [];
                        var agencyName = getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name;
                        var agencyId = getFormData.agency_name._id ? getFormData.agency_name._id : _this.agencyId;
                        var companyBranchName = getFormData.company_name.company_name ? getFormData.company_name.company_name : getFormData.company_name;
                        var companyBranchId = getFormData.company_name._id ? getFormData.company_name._id : _this.companyId;
                        var transporterBranchName = getFormData.transporter_name.transport_name ? getFormData.transporter_name.transport_name : getFormData.transporter_name;
                        var transporterBranchId = getFormData.transporter_name._id ? getFormData.transporter_name._id : _this.transporterId;
                        var truckNo = getFormData.truck_no.truck_no ? getFormData.truck_no.truck_no : getFormData.truck_no;
                        var srNo = _this.data.sr_no;
                        var dealId = _this.id;
                        var userName = localStorage.getItem('user_name');
                        var userId = localStorage.getItem('user_id');
                        // Cash / Bank  srno 1
                        // BPCL  srno 3
                        // Commission srno 4
                        // Diesal Account srno 5
                        // **************** Company ******************
                        var companyMainDebit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": "Freight Account",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.rates_company,
                            "credit_amount": '',
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainDebit);
                        var companyMainCredit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": '',
                            "credit_amount": getFormData.rates_company,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainCredit);
                        //-------------- For Credit Account ------
                        _this.mainCompanyAdvance.forEach(function (element) {
                            var mainString = "";
                            console.log("element.srno  >>>>", element.srno);
                            if (element.srno == 1) {
                                mainString = agencyName + "Advance Paid Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            if (element.srno == 5) {
                                mainString = "Diesal Paid Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            var obj = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": element.company_account_name,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": mainString,
                                "narration_ref_no": "",
                                "document_type": "DF",
                                "debit_amount": '',
                                "credit_amount": element.company_amount,
                                "voucher_date": getFormData.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(obj);
                        });
                        //-------------- For Debit Agency ------
                        _this.mainCompanyAdvance.forEach(function (element) {
                            var mainString = "";
                            if (element.srno == 1) {
                                mainString = "Advance Paid Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            if (element.srno == 5) {
                                mainString = "Diesal Paid Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            var obj = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": mainString,
                                "narration_ref_no": "",
                                "document_type": "DF",
                                "debit_amount": element.company_amount,
                                "credit_amount": '',
                                "voucher_date": getFormData.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(obj);
                        });
                        // **************** Transporter ******************
                        var transporterMainCredit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": "Freight Account",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": agencyName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": '',
                            "credit_amount": getFormData.truck_rates,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainCredit);
                        var transporterMainDebit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.truck_rates,
                            "credit_amount": '',
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainDebit);
                        //-------------- For Debit Account ------
                        _this.mainTransporterAdvance.forEach(function (element) {
                            var mainString = "";
                            if (element.srno == 1) {
                                mainString = "Advance Received from " + transporterBranchName + " Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            else if (element.srno == 5) {
                                mainString = "Diesal Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            else {
                                mainString = "Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            var transporterDebit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": element.transporter_account_name,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": mainString,
                                "narration_ref_no": "",
                                "document_type": "DF",
                                "debit_amount": element.transporter_amount,
                                "credit_amount": '',
                                "voucher_date": getFormData.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporterDebit);
                        });
                        //-------------- For Credit Agency ------
                        _this.mainTransporterAdvance.forEach(function (element) {
                            var mainString = "";
                            if (element.srno == 1) {
                                mainString = "Advance Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            if (element.srno == 4) {
                                mainString = "Commission Paid  Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            if (element.srno == 5) {
                                mainString = "Diesal Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            var transporterDebit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": mainString,
                                "narration_ref_no": "",
                                "document_type": "DF",
                                "debit_amount": '',
                                "credit_amount": element.transporter_amount,
                                "voucher_date": getFormData.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporterDebit);
                        });
                        // **************** Agency ******************
                        var AgencyMainCredit = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": transporterBranchName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": '',
                            "credit_amount": getFormData.truck_rates,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(AgencyMainCredit);
                        var AgencyMainDebit = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": companyBranchName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.truck_rates,
                            "credit_amount": '',
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(AgencyMainDebit);
                        var companyMainCreditAgain = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": "Freight Account",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": companyBranchName + "Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no. " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": '',
                            "credit_amount": getFormData.rates_company,
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(companyMainCreditAgain);
                        var transporterMainDebitAgain = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": "Freight Account",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "Freight From " + getFormData.from + " To " + getFormData.to,
                            "narration_ref_no": "",
                            "document_type": "DF",
                            "debit_amount": getFormData.truck_rates,
                            "credit_amount": '',
                            "voucher_date": getFormData.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(transporterMainDebitAgain);
                        //-------------- For Credit Company ---------
                        _this.mainCompanyAdvance.forEach(function (element) {
                            var mainString = "";
                            if (element.srno == 1) {
                                mainString = "Being Cash Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            if (element.srno == 5) {
                                mainString = "Diesal Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            var obj = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": companyBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": mainString,
                                "narration_ref_no": "",
                                "document_type": "DF",
                                "debit_amount": '',
                                "credit_amount": element.company_amount,
                                "voucher_date": getFormData.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(obj);
                        });
                        //-------------- For Debit Company Account Name ---------
                        _this.mainCompanyAdvance.forEach(function (element) {
                            var mainString = "";
                            if (element.srno == 1) {
                                mainString = "Advance Received from " + companyBranchName + "Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            if (element.srno == 5) {
                                mainString = "Diesal Paid " + transporterBranchName + " Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            var obj = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": element.company_account_name,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": mainString,
                                "narration_ref_no": "",
                                "document_type": "DF",
                                "debit_amount": element.company_amount,
                                "credit_amount": '',
                                "voucher_date": getFormData.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(obj);
                        });
                        //-------------- For Credit Transporter ---------
                        _this.mainTransporterAdvance.forEach(function (element) {
                            var mainString = "";
                            if (element.srno == 1) {
                                mainString = "Being Amount Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            if (element.srno == 4) {
                                mainString = "Commission Deducted Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            if (element.srno == 5) {
                                mainString = "Diesal Received Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            var obj = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": element.transporter_account_name,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": mainString,
                                "narration_ref_no": "",
                                "document_type": "DF",
                                "debit_amount": '',
                                "credit_amount": element.transporter_amount,
                                "voucher_date": getFormData.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(obj);
                        });
                        //-------------- For Debit Transporter Account Name ---------
                        _this.mainTransporterAdvance.forEach(function (element) {
                            var mainString = "";
                            if (element.srno == 1) {
                                mainString = "Advance Amount Paid Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            if (element.srno == 4) {
                                mainString = "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            if (element.srno == 5) {
                                mainString = "Diesal Paid Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo;
                            }
                            var obj = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": transporterBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": mainString,
                                "narration_ref_no": "",
                                "document_type": "DF",
                                "debit_amount": element.transporter_amount,
                                "credit_amount": '',
                                "voucher_date": getFormData.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(obj);
                        });
                        // **************** Commission ******************
                        _this.mainTransporterAdvance.forEach(function (element) {
                            if (element.srno == 4) {
                                // this.investorName
                                var investorCr = (element.transporter_amount * _this.investorPercentage) / 100;
                                var indianaTruckingCr = (element.transporter_amount * _this.indianaTruckingPercentage) / 100;
                                var agencyCr = (element.transporter_amount * _this.agencyPercentage) / 100;
                                // Add Main Commission
                                // var obj = {
                                //   "agency_name": agencyName,
                                //   "branch_id": agencyId,
                                //   "branch_name": agencyName,
                                //   "account_name": transporterBranchName,
                                //   "truck_no": truckNo,
                                //   "sr_no": srNo,
                                //   "deal_id": dealId,
                                //   "narration": "Commission Against Freight From "+ getFormData.from +" To "+ getFormData.to +" as per DF no "+ srNo + " Truck no " + truckNo,  
                                //   "narration_ref_no": "",
                                //   "document_type": "DF",
                                //   "debit_amount": element.transporter_amount,
                                //   "credit_amount": '',
                                //   "voucher_date": getFormData.deal_date,
                                //   "party_name": "",
                                //   "user_name": userName,
                                //   "user_id": userId 
                                // };
                                // accountsLedgerArray.push(obj);
                                // Add Investor Name
                                var investorObj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": _this.investorName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "DF",
                                    "debit_amount": '',
                                    "credit_amount": investorCr,
                                    "voucher_date": getFormData.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(investorObj);
                                // Add indiana Trucking
                                var indianaTruckingObj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Indiana Trucking Commission",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "DF",
                                    "debit_amount": '',
                                    "credit_amount": indianaTruckingCr,
                                    "voucher_date": getFormData.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(indianaTruckingObj);
                                // Add indiana Trucking
                                var agencyObj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": agencyName + " Commission",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Commission Against Freight From " + getFormData.from + " To " + getFormData.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "DF",
                                    "debit_amount": '',
                                    "credit_amount": agencyCr,
                                    "voucher_date": getFormData.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agencyObj);
                            }
                        });
                        // ********************************************
                        console.log("accountsLedgerArray >>>>>", accountsLedgerArray);
                        _this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe(function (res) {
                            _this.loader.hide();
                            _this.editForm.reset();
                            _this.toast.show({ 'message': 'Updated successfully.' });
                            _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__manage_deal_final__["a" /* ManageDealFinalPage */]);
                        }, function (err) {
                            _this.loader.hide();
                            _this.toast.error({ 'message': 'Something went wrong.' });
                            console.log(">>>>>Err", err);
                        });
                    }, function (err) {
                        _this.loader.hide();
                        console.log("error");
                    });
                }, function (err) {
                    _this.loader.hide();
                    console.log("error");
                });
            }, function (err) {
                _this.loader.hide();
                console.log("error");
            });
        }, function (err) {
            _this.loader.hide();
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
        // }
    };
    EditDealFinalPage.prototype.onDeal = function () {
        this.dealFlag = true;
        this.companyFlag = false;
        this.transportFlag = false;
        this.transporterRatesFlag = false;
        this.driverFlag = false;
    };
    EditDealFinalPage.prototype.onCompany = function () {
        this.dealFlag = false;
        this.companyFlag = true;
        this.transportFlag = false;
        this.transporterRatesFlag = false;
        this.driverFlag = false;
    };
    EditDealFinalPage.prototype.onTransport = function () {
        this.dealFlag = false;
        this.companyFlag = false;
        this.transportFlag = true;
        this.transporterRatesFlag = false;
        this.driverFlag = false;
    };
    EditDealFinalPage.prototype.onTruck = function () {
        this.dealFlag = false;
        this.companyFlag = false;
        this.transportFlag = false;
        this.transporterRatesFlag = true;
        this.driverFlag = false;
    };
    EditDealFinalPage.prototype.onDriver = function () {
        this.dealFlag = false;
        this.companyFlag = false;
        this.transportFlag = false;
        this.transporterRatesFlag = false;
        this.driverFlag = true;
        this.getCompanyId();
        this.getTransporterId();
        this.getAgencyId();
    };
    EditDealFinalPage.prototype.getCompanyId = function () {
        var _this = this;
        if (this.editForm.value.company_name) {
            this.requestLoad.searchCompany(this.editForm.value.company_name).subscribe(function (res) {
                var data = res.json();
                _this.companyId = data[0]._id;
                console.log("companyId >>>>", _this.companyId);
            }, function (err) {
                console.log(">>>>error", err);
            });
        }
    };
    EditDealFinalPage.prototype.getTransporterId = function () {
        var _this = this;
        if (this.editForm.value.transporter_name) {
            this.trucks.searchTransporterName(this.editForm.value.transporter_name).subscribe(function (res) {
                var data = res.json();
                _this.transporterId = data[0]._id;
                console.log("transporterId >>>>", _this.transporterId);
            }, function (err) {
                console.log(">>>>error", err);
            });
        }
    };
    EditDealFinalPage.prototype.getAgencyId = function () {
        var _this = this;
        if (this.editForm.value.agency_name) {
            this.trucks.searchAgencyName(this.editForm.value.agency_name).subscribe(function (res) {
                var data = res.json();
                _this.agencyId = data[0]._id;
                console.log("agencyId >>>>", _this.agencyId);
            }, function (err) {
                console.log(">>>>error", err);
            });
        }
    };
    EditDealFinalPage.prototype.getDriverName = function () {
        var _this = this;
        console.log("Get driver ", this.editForm.value.driver_name);
        if (this.editForm.value.driver_name) {
            this.trucks.searchDriverByID(this.editForm.value.driver_name._id).subscribe(function (res) {
                var data = res.json();
                console.log("driver_name", data);
                var licence_expiry = data.result[0].expiry_date;
                console.log("licence", licence_expiry);
                _this.editForm.controls['licence_expiry'].setValue(licence_expiry);
            }, function (err) {
                console.log(">>>>error", err);
            });
        }
    };
    EditDealFinalPage.prototype.getAgencyListByName = function () {
        var _this = this;
        var getFormData = this.editForm.value;
        var agencyName = getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name;
        // console.log("in getAgencyListByName >>>>");
        this.admin.getAgencyListByName(agencyName).subscribe(function (res) {
            var data = res.json();
            var agencyData = data.results;
            if (agencyData[0]) {
                _this.investorName = agencyData[0].investor_name;
                _this.agencyPercentage = agencyData[0].agency_percentage;
                _this.indianaTruckingPercentage = agencyData[0].indiana_trucking_percentage;
                _this.investorPercentage = agencyData[0].investor_percentage;
            }
            console.log("Agency Data >>>>", agencyData[0]);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditDealFinalPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-deal-final',template:/*ion-inline-start:"D:\truck\src\pages\manage-deal-final\edit-deal-final\edit-deal-final.html"*/'<!--\n  Generated template for the EditDealFinalPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit Deal Final</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="editForm" novalidate>\n\n\n    <!-- ----------- Deal Final -------------- -->\n    <div *ngIf="dealFlag">\n      <label class="fonts-size">Deal Final</label>\n      <div class="form-group">\n        <label class=" label">Deal Date</label>\n        <ion-item class="form-control">\n          <ion-datetime name="deal_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="deal_date"></ion-datetime>\n        </ion-item>\n        <!-- <input type="text" placeholder="" formControlName="deal_date" class="form-control"> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Agency Name</label>\n        <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="agencyName.bind(this)"\n          list-formatter="agency_name"\n          formControlName="agency_name" \n          (change)= "getAgencyListByName()"\n        />\n        <!-- <input type="text" placeholder="" formControlName="agency_name" class="form-control"> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Type</label>\n        <select class="form-control drop-down" name="load_type" formControlName="load_type"  >\n          <option value="">Select Type</option>\n          <option *ngFor="let tp of types" [ngValue]="tp">{{tp}}</option>\n        </select>\n        <!-- <input type="text" placeholder="" formControlName="load_type" class="form-control"> -->\n      </div>\n\n      \n\n      <br>\n      <!-- <button ion-button class="pre-button" (click)="preCompany()" type="button" expand="block">Previous</button> -->\n      <button ion-button class="next-button" (click)="onCompany()" type="button" expand="block">Next</button>\n    </div>\n\n    <!-- ----------- Company Details -------------- -->\n    <div *ngIf="companyFlag">\n      <label class="fonts-size">Company Details</label>\n      <div class="form-group">\n        <label class=" label">Ticket No</label>\n        <input type="text" placeholder="" (change)="getPostLoadById()" formControlName="company_ticket_no" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label mg-top-13">Salesman </label> \n        <input type="text" formControlName="company_salesman" class="form-control" />\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Company Name</label>\n        <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="companyName.bind(this)"\n          list-formatter="company_name"\n          formControlName="company_name"          \n        />\n\n        <!-- <input type="text" placeholder="" formControlName="company_name" class="form-control"> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">From</label>\n        <input type="text" placeholder="" formControlName="from" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Loading Place</label>\n        <input type="text" placeholder="" formControlName="loading_place" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">To</label>\n        <input type="text" placeholder="" formControlName="to" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Unloading Place</label>\n        <input type="text" placeholder="" formControlName="unloading_place" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Rates</label>\n        <input type="number" placeholder="" formControlName="rates_company" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Declared Advance</label>\n        <input type="number" placeholder="" formControlName="advance_company" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Weight</label>\n        <input type="number" placeholder="" formControlName="weight_company" class="form-control">\n      </div>\n\n      <br>\n      <br>\n      <!-- ----------------- Company Advance ----------------- -->\n\n      <div>\n        <div>\n          <button ion-button (click)="companyAddInArray()" type="button" class="add-al">Add</button>\n          <b>Company Advance Amount</b>\n        </div>\n        <br>\n        <hr>\n\n        <div class="form-group">\n          <label class=" label">Date</label>\n          <ion-item class="form-control">\n            <ion-datetime name="company_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="company_date"></ion-datetime>\n          </ion-item>\n        </div>\n\n        <div class="form-group">\n          <label class=" label">Payment Type</label>\n          <select class="form-control drop-down" name="company_payment_type" formControlName="company_payment_type" >\n            <option value="">Select Payment Type</option>\n            <option *ngFor="let mpt of mainPaymentTypes" [ngValue]="mpt">{{mpt}}</option>\n          </select>\n        </div>\n\n        <!-- <div class="form-group">\n          <label class=" label">Payment Mode </label>\n          <select class="form-control drop-down" name="company_payment_mode" formControlName="company_payment_mode" >\n            <option value="">Select Payment Mode </option>\n            <option *ngFor="let mpm of mainPaymentMode" [ngValue]="mpm">{{mpm}}</option>\n          </select>\n        </div> -->\n\n        <div class="form-group">\n          <label class=" label">Account Name</label>\n          <select class="form-control drop-down" name="company_account_name" formControlName="company_account_name" >\n            <option value="">Select Account Name</option>\n            <option *ngFor="let mal of mainAccoutsList" [ngValue]="mal.account_name">{{mal.account_name}}</option>\n          </select>\n        </div>\n\n        <div class="form-group">\n          <label class=" label">Amount</label> \n          <input name="company_amount" type="text" formControlName="company_amount" class="form-control" /> \n        </div>\n\n        <div class="form-group">\n          <label class=" label">Remarks</label> \n          <input name="company_remarks" type="number" formControlName="company_remarks" class="form-control" /> \n        </div>\n        <hr>\n          <button ion-button (click)="companyAddInArray()" type="button" class="add-al">Add</button><br><br>\n        <hr>\n\n        <ion-card *ngFor="let mca of mainCompanyAdvance; let i = index">\n          <ion-card-content padding>\n              <!-- companyRemoveInArray -->\n            \n            <p>\n              <span>Date: {{ mca.date_format }}</span>\n              <span class="add-al">Amount: {{ mca.company_amount }}</span>\n            </p>\n            <!-- <p>\n              <span>Payment Mode: {{ mca.company_payment_mode }}</span>\n              <span class="add-al">Remarks: {{ mca.company_remarks }}</span>\n            </p> -->\n\n            <p>\n              <span>Payment Type: {{ mca.company_payment_type }}</span>\n              <span class="add-al"><button class="btn-size" (click)="companyRemoveInArray(i)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button></span>\n            </p>\n\n            <p>\n              <span>Account Name: {{ mca.company_account_name }}</span>\n            </p>\n            \n            \n          </ion-card-content>\n        </ion-card>\n      </div>\n\n      <!-- ---------------------------------- -->\n\n      <br>\n      <button ion-button class="pre-button" (click)="onDeal()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="onTransport()" type="button" expand="block">Next</button>\n    </div>\n\n    <!-- ----------- Transporter Details -------------- -->\n    <div *ngIf="transportFlag">\n      <label class="fonts-size">Transporter Details</label>\n      <div class="form-group">\n        <label class=" label">Ticket No</label>\n        <input type="text" placeholder=""(change)="getRequestLoadById()" formControlName="transporter_ticket_no" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label mg-top-13">Salesman </label> \n        <input type="text" formControlName="transporter_salesman" class="form-control" />\n      </div>\n      \n      <div class="form-group">\n        <label class=" label">Truck No</label>\n        <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="truckNo.bind(this)"\n          list-formatter="truck_no"\n          formControlName="truck_no"          \n        />\n        <!-- <input type="text" placeholder="" formControlName="truck_no" class="form-control"> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Transporter Name</label>\n        <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="transporterName.bind(this)"\n          list-formatter="transport_name"\n          formControlName="transporter_name"          \n        />\n        <!-- <input type="text" placeholder="" formControlName="transporter_name" class="form-control"> -->\n      </div>\n      <br>\n      <b>Driver Verification </b>\n\n      <div class="form-group">\n        <label class=" label">Driver Name <span style="color:red">*</span></label>\n        <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="DriverName.bind(this)"\n          list-formatter="driver_name"\n          formControlName="driver_name"  \n          (change)="getDriverName()"         \n        />\n        \n        <!-- <input type="text" placeholder="" formControlName="driver_name" class="form-control"> -->\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.driver_name.invalid && (editForm.controls.driver_name.dirty || editForm.controls.driver_name.touched))">\n        <div *ngIf="editForm.controls[\'driver_name\'].hasError(\'required\')">\n          <label>Driver is required.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Licence Expiry</label>\n        <ion-item class="form-control">\n          <ion-datetime name="licence_expiry" display-format="MM/YYYY" picker-format="YYYY-MM-DD" min="2016" max="2070-10-31"  formControlName="licence_expiry"></ion-datetime>\n        </ion-item>\n        <!-- <input type="text" placeholder="" formControlName="licence_expiry" class="form-control"> -->\n      </div>\n  \n\n      <!-- <br>\n      <button ion-button class="pre-button" (click)="onCompany()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="onTruck()" type="button" expand="block">Next</button>\n    </div> -->\n      <br>\n    <!-- ----------- Transporter Rates -------------- -->\n    <!-- <div *ngIf="transporterRatesFlag"> -->\n      <!-- <label class="fonts-size">Truck Verification  </label> -->\n      <label class="fonts-size">Transporter Rates</label>\n      <!-- <div class="form-group">\n        <label class=" label">PUC</label>\n        <input type="text" placeholder="" formControlName="puc" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Insurance</label>\n        <input type="text" placeholder="" formControlName="insurance" class="form-control">\n      </div> -->\n\n      <div class="form-group">\n        <label class=" label">Rates</label>\n        <input type="number" placeholder="" formControlName="truck_rates" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Truck Capacity</label>\n        <input type="number" placeholder="" formControlName="truck_weight" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Actual Weight</label>\n        <input type="number" placeholder="" formControlName="actual_weight" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Rate Calculation</label>\n        <select class="form-control drop-down" name="rate_calculation" (change)="addCalculation()" formControlName="rate_calculation"  >\n          <option value="">Select Calculation</option>\n          <option *ngFor="let cls of calculations" [ngValue]="cls">{{cls}}</option>\n        </select>\n        <!-- <input type="text" placeholder="" formControlName="rate_calculation" class="form-control"> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Freight</label>\n        <input type="number" placeholder="" formControlName="freight" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Declared Advance</label>\n        <input type="number" placeholder="" formControlName="truck_advance" class="form-control">\n      </div>\n\n      <br>\n      <br>\n      <!-- ----------------- Transporter Advance ----------------- -->\n\n      <div>\n        <div>\n          <button ion-button (click)="transporterAddInArray()" type="button" class="add-al">Add</button>\n          <b>Transporter Advance Amount</b>\n        </div>\n        <br>\n        <hr>\n\n        <div class="form-group">\n          <label class=" label">Date</label>\n          <ion-item class="form-control">\n            <ion-datetime name="transporter_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="transporter_date"></ion-datetime>\n          </ion-item>\n        </div>\n\n        <div class="form-group">\n          <label class=" label">Payment Type</label>\n          <select class="form-control drop-down" name="transporter_payment_type" formControlName="transporter_payment_type" >\n            <option value="">Select Payment Type</option>\n            <option *ngFor="let mpt of mainPaymentTypes" [ngValue]="mpt">{{mpt}}</option>\n          </select>\n        </div>\n\n        <!-- <div class="form-group">\n          <label class=" label">Payment Mode </label>\n          <select class="form-control drop-down" name="transporter_payment_mode" formControlName="transporter_payment_mode" >\n            <option value="">Select Payment Mode </option>\n            <option *ngFor="let mpm of mainPaymentMode" [ngValue]="mpm">{{mpm}}</option>\n          </select>\n        </div> -->\n\n        <div class="form-group">\n          <label class=" label">Account Name</label>\n          <select class="form-control drop-down" name="transporter_account_name" formControlName="transporter_account_name" >\n            <option value="">Select Account Name</option>\n            <option *ngFor="let mal of mainAccoutsList" [ngValue]="mal.account_name">{{mal.account_name}}</option>\n          </select>\n        </div>\n\n        <div class="form-group">\n          <label class=" label">Amount</label> \n          <input name="transporter_amount" type="number" formControlName="transporter_amount" class="form-control" /> \n        </div>\n\n        <div class="form-group">\n          <label class=" label">Remarks</label> \n          <input name="transporter_remarks" type="text" formControlName="transporter_remarks" class="form-control" /> \n        </div>\n        <hr>\n          <button ion-button (click)="transporterAddInArray()" type="button" class="add-al">Add</button><br><br>\n        <hr>\n\n        <ion-card *ngFor="let mta of mainTransporterAdvance; let i = index">\n          <ion-card-content padding>\n              <!-- companyRemoveInArray -->\n            \n            <p>\n              <span>Date: {{ mta.date_format }}</span>\n              <span class="add-al">Amount: {{ mta.transporter_amount }}</span>\n            </p>\n            <!-- <p>\n              <span>Payment Mode: {{ mta.transporter_payment_mode }}</span>\n              <span class="add-al">Remarks: {{ mta.transporter_remarks }}</span>\n            </p> -->\n\n            <p>\n              <span>Payment Type: {{ mta.transporter_payment_type }}</span>\n              <span class="add-al"><button class="btn-size" (click)="transporterRemoveInArray(i)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button></span>\n            </p>\n\n            <p>\n              <span>Account Name: {{ mta.transporter_account_name }}</span>\n            </p>\n\n            \n            \n          </ion-card-content>\n        </ion-card>\n      </div>\n\n      <!-- ---------------------------------- -->\n\n      <br>\n      <!-- <button ion-button class="pre-button" (click)="onTransport()" type="button" expand="block">Previous</button> -->\n      <button ion-button class="pre-button" (click)="onCompany()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="onDriver()" type="button" expand="block">Next</button>\n    </div>\n\n    <!-- ----------- Deal Status-------------- -->\n    <div *ngIf="driverFlag">\n      <label class="fonts-size">Deal Status</label>\n\n      <div class="form-group">\n        <label class=" label">Status</label>\n        <select class="form-control drop-down" name="status" (change)="getCancel()" formControlName="status"  >\n          <option value="">Select Status</option>\n          <option *ngFor="let st of statuses" [ngValue]="st">{{st}}</option>\n        </select>\n        <!-- <input type="text" placeholder="" formControlName="status" class="form-control"> -->\n      </div>\n\n      <div *ngIf="cancelFlag" class="form-group">\n        <div *ngFor="let cr of cancelReasons; let j = index;" padding>\n          <div *ngIf="cr.flag">\n            <input type="checkbox" checked="{{cr.flag}}" value="cr.name" (change)="addCancel($event, cr.name, a)"> &nbsp;{{ cr.name }}\n          </div>\n          <div *ngIf="!cr.flag">\n              <input type="checkbox" value="cr.name" (change)="addCancel($event, cr.name, j)"> &nbsp;{{ cr.name }}\n          </div>\n        </div> \n      </div>\n\n\n      <div class="form-group">\n        <label class=" label">User Name</label>\n        <input type="text" placeholder="" formControlName="user_name" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Salesman (Deal Done By) <span style="color:red">*</span></label>\n        <select class="form-control drop-down" name="deal_final_salesman" formControlName="deal_final_salesman" (change)="onselectDealFinalSalesman()" >\n            <!-- (change)="onselectDealFinalSalesman()"  -->\n          <option value="">Select Salesman</option>\n          <option *ngFor="let sml of salesmanList" [ngValue]="sml">{{sml}}</option>\n        </select>\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.deal_final_salesman.invalid && (editForm.controls.deal_final_salesman.dirty || editForm.controls.deal_final_salesman.touched))">\n        <div *ngIf="editForm.controls[\'deal_final_salesman\'].hasError(\'required\')">\n          <label>Salesman is required.</label>\n        </div>\n      </div>\n\n\n\n      <br>\n      <!-- <button ion-button class="pre-button" (click)="onTruck()" type="button" expand="block">Previous</button> -->\n      <button ion-button class="pre-button" (click)="onTransport()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="update()" type="button" expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Update Deal</button>\n\n      <!-- <div padding>\n        <button ion-button block (click)="save()" size="large" type="submit"  expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Save Deal</button>\n      </div> -->\n    </div>\n        \n  \n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-deal-final\edit-deal-final\edit-deal-final.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_9__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_8__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_7__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_6__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_5__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_3__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], EditDealFinalPage);
    return EditDealFinalPage;
}());

//# sourceMappingURL=edit-deal-final.js.map

/***/ }),

/***/ 458:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditUserPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








/**
 * Generated class for the EditUserPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditUserPage = /** @class */ (function () {
    function EditUserPage(navCtrl, navParams, fb, admin, loader, toast, events) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.admin = admin;
        this.loader = loader;
        this.toast = toast;
        this.events = events;
        this.agenciesNameList = [];
        this.permissionsList = [];
        this.finalAgenciesNameList = [];
        this.userRoles = ['Admin', 'Office Staff', 'Marketing Staff', 'Cluster Manager'];
        this.assignList = ['Backoffice', 'Agencies', 'Marketing', 'Investor'];
        this.AgenciesArray = [];
        this.addAssignArray = [];
        this.assignFinalList = [];
        this.finalPermissionsList = [];
        this.groupnames = [];
        this.grouppermissions_row = [];
        this.details = this.navParams.get('data');
        console.log("details >>>", this.details);
        this.editForm = this.fb.group({
            user_name: [''],
            user_role: [''],
            assign: [''],
            agencies: [''],
            permissions: ['']
        });
        this.editForm.controls['user_name'].setValue(this.details.user_name);
        this.editForm.controls['user_role'].setValue(this.details.user_role);
        this.assignList.forEach(function (r) {
            var flag = false;
            _this.details.assigns.forEach(function (e) {
                if (r == e.assign) {
                    flag = true;
                    var obj = { "assign": r };
                    _this.addAssignArray.push(obj);
                }
            });
            var obj = { "name": r, "flag": flag };
            _this.assignFinalList.push(obj);
        });
        this.getAgenciesNameList();
        this.getUserPermissionList();
    }
    EditUserPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditUserPage');
    };
    EditUserPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_7__home_home__["a" /* HomePage */]);
    };
    EditUserPage.prototype.ngOnInit = function () {
    };
    EditUserPage.prototype.getAgenciesNameList = function () {
        var _this = this;
        this.admin.getAgenciesNameList().subscribe(function (res) {
            var data = res.json();
            data.results.forEach(function (r) {
                var obj = { "name": r.name };
                _this.agenciesNameList.push(obj);
            });
            // console.log("data >>>", this.agenciesNameList);
            _this.agenciesNameList.forEach(function (r) {
                // console.log("in agenciesNameList>>>", r);
                var flag = false;
                _this.details.agencies.forEach(function (e) {
                    if (r.name == e.name) {
                        flag = true;
                        var obj = { "name": r.name };
                        _this.AgenciesArray.push(obj);
                    }
                });
                var obj = { "name": r.name, "flag": flag };
                _this.finalAgenciesNameList.push(obj);
            });
            // console.log("finalAgenciesNameList >>>", this.finalAgenciesNameList);
            // console.log("AgenciesArray >>>", this.AgenciesArray);
        }, function (err) {
            console.log("err >>>", err);
        });
    };
    EditUserPage.prototype.getUserPermissionList = function () {
        var _this = this;
        this.loader.show();
        this.admin.getUserPermissionList().subscribe(function (res) {
            var data = res.json();
            _this.loader.hide();
            data.result.forEach(function (r) {
                _this.permissionsList.push(r);
            });
            // console.log("data >>>", this.permissionsList);
            var rowArray = [];
            _this.permissionsList.forEach(function (r) {
                _this.details.priviliges.forEach(function (dr) {
                    var pArray = [];
                    if (r.group_name == dr.group_name) {
                        r.permissions_group.forEach(function (pr) {
                            var flag = false;
                            dr.permissions_group.forEach(function (pdr) {
                                if (pr.name == pdr.name) {
                                    flag = true;
                                    var inseobj = { "group": r.group_name, "name": pr.name, "value": pr.value };
                                    _this.groupnames.push(r.group_name);
                                    _this.grouppermissions_row.push(inseobj);
                                }
                            });
                            var obj = { "name": pr.name, "value": pr.value, "flag": flag };
                            pArray.push(obj);
                        });
                        // console.log(pArray);
                        var main_obj = { "group_name": r.group_name, "permissions_group": pArray };
                        rowArray.push(main_obj);
                    }
                });
            });
            // console.log("rowArray >>>", rowArray);
            _this.permissionsList.forEach(function (n) {
                var fl = 0;
                rowArray.forEach(function (ra) {
                    if (n.group_name == ra.group_name) {
                        fl = 1;
                        _this.finalPermissionsList.push(ra);
                    }
                });
                // console.log(n.group_name, "flag >>>", fl);
                if (fl == 0) {
                    _this.finalPermissionsList.push(n);
                }
            });
            console.log("finalPermissionsList >>>", _this.finalPermissionsList);
            console.log("groupnames >>>", _this.groupnames);
            console.log("grouppermissions_row >>>", _this.grouppermissions_row);
        }, function (err) {
            _this.loader.hide();
            console.log("err >>>", err);
        });
    };
    EditUserPage.prototype.addPermissions = function (event, gn, pname, pvalue) {
        var _this = this;
        if (event.target.checked) {
            var obj = { "group": gn, "name": pname, "value": pvalue };
            this.groupnames.push(gn);
            this.grouppermissions_row.push(obj);
        }
        else {
            var i = 0;
            this.grouppermissions_row.forEach(function (element) {
                if (element.name == pname && element.group == gn) {
                    console.log(" IN    >>>>", i);
                    _this.grouppermissions_row.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.grouppermissions_row >>>>", this.grouppermissions_row);
        }
    };
    EditUserPage.prototype.addAgencies = function (event, aname, avalue) {
        var _this = this;
        if (event.target.checked) {
            var obj = { "name": aname };
            // , "value": avalue
            this.AgenciesArray.push(obj);
        }
        else {
            var i = 0;
            this.AgenciesArray.forEach(function (element) {
                if (element.name == aname) {
                    console.log(" IN    >>>>", i);
                    _this.AgenciesArray.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.AgenciesArray >>>>", this.AgenciesArray);
        }
    };
    EditUserPage.prototype.addAssignfor = function (event, aname) {
        var _this = this;
        if (event.target.checked) {
            var obj = { "assign": aname };
            this.addAssignArray.push(obj);
        }
        else {
            var i = 0;
            this.addAssignArray.forEach(function (element) {
                if (element.assign == aname) {
                    console.log(" IN    >>>>", i);
                    _this.addAssignArray.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.addAssignArray >>>>", this.addAssignArray);
        }
    };
    EditUserPage.prototype.update = function () {
        var _this = this;
        var new_groupnames = Array.from(new Set(this.groupnames));
        var priviligesArray = [];
        new_groupnames.forEach(function (r) {
            var permissionsGroupArray = [];
            _this.grouppermissions_row.forEach(function (d) {
                if (d.group == r) {
                    var p = { "name": d.name, "value": d.value };
                    permissionsGroupArray.push(p);
                }
            });
            var obj = { "group_name": r, "permissions_group": permissionsGroupArray };
            priviligesArray.push(obj);
        });
        var obj = {
            "user_name": this.editForm.value.user_name,
            // "password": this.details.password,
            "user_role": this.editForm.value.user_role,
            "assigns": this.addAssignArray,
            "agencies": this.AgenciesArray,
            "priviliges": priviligesArray
        };
        console.log("Final  >>>", obj);
        this.loader.show();
        this.admin.updateUser(this.details._id, obj).subscribe(function (res) {
            _this.loader.hide();
            _this.editForm.reset();
            _this.toast.show({ 'message': 'Update Successfully.' });
            _this.navCtrl.setRoot('ManageUserPage');
        }, function (err) {
            console.log("err >>>", err);
        });
    };
    EditUserPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-user',template:/*ion-inline-start:"D:\truck\src\pages\edit-user\edit-user.html"*/'<!--\n  Generated template for the EditUserPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit User</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n    <form [formGroup]="editForm">\n\n        <div class="form-group">\n          <label class=" label">User Name <span style="color:red">*</span></label>\n          <input type="text" placeholder="" formControlName="user_name" class="form-control">\n        </div>\n  \n        <div class="form-group">\n          <label class=" label">User Role <span style="color:red">*</span></label>\n          <select class="form-control drop-down" formControlName="user_role">\n            <option value="">Select Role</option>\n            <option *ngFor="let role of userRoles" value="{{role}}">{{ role }}</option>\n          </select>        \n        </div>\n        <!-- multiple -->\n        <div class="form-group">\n          <label class=" label"><b>Assign for </b><span style="color:red">*</span></label>\n          <br>\n          <div *ngFor="let assignfor of assignFinalList" class="add-padding">\n            <div *ngIf="assignfor.flag">\n              <input type="checkbox" formControlName="assign" checked="{{assignfor.flag}}" (change)="addAssignfor($event, assignfor.name)"> &nbsp;{{ assignfor.name}}\n            </div>\n            <div *ngIf="!assignfor.flag">\n              <input type="checkbox" formControlName="assign" (change)="addAssignfor($event, assignfor.name)"> &nbsp;{{ assignfor.name}}\n            </div>\n              \n          </div>\n          <!-- <select class="form-control drop-down" formControlName="assign">\n            <option value="">Select Assign for User</option>\n            <option *ngFor="let assignfor of assignList" value="{{ assignfor }}">{{ assignfor }}</option>\n          </select>         -->\n        </div>\n  \n        <div class="form-group">\n          <label class=" label"><b>Agencies </b><span style="color:red">*</span></label>\n          <br>\n          <div *ngFor="let agency of finalAgenciesNameList" class="add-padding" >\n            <div *ngIf="agency.flag">\n              <input type="checkbox" formControlName="agencies" checked="{{agency.flag}}" (change)="addAgencies($event, agency.name, agency.value)"> &nbsp;{{ agency.name }}\n            </div>\n            <div *ngIf="!agency.flag">\n              <input type="checkbox" formControlName="agencies" (change)="addAgencies($event, agency.name, agency.value)"> &nbsp;{{ agency.name }}\n            </div>\n          </div>\n  \n            <!-- <option value="">Select Agencies</option>\n            <option *ngFor="let agency of agenciesNameList" value="{{agency}}">{{ agency }}</option>\n          </select>        \n          (change)="getCapacity()" required    -->\n        </div>\n        <br>\n        <br>\n        <hr>\n  \n        <div class="form-group">\n          <label class=" label"><b>Priviliges Section: </b></label>\n  \n          <br>\n          <div *ngFor="let pl of finalPermissionsList">\n            <br>\n            <b>{{ pl.group_name }} : </b>\n            <!-- <br>\n            <br>  -->\n            <div *ngFor="let p of pl.permissions_group" class="add-padding">\n                <div *ngIf="p.flag">\n                  <input type="checkbox"  formControlName="permissions" checked="{{p.flag}}" value="p.name" (change)="addPermissions($event, pl.group_name, p.name, p.value)"> &nbsp;{{ p.name }}\n                </div>\n              <div *ngIf="!p.flag">\n                <input type="checkbox"  formControlName="permissions" value="p.name" (change)="addPermissions($event, pl.group_name, p.name, p.value)"> &nbsp;{{ p.name }}\n              </div>\n            </div>\n          </div> \n        </div>\n        <hr>\n  \n        <div padding>\n          <button ion-button block size="large" type="button" expand="block" (click)="update()"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Update User</button>\n        </div>\n  \n      </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\edit-user\edit-user.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_6__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_2__providers_event_service__["a" /* EventsService */]])
    ], EditUserPage);
    return EditUserPage;
}());

//# sourceMappingURL=edit-user.js.map

/***/ }),

/***/ 459:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditEmployeePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__helpers_common__ = __webpack_require__(31);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the EditEmployeePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditEmployeePage = /** @class */ (function () {
    function EditEmployeePage(navCtrl, navParams, loader, toast, fb, events, trucks, admin, mapsAPILoader, ngZone) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.events = events;
        this.trucks = trucks;
        this.admin = admin;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.categoryArray = ['Office Staff', 'Marketing Staff', 'Driver', 'Traffic', 'Cluster Manager'];
        // reportsArray = [{id: '', name: 'Cluster Manager'}];
        this.reportsArray = [];
        this.submitted = false;
        this.staffFlag = true;
        this.locationFlag = false;
        this.configFlag = false;
        this.x = 0;
        this.y = 0;
        this.z = 0;
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_9_rxjs__["Observable"].of([]);
            }
        };
        this.details = this.navParams.get('data');
        console.log("details >>>>>>", this.details);
        this.editForm = this.fb.group({
            first_name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            last_name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            mobile_no: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(10)])],
            email: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].email],
            category: [''],
            reports_to: [''],
            reward_points: [''],
            from: [''],
            to: [''],
            agency_name: [''],
            work_location: [''],
            location_restriction: [''],
            latitude: [''],
            longitude: [''],
            check_in_out: [''],
            auto_log_out: [''],
            location_restriction_check: [''],
            live_tractrking: [''],
            check_out_reminders: [''],
            distance: [''],
            ideal_marker_time: ['']
        });
        this.editForm.controls['first_name'].setValue(this.details.first_name);
        this.editForm.controls['last_name'].setValue(this.details.last_name);
        this.editForm.controls['mobile_no'].setValue(this.details.mobile_no);
        this.editForm.controls['email'].setValue(this.details.email);
        this.editForm.controls['category'].setValue(this.details.category);
        this.editForm.controls['reward_points'].setValue(this.details.reward_points);
        this.editForm.controls['from'].setValue(this.details.from);
        this.editForm.controls['to'].setValue(this.details.to);
        this.editForm.controls['agency_name'].setValue(this.details.agency_name);
        this.editForm.controls['work_location'].setValue(this.details.work_location);
        this.editForm.controls['location_restriction'].setValue(this.details.location_restriction);
        this.editForm.controls['latitude'].setValue(this.details.latitude);
        this.editForm.controls['longitude'].setValue(this.details.longitude);
        this.editForm.controls['check_in_out'].setValue(this.details.check_in_out);
        this.editForm.controls['auto_log_out'].setValue(this.details.auto_log_out);
        this.editForm.controls['location_restriction_check'].setValue(this.details.location_restriction_check);
        this.editForm.controls['live_tractrking'].setValue(this.details.live_tractrking);
        this.editForm.controls['check_out_reminders'].setValue(this.details.check_out_reminders);
        this.editForm.controls['distance'].setValue(this.details.distance);
        this.editForm.controls['ideal_marker_time'].setValue(this.details.ideal_marker_time);
        // if( this.details.category == "Cluster Manager") { 
        this.getClusterManagersList();
        // }
        this.editForm.controls['reports_to'].setValue(this.details.reports_to);
        if (this.details.check_out_reminders) {
            this.dist = true;
        }
        else {
            this.dist = false;
        }
        if (this.details.from) {
            this.x = 1;
        }
        if (this.details.to) {
            this.y = 1;
        }
        // if(this.details.ideal_marker_time) {
        //   this.z = 1;
        // }
    }
    EditEmployeePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditEmployeePage');
    };
    EditEmployeePage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_11__home_home__["a" /* HomePage */]);
    };
    EditEmployeePage.prototype.getClusterManagersList = function () {
        var _this = this;
        // if( this.editForm.value.category == "Cluster Manager") {
        console.log("Yes...");
        this.loader.show();
        this.admin.getEmployeesList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            // this.reportsArray = [];
            // this.reportsArray.push({id: '', name: 'Cluster Manager'});
            data.results.forEach(function (element) {
                if (element.category == "Cluster Manager") {
                    var obj = { id: element._id, name: element.first_name };
                    _this.reportsArray.push(obj);
                }
            });
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
        // } else {
        //   console.log("No...");
        //   this.reportsArray = [{id: '', name: 'Cluster Manager'}];
        // }
    };
    EditEmployeePage.prototype.getLocation = function (e) {
        e.preventDefault();
        this.events.broadcast('location');
    };
    EditEmployeePage.prototype.update = function () {
        var _this = this;
        var tdDate = __WEBPACK_IMPORTED_MODULE_10_moment__().format('YYYY-MM-DD');
        this.submitted = true;
        console.log("Data >>>", this.editForm.value);
        var formData = this.editForm.value;
        formData.agency_name = formData.agency_name.agency_name ? formData.agency_name.agency_name : formData.agency_name;
        if (this.x == 0) {
            formData.from = tdDate + "T" + formData.from;
        }
        if (this.y == 0) {
            formData.to = tdDate + "T" + formData.to;
        }
        console.log("formData >>>>>", formData);
        if (formData.reports_to == "") {
            delete formData.reports_to;
        }
        console.log("formData >>>>>", formData);
        this.loader.show();
        this.admin.updateEmployee(this.details._id, formData).subscribe(function (res) {
            _this.loader.hide();
            console.log("res >>>>>", res);
            _this.toast.show({ 'message': 'Updated successfully.' });
            _this.navCtrl.setRoot('ManageEmployeesPage');
        }, function (err) {
            _this.loader.hide();
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
    };
    EditEmployeePage.prototype.nextStaff = function () {
        this.staffFlag = true;
        this.locationFlag = false;
        this.configFlag = false;
    };
    EditEmployeePage.prototype.nextLocation = function () {
        var _this = this;
        this.staffFlag = false;
        this.locationFlag = true;
        this.configFlag = false;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var presentCity = new google.maps.places.Autocomplete(_this.searchElementRef.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentCity.getPlace();
                        var lat = place.geometry.location.lat();
                        var lng = place.geometry.location.lng();
                        localStorage.setItem('latlng', JSON.stringify({
                            lat: lat,
                            lng: lng
                        }));
                        _this.events.broadcast('location');
                        _this.editForm.controls['latitude'].setValue(lat);
                        _this.editForm.controls['longitude'].setValue(lng);
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('Location').value = pre_city;
                        _this.editForm.controls['work_location'].setValue(pre_city);
                    });
                });
            });
        }, 2000);
    };
    EditEmployeePage.prototype.nextConfig = function () {
        this.staffFlag = false;
        this.locationFlag = false;
        this.configFlag = true;
    };
    EditEmployeePage.prototype.inout = function (event) {
        if (event.checked) {
            this.editForm.value.check_in_out = true;
        }
        else {
            this.editForm.value.check_in_out = false;
        }
    };
    EditEmployeePage.prototype.autoLogOut = function (event) {
        if (event.checked) {
            this.editForm.value.auto_log_out = true;
        }
        else {
            this.editForm.value.auto_log_out = false;
        }
    };
    EditEmployeePage.prototype.locationCheck = function (event) {
        if (event.checked) {
            this.editForm.value.location_restriction_check = true;
        }
        else {
            this.editForm.value.location_restriction_check = false;
        }
    };
    EditEmployeePage.prototype.liveTractrking = function (event) {
        if (event.checked) {
            this.editForm.value.live_tractrking = true;
        }
        else {
            this.editForm.value.live_tractrking = false;
        }
    };
    EditEmployeePage.prototype.checkReminders = function (event) {
        if (event.checked) {
            this.editForm.value.check_out_reminders = true;
            this.dist = true;
        }
        else {
            this.editForm.value.check_out_reminders = false;
            this.dist = false;
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditEmployeePage.prototype, "searchElementRef", void 0);
    EditEmployeePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-employee',template:/*ion-inline-start:"D:\truck\src\pages\edit-employee\edit-employee.html"*/'<!--\n  Generated template for the EditEmployeePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit Employee</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="editForm">\n    <!------------------ Staff Flag ----------------  -->\n    <div *ngIf="staffFlag">\n      <label class="fonts-size">Staff Details </label>\n      <div class="form-group">\n        <label class=" label">First Name <span style="color:red">*</span></label>\n        <input type="text" placeholder="" formControlName="first_name" class="form-control">\n      </div>\n\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.first_name.invalid && (editForm.controls.first_name.dirty || editForm.controls.first_name.touched))">\n        <div *ngIf="editForm.controls[\'first_name\'].hasError(\'required\')">\n          <label>First name is required.</label>\n        </div>\n        <div *ngIf="editForm.controls[\'first_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="editForm.controls[\'first_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n\n\n      <div class="form-group">\n        <label class=" label">Last Name <span style="color:red">*</span></label>\n        <input type="text" placeholder="" formControlName="last_name" class="form-control">\n      </div>\n\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.last_name.invalid && (editForm.controls.last_name.dirty || editForm.controls.last_name.touched))">\n        <div *ngIf="editForm.controls[\'last_name\'].hasError(\'required\')">\n          <label>Last name is required.</label>\n        </div>\n        <div *ngIf="editForm.controls[\'last_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="editForm.controls[\'last_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile No</label>\n        <input type="text" placeholder="" formControlName="mobile_no" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.mobile_no.invalid && (editForm.controls.mobile_no.dirty || editForm.controls.mobile_no.touched))">\n        <div *ngIf="editForm.controls[\'mobile_no\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="editForm.controls[\'mobile_no\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Email</label>\n        <input type="email" placeholder="" formControlName="email" class="form-control" email>\n      </div>\n\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.email.invalid && (editForm.controls.email.dirty || editForm.controls.email.touched))">\n        <div *ngIf="editForm.controls[\'email\'].errors.email">\n          <label>Invalid email.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Category </label>\n        <!-- (change)="getClusterManagersList()" (change)="getClusterManagersList()"  -->\n        <select class="form-control drop-down" name="category" formControlName="category" >\n          <option value="">Select category</option>\n          <option *ngFor="let tn of categoryArray" [ngValue]="tn">{{tn}}</option>\n        </select>          \n      </div>\n\n      <div class="form-group">\n        <label class=" label">Reports To </label>\n        <select class="form-control drop-down" name="reports_to" formControlName="reports_to" >\n          <option value="">Select Reports To </option>\n          <option *ngFor="let rp of reportsArray" [ngValue]="rp.id">{{rp.name}}</option>\n        </select>          \n      </div>\n\n      <div class="form-group">\n        <label class=" label">Reward Points </label>\n        <input type="number" placeholder="" autocomplete="off" formControlName="reward_points" class="form-control">\n      </div>\n\n      <br>\n      <div class="btns-last">\n      <button ion-button class="next-button" (click)="nextLocation()" type="button" expand="block">Next</button>\n        </div>\n\n    </div>\n\n    <!------------------ Location Allotment Flag ----------------  -->\n    <div *ngIf="locationFlag">\n      <label class="fonts-size">Location Allotment </label>\n      <br>\n      <br>\n      <b class="title-ofctiming">Office Timing </b>\n\n      <div class="form-group">\n        <label class=" label">From</label>\n        \n      <ion-item class="form-control">\n        <ion-datetime name="from" displayFormat="HH:mm" pickerFormat="HH:mm" formControlName="from"></ion-datetime>\n      </ion-item>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">To</label>\n        \n      <ion-item class="form-control">\n        <ion-datetime name="to" displayFormat="HH:mm" pickerFormat="HH:mm" formControlName="to"></ion-datetime>\n      </ion-item>\n      </div>\n\n      <div class="form-group">\n          <label class=" label">Agency Name <span style="color:red">*</span></label> \n          <input class="form-control"\n            ng2-auto-complete\n            formControlName="agency_name"\n            [source] = "agencyName.bind(this)"\n            list-formatter="agency_name"/>\n        </div>\n\n        <div class="form-group employee-location">\n          <input name="work_location" id="Location" type="text" autocomplete="off"  placeholder="Search Location" #search formControlName="work_location" class="form-control">\n        </div>\n        <br>\n        <div class="form-group employee-map">\n        <ion-row right>  \n          <ion-col text-right>   \n            <button ion-button (click)="getLocation($event)"><ion-icon name="locate"></ion-icon></button>\n          </ion-col> \n        </ion-row>\n        <br>\n        <google-maps></google-maps>\n        <!-- (googleAddress)="addressData($event)" -->\n        <br>\n      </div>\n        <div class="form-group">\n          <label class=" label">Location Restriction (meters)</label>\n          <input name="location_restriction" type="number" placeholder="" formControlName="location_restriction" class="form-control"> \n        </div>\n        <div class="form-group">\n          <label class=" label">Latitude </label>\n          <input name="latitude" type="text" placeholder="" formControlName="latitude" class="form-control"> \n        </div>\n        <div class="form-group">\n          <label class=" label">Longitude </label>\n          <input name="longitude" type="text" placeholder="" formControlName="longitude" class="form-control"> \n        </div>\n      \n        <br>\n        <div class="btns-last">\n        <button ion-button class="pre-button" (click)="nextStaff()" type="button" expand="block">Previous</button>\n        <button ion-button class="next-button" (click)="nextConfig()" type="button" expand="block">Next</button>\n  </div>\n    </div>\n\n\n    <!------------------ Config Flag ----------------  -->\n    <div *ngIf="configFlag">\n      <label class="fonts-size">Configuration </label>\n      <br>\n\n      <div class="width-full">\n        <ion-row>\n          <ion-col col-6>\n            <br>\n            Check In/Out \n          </ion-col>\n          <ion-col col-6>\n            <div class="form-group">\n              <ion-toggle formControlName="check_in_out"(ionChange)="inout($event)" color="primary"></ion-toggle>\n            </div>\n          </ion-col>\n\n          <ion-col col-6 >\n            <br>\n            Auto Log out \n          </ion-col>\n          <ion-col col-6>\n            <div class="form-group">\n              <ion-toggle formControlName="auto_log_out" (ionChange)="autoLogOut($event)" color="primary"></ion-toggle>\n            </div>\n          </ion-col>\n\n          <ion-col col-6>\n            <br>\n            Location Restriction            \n          </ion-col>\n          <ion-col col-6>\n            <div class="form-group">\n              <ion-toggle formControlName="location_restriction_check" (ionChange)="locationCheck($event)" color="primary"></ion-toggle>\n            </div>\n          </ion-col>\n        </ion-row> \n\n            \n      </div>\n      <br>\n\n      <b>Tracking</b>\n\n      <div>\n        <ion-row>\n          <ion-col col-6>\n            <br>\n            Live Tractrking \n          </ion-col>\n          <ion-col col-6>\n            <div class="form-group">\n              <ion-toggle formControlName="live_tractrking" (ionChange)="liveTractrking($event)" color="primary"></ion-toggle>\n            </div>\n          </ion-col>\n\n          <ion-col col-6>\n            <br>\n            Check Out Reminders \n          </ion-col>\n          <ion-col col-6>\n            <div class="form-group">\n              <ion-toggle formControlName="check_out_reminders" (ionChange)="checkReminders($event)" color="primary"></ion-toggle>\n            </div>\n          </ion-col>\n        </ion-row> \n      </div>\n\n      <div class="form-group" *ngIf="dist">\n        <label class=" label">Distance (mtrs)</label>\n        <input type="number" placeholder="" formControlName="distance" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Ideal Marker Time (Minutes)</label>\n        <input type="number" placeholder="" formControlName="ideal_marker_time" class="form-control">\n      </div>\n      <!-- <ion-item class="form-control">\n        <ion-datetime name="ideal_marker_time" displayFormat="HH:mm" pickerFormat="HH:mm" formControlName="ideal_marker_time"></ion-datetime>\n      </ion-item> -->\n\n      <br>\n      <div class="btns-last">\n      <button ion-button class="pre-button" (click)="nextLocation()" type="button" expand="block">Previous</button>\n      <button ion-button class="up-button" (click)="update()" type="button" expand="block">Update Employee</button>\n        </div>\n\n    </div>\n    \n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\edit-employee\edit-employee.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_8__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_6__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_5__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_3__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], EditEmployeePage);
    return EditEmployeePage;
}());

//# sourceMappingURL=edit-employee.js.map

/***/ }),

/***/ 460:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManagePaymentTypePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__add_payment_type_add_payment_type__ = __webpack_require__(461);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__edit_payment_type_edit_payment_type__ = __webpack_require__(462);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_toast__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








/**
 * Generated class for the ManagePaymentTypePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManagePaymentTypePage = /** @class */ (function () {
    function ManagePaymentTypePage(navCtrl, navParams, requestLoad, actionSheetController, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.toast = toast;
        this.getPaymentType();
    }
    ManagePaymentTypePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManagePaymentTypePage');
    };
    ManagePaymentTypePage.prototype.getPaymentType = function () {
        var _this = this;
        this.requestLoad.getPaymentTypesList().subscribe(function (res) {
            console.log('>>>>Hello res', res);
            var data = res.json();
            _this.types = data.results;
        }, function (err) {
            console.log('>>>>Hello err', err);
        });
    };
    ManagePaymentTypePage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_3__home_home__["a" /* HomePage */]);
    };
    ManagePaymentTypePage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add Payment Type',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__add_payment_type_add_payment_type__["a" /* AddPaymentTypePage */]);
                return [2 /*return*/];
            });
        });
    };
    ManagePaymentTypePage.prototype.presentActionSheet = function (userData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit Payment Type',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__edit_payment_type_edit_payment_type__["a" /* EditPaymentTypePage */], { data: userData });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deletePaymentType(userData._id);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManagePaymentTypePage.prototype.deletePaymentType = function (id) {
        var _this = this;
        var conf = confirm('Are you sure you want to delete this payement type ?');
        if (conf) {
            this.loader.show();
            this.requestLoad.deletePaymentType(id).subscribe(function (res) {
                _this.loader.hide();
                _this.toast.show({ 'message': 'Deleted Successfully.' });
                _this.getPaymentType();
            }, function (err) {
                _this.loader.hide();
                console.log("error");
            });
        }
    };
    ManagePaymentTypePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-payment-type',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-payment-type\manage-payment-type.html"*/'<!--\n  Generated template for the ManagePaymentTypePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Manage Payment Type</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n          <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-card *ngFor="let type of types; let i = index">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(type, $event)"></ion-icon>\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ i + 1 }} {{ type.name  }}</span><br>\n      </p>\n\n      <div padding>\n        <ion-row>\n          <ion-col col-12>\n            <span><b>Description: </b> {{ type.description  }}</span>\n          </ion-col>\n        </ion-row>\n      </div>\n      \n    </ion-card-content>\n  </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-payment-type\manage-payment-type.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_toast__["a" /* ToastProvider */]])
    ], ManagePaymentTypePage);
    return ManagePaymentTypePage;
}());

//# sourceMappingURL=manage-payment-type.js.map

/***/ }),

/***/ 461:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddPaymentTypePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the AddPaymentTypePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddPaymentTypePage = /** @class */ (function () {
    function AddPaymentTypePage(navCtrl, navParams, fb, requestLoad, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.addpaymentTypeForm = this.fb.group({
            name: [''],
            description: ['']
        });
    }
    AddPaymentTypePage.prototype.ionViewDidLoad = function () {
    };
    AddPaymentTypePage.prototype.save = function () {
        var _this = this;
        var val = this.addpaymentTypeForm.value;
        var obj = {
            name: val.name,
            description: val.description
        };
        this.loader.show();
        this.requestLoad.addPaymentType(obj).subscribe(function (res) {
            _this.loader.hide();
            _this.toast.show({ 'message': 'Added Successfully.' });
            _this.navCtrl.push('ManagePaymentTypePage');
        }, function (err) {
            _this.loader.hide();
            console.log('>>>>err', err);
        });
    };
    AddPaymentTypePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-payment-type',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-payment-type\add-payment-type\add-payment-type.html"*/'<!--\n  Generated template for the AddPaymentTypePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>Add Payment Type</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="addpaymentTypeForm">\n\n    <div class="form-group">\n      <label class=" label">Payment Type</label>\n      <input type="text" placeholder="Enter Payment Type" formControlName="name" class="form-control">\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Payment Type Description</label>\n      <textarea placeholder="Enter Payment Type Description" formControlName="description" class="form-control"></textarea>\n    </div>\n\n    <hr>\n\n    <div padding>\n      <button ion-button block size="large" type="button" expand="block" (click)="save()"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Payment Type</button>\n    </div>\n\n  </form>\n\n</ion-content>'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-payment-type\add-payment-type\add-payment-type.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */]])
    ], AddPaymentTypePage);
    return AddPaymentTypePage;
}());

//# sourceMappingURL=add-payment-type.js.map

/***/ }),

/***/ 462:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditPaymentTypePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the EditPaymentTypePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditPaymentTypePage = /** @class */ (function () {
    function EditPaymentTypePage(navCtrl, navParams, fb, requestLoad, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.details = this.navParams.get('data');
        console.log('>>>Details', this.details);
        this.editpaymentTypeForm = this.fb.group({
            name: [''],
            description: ['']
        });
        this.editpaymentTypeForm.controls['name'].setValue(this.details.name);
        this.editpaymentTypeForm.controls['description'].setValue(this.details.description);
    }
    EditPaymentTypePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddPaymentModePage');
    };
    EditPaymentTypePage.prototype.update = function () {
        var _this = this;
        var val = this.editpaymentTypeForm.value;
        var obj = {
            name: val.name,
            description: val.description
        };
        this.loader.show();
        this.requestLoad.editPaymentType(obj, this.details._id).subscribe(function (res) {
            _this.loader.hide();
            _this.toast.show({ 'message': 'Updated Successfully.' });
            _this.navCtrl.push('ManagePaymentTypePage');
        }, function (err) {
            _this.loader.hide();
            console.log('>>>>err', err);
        });
    };
    EditPaymentTypePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-payment-type',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-payment-type\edit-payment-type\edit-payment-type.html"*/'<!--\n  Generated template for the EditPaymentTypePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>Edit Payment Type</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="editpaymentTypeForm">\n\n    <div class="form-group">\n      <label class=" label">Payment Type</label>\n      <input type="text" placeholder="Enter Payment Type" formControlName="name" class="form-control">\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Payment Type Description</label>\n      <textarea placeholder="Enter Payment Type Description" formControlName="description" class="form-control"></textarea>\n    </div>\n\n    <hr>\n\n    <div padding>\n      <button ion-button block size="large" type="button" expand="block" (click)="update()"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Edit Payment Type</button>\n    </div>\n\n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-payment-type\edit-payment-type\edit-payment-type.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */]])
    ], EditPaymentTypePage);
    return EditPaymentTypePage;
}());

//# sourceMappingURL=edit-payment-type.js.map

/***/ }),

/***/ 463:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManagePaymentModePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__add_payment_mode_add_payment_mode__ = __webpack_require__(464);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__edit_payment_mode_edit_payment_mode__ = __webpack_require__(465);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_toast__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








/**
 * Generated class for the ManagePaymentModePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManagePaymentModePage = /** @class */ (function () {
    function ManagePaymentModePage(navCtrl, navParams, requestLoad, actionSheetController, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.toast = toast;
        this.getPaymentMode();
    }
    ManagePaymentModePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManagePaymentModePage');
    };
    ManagePaymentModePage.prototype.getPaymentMode = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getPaymentModeList().subscribe(function (res) {
            _this.loader.hide();
            console.log('>>>>Hello res', res);
            var data = res.json();
            _this.modes = data.results;
        }, function (err) {
            _this.loader.hide();
            console.log('>>>>Hello err', err);
        });
    };
    ManagePaymentModePage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_3__home_home__["a" /* HomePage */]);
    };
    ManagePaymentModePage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Actions',
                //   buttons: [{
                //     text: 'Add Payment Mode',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__add_payment_mode_add_payment_mode__["a" /* AddPaymentModePage */]);
                return [2 /*return*/];
            });
        });
    };
    ManagePaymentModePage.prototype.presentActionSheet = function (userData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit Payment Mode',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__edit_payment_mode_edit_payment_mode__["a" /* EditPaymentModePage */], { data: userData });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deletePaymentMode(userData._id);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManagePaymentModePage.prototype.deletePaymentMode = function (id) {
        var _this = this;
        var conf = confirm('Are you sure you want to delete this payement mode ?');
        if (conf) {
            this.loader.show();
            this.requestLoad.deletePaymentMode(id).subscribe(function (res) {
                _this.loader.hide();
                _this.toast.show({ 'message': 'Deleted Successfully.' });
                _this.getPaymentMode();
            }, function (err) {
                _this.loader.hide();
                console.log("error");
            });
        }
    };
    ManagePaymentModePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-payment-mode',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-payment-mode\manage-payment-mode.html"*/'<!--\n  Generated template for the ManagePaymentModePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Manage Payment Mode</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-card *ngFor="let mode of modes; let i = index">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(mode, $event)"></ion-icon>\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ i + 1 }} {{ mode.name  }}</span><br>\n      </p>\n\n      <div padding>\n        <ion-row>\n          <ion-col col-12>\n            <span><b>Description: </b> {{ mode.description  }}</span>\n          </ion-col>\n        </ion-row>\n      </div>\n      \n    </ion-card-content>\n  </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-payment-mode\manage-payment-mode.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_toast__["a" /* ToastProvider */]])
    ], ManagePaymentModePage);
    return ManagePaymentModePage;
}());

//# sourceMappingURL=manage-payment-mode.js.map

/***/ }),

/***/ 464:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddPaymentModePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_request_load__ = __webpack_require__(14);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the AddPaymentModePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddPaymentModePage = /** @class */ (function () {
    function AddPaymentModePage(navCtrl, navParams, fb, requestLoad, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.addpaymentModeForm = this.fb.group({
            name: [''],
            description: ['']
        });
    }
    AddPaymentModePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddPaymentModePage');
    };
    AddPaymentModePage.prototype.save = function () {
        var _this = this;
        var val = this.addpaymentModeForm.value;
        var obj = {
            name: val.name,
            description: val.description
        };
        this.loader.show();
        this.requestLoad.addPaymentMode(obj).subscribe(function (res) {
            _this.loader.hide();
            _this.toast.show({ 'message': 'Added Successfully.' });
            _this.navCtrl.push('ManagePaymentModePage');
        }, function (err) {
            _this.loader.hide();
            console.log('>>>>err', err);
        });
    };
    AddPaymentModePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-payment-mode',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-payment-mode\add-payment-mode\add-payment-mode.html"*/'<!--\n  Generated template for the AddPaymentModePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>Add Payment Mode</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="addpaymentModeForm">\n\n    <div class="form-group">\n      <label class=" label">Payment Mode</label>\n      <input type="text" placeholder="Enter Payment Mode" formControlName="name" class="form-control">\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Payment Mode Description</label>\n      <textarea placeholder="Enter Payment Mode Description" formControlName="description" class="form-control"></textarea>\n    </div>\n\n    <hr>\n\n    <div padding>\n      <button ion-button block size="large" type="button" expand="block" (click)="save()"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Payment Mode</button>\n    </div>\n\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-payment-mode\add-payment-mode\add-payment-mode.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_5__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_toast__["a" /* ToastProvider */]])
    ], AddPaymentModePage);
    return AddPaymentModePage;
}());

//# sourceMappingURL=add-payment-mode.js.map

/***/ }),

/***/ 465:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditPaymentModePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the EditPaymentModePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditPaymentModePage = /** @class */ (function () {
    function EditPaymentModePage(navCtrl, navParams, fb, requestLoad, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.details = this.navParams.get('data');
        this.editpaymentModeForm = this.fb.group({
            name: [''],
            description: ['']
        });
        this.editpaymentModeForm.controls['name'].setValue(this.details.name);
        this.editpaymentModeForm.controls['description'].setValue(this.details.description);
    }
    EditPaymentModePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddPaymentModePage');
    };
    EditPaymentModePage.prototype.update = function () {
        var _this = this;
        var val = this.editpaymentModeForm.value;
        var obj = {
            name: val.name,
            description: val.description
        };
        this.loader.show();
        this.requestLoad.editPaymentMode(obj, this.details._id).subscribe(function (res) {
            _this.loader.hide();
            _this.toast.show({ 'message': 'Updated Successfully.' });
            _this.navCtrl.push('ManagePaymentModePage');
        }, function (err) {
            _this.loader.hide();
            console.log('>>>>err', err);
        });
    };
    EditPaymentModePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-payment-mode',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-payment-mode\edit-payment-mode\edit-payment-mode.html"*/'<!--\n  Generated template for the EditPaymentModePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>Edit Payment Mode</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="editpaymentModeForm">\n\n    <div class="form-group">\n      <label class=" label">Payment Mode</label>\n      <input type="text" placeholder="Enter Payment Mode" formControlName="name" class="form-control">\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Payment Mode Description</label>\n      <textarea placeholder="Enter Payment Mode Description" formControlName="description" class="form-control"></textarea>\n    </div>\n\n    <hr>\n\n    <div padding>\n      <button ion-button block size="large" type="button" expand="block" (click)="update()"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Edit Payment Mode</button>\n    </div>\n\n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-payment-mode\edit-payment-mode\edit-payment-mode.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */]])
    ], EditPaymentModePage);
    return EditPaymentModePage;
}());

//# sourceMappingURL=edit-payment-mode.js.map

/***/ }),

/***/ 466:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageCancelReasonsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__add_cancel_reasons_add_cancel_reasons__ = __webpack_require__(467);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__edit_cancel_reasons_edit_cancel_reasons__ = __webpack_require__(468);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








/**
 * Generated class for the ManageCancelReasonsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageCancelReasonsPage = /** @class */ (function () {
    function ManageCancelReasonsPage(navCtrl, navParams, requestLoad, actionSheetController, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.toast = toast;
        this.page_name = this.navParams.get('name');
        console.log('>>>>>>.Page_name', this.page_name);
        this.getCancelReasons();
    }
    ManageCancelReasonsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManageCancelReasonsPage');
    };
    ManageCancelReasonsPage.prototype.getCancelReasons = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getCancelReasons(this.page_name).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.reasons = data.results;
        }, function (err) {
            _this.loader.hide();
            console.log('>>>>Hello err', err);
        });
    };
    ManageCancelReasonsPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */]);
    };
    ManageCancelReasonsPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var pageName, actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        pageName = 'Add ' + this.page_name + ' Cancel Reasons';
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: pageName,
                                        icon: 'add',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__add_cancel_reasons_add_cancel_reasons__["a" /* AddCancelReasonsPage */], { page: _this.page_name });
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageCancelReasonsPage.prototype.presentActionSheet = function (userData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var pageName, actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        pageName = 'Edit ' + this.page_name + ' Cancel Reasons';
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: pageName,
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__edit_cancel_reasons_edit_cancel_reasons__["a" /* EditCancelReasonsPage */], { data: userData, page: _this.page_name });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deleteCancelReason(userData._id);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageCancelReasonsPage.prototype.deleteCancelReason = function (id) {
        var _this = this;
        var conf = confirm('Are you sure you want to delete this reason ?');
        if (conf) {
            this.loader.show();
            this.requestLoad.deleteCancelReason(id).subscribe(function (res) {
                _this.loader.hide();
                _this.toast.show({ 'message': 'Deleted Successfully.' });
                _this.getCancelReasons();
            }, function (err) {
                _this.loader.hide();
                console.log("error");
            });
        }
    };
    ManageCancelReasonsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-cancel-reasons',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-cancel-reasons\manage-cancel-reasons.html"*/'<!--\n  Generated template for the ManageCancelReasonsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>{{page_name + \' Cancel Reasons\'}}</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="more" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n  <ion-card *ngFor="let r of reasons; let i = index">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(r, $event)"></ion-icon>\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ i + 1 }}</span><br>\n      </p>\n\n      <div padding>\n        <ion-row>\n          <ion-col col-12>\n            <span><b>Cancel Reason: </b> {{ r.cancel_reason }}</span>\n          </ion-col>\n        </ion-row>\n      </div>\n      \n    </ion-card-content>\n  </ion-card>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-cancel-reasons\manage-cancel-reasons.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_toast__["a" /* ToastProvider */]])
    ], ManageCancelReasonsPage);
    return ManageCancelReasonsPage;
}());

//# sourceMappingURL=manage-cancel-reasons.js.map

/***/ }),

/***/ 467:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddCancelReasonsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the AddCancelReasonsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddCancelReasonsPage = /** @class */ (function () {
    function AddCancelReasonsPage(navCtrl, navParams, fb, requestLoad, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.page_name = this.navParams.get('page');
        console.log('>>>>PageName', this.page_name);
        this.cancelReasonForm = this.fb.group({
            cancel_reason: ['']
        });
    }
    AddCancelReasonsPage.prototype.ionViewDidLoad = function () {
    };
    AddCancelReasonsPage.prototype.save = function () {
        var _this = this;
        var val = this.cancelReasonForm.value;
        var obj = {
            name: this.page_name,
            cancel_reason: val.cancel_reason
        };
        this.loader.show();
        this.requestLoad.addCancelReason(obj).subscribe(function (res) {
            _this.loader.hide();
            _this.toast.show({ 'message': 'Added Successfully.' });
            _this.navCtrl.push('ManageCancelReasonsPage', { name: _this.page_name });
        }, function (err) {
            _this.loader.hide();
            console.log('>>>>err', err);
        });
    };
    AddCancelReasonsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-cancel-reasons',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-cancel-reasons\add-cancel-reasons\add-cancel-reasons.html"*/'<!--\n  Generated template for the AddCancelReasonsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>{{ \'Add \' + page_name + \' Cancel Reasons\'}}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="cancelReasonForm">\n\n    <div class="form-group">\n      <label class=" label">Cancel Reason</label>\n      <input type="text" placeholder="Enter Cancel Reason" formControlName="cancel_reason" class="form-control">\n    </div>\n\n\n    <div padding>\n      <button ion-button block size="large" type="button" expand="block" (click)="save()"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;{{ \'Add \' + page_name + \' Cancel Reasons\'}}</button>\n    </div>\n\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-cancel-reasons\add-cancel-reasons\add-cancel-reasons.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */]])
    ], AddCancelReasonsPage);
    return AddCancelReasonsPage;
}());

//# sourceMappingURL=add-cancel-reasons.js.map

/***/ }),

/***/ 468:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditCancelReasonsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/**
 * Generated class for the EditCancelReasonsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditCancelReasonsPage = /** @class */ (function () {
    function EditCancelReasonsPage(navCtrl, navParams, fb, requestLoad, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.details = this.navParams.get('data');
        this.page_name = this.navParams.get('page');
        this.cancelReasonForm = this.fb.group({
            cancel_reason: ['']
        });
        this.cancelReasonForm.controls['cancel_reason'].setValue(this.details.cancel_reason);
    }
    EditCancelReasonsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditCancelReasonsPage');
    };
    EditCancelReasonsPage.prototype.update = function () {
        var _this = this;
        var val = this.cancelReasonForm.value;
        var obj = {
            name: this.page_name,
            cancel_reason: val.cancel_reason
        };
        this.loader.show();
        this.requestLoad.editCancelReason(obj, this.details._id).subscribe(function (res) {
            _this.loader.hide();
            _this.toast.show({ 'message': 'Updated Successfully.' });
            _this.navCtrl.push('ManageCancelReasonsPage', { name: _this.page_name });
        }, function (err) {
            _this.loader.hide();
            console.log('>>>>err', err);
        });
    };
    EditCancelReasonsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-cancel-reasons',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-cancel-reasons\edit-cancel-reasons\edit-cancel-reasons.html"*/'<!--\n  Generated template for the EditCancelReasonsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>{{ \'Edit \' + page_name + \' Cancel Reasons\'}}</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="cancelReasonForm">\n\n    <div class="form-group">\n      <label class=" label">Cancel Reason</label>\n      <input type="text" placeholder="Enter Cancel Reason" formControlName="cancel_reason" class="form-control">\n    </div>\n\n\n    <div padding>\n      <button ion-button block size="large" type="button" expand="block" (click)="update()"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;{{ \'Edit \' + page_name + \' Cancel Reasons\'}}</button>\n    </div>\n\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-cancel-reasons\edit-cancel-reasons\edit-cancel-reasons.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */]])
    ], EditCancelReasonsPage);
    return EditCancelReasonsPage;
}());

//# sourceMappingURL=edit-cancel-reasons.js.map

/***/ }),

/***/ 469:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageAccountTypesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__add_account_type_add_account_type__ = __webpack_require__(470);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__edit_account_type_edit_account_type__ = __webpack_require__(471);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








/**
 * Generated class for the ManageAccountTypesPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageAccountTypesPage = /** @class */ (function () {
    function ManageAccountTypesPage(navCtrl, navParams, requestLoad, actionSheetController, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.toast = toast;
        this.getTypes();
    }
    ManageAccountTypesPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManagePaymentModePage');
    };
    ManageAccountTypesPage.prototype.getTypes = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getAccountTypes().subscribe(function (res) {
            _this.loader.hide();
            console.log('>>>>Hello res', res);
            var data = res.json();
            _this.types = data.results;
        }, function (err) {
            _this.loader.hide();
            console.log('>>>>Hello err', err);
        });
    };
    ManageAccountTypesPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */]);
    };
    ManageAccountTypesPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Action',
                //   buttons: [{
                //     text: 'Add',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__add_account_type_add_account_type__["a" /* AddAccountTypePage */]);
                return [2 /*return*/];
            });
        });
    };
    ManageAccountTypesPage.prototype.presentActionSheet = function (userData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__edit_account_type_edit_account_type__["a" /* EditAccountTypePage */], { data: userData });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deleteType(userData._id);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageAccountTypesPage.prototype.deleteType = function (id) {
        var _this = this;
        var conf = confirm('Are you sure you want to delete this type ?');
        if (conf) {
            this.loader.show();
            this.requestLoad.deleteAccountType(id).subscribe(function (res) {
                _this.loader.hide();
                _this.toast.show({ 'message': 'Deleted Successfully.' });
                _this.getTypes();
            }, function (err) {
                _this.loader.hide();
                console.log("error");
            });
        }
    };
    ManageAccountTypesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-account-types',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-account-types\manage-account-types.html"*/'<!--\n  Generated template for the ManageAccountTypesPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Accounts Types</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n          <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-card *ngFor="let type of types; let i = index">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(type, $event)"></ion-icon>\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ i + 1 }} {{ type.name }}</span>\n      </p>\n\n      <!-- <div padding>\n        <ion-row>\n          <ion-col col-12>\n            <span><b>Field: </b> {{ type.field  }}</span>\n          </ion-col>\n        </ion-row>\n      </div> -->\n      \n    </ion-card-content>\n  </ion-card>\n\n</ion-content>'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-account-types\manage-account-types.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_toast__["a" /* ToastProvider */]])
    ], ManageAccountTypesPage);
    return ManageAccountTypesPage;
}());

//# sourceMappingURL=manage-account-types.js.map

/***/ }),

/***/ 470:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddAccountTypePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the AddAccountTypePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddAccountTypePage = /** @class */ (function () {
    function AddAccountTypePage(navCtrl, navParams, fb, requestLoad, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.submitted = false;
        this.form = this.fb.group({
            name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required],
            field: ['']
        });
    }
    AddAccountTypePage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */]);
    };
    AddAccountTypePage.prototype.save = function (isValid) {
        var _this = this;
        this.submitted = true;
        if (isValid) {
            var val = this.form.value;
            var obj = {
                name: val.name,
            };
            this.loader.show();
            this.requestLoad.addAccountType(obj).subscribe(function (res) {
                _this.loader.hide();
                _this.toast.show({ 'message': 'Added Successfully.' });
                _this.navCtrl.push('ManageAccountTypesPage');
            }, function (err) {
                _this.loader.hide();
                console.log('>>>>err', err);
            });
        }
    };
    AddAccountTypePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-account-type',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-account-types\add-account-type\add-account-type.html"*/'<!--\n  Generated template for the AddAccountTypePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add Account Type</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="form" (ngSubmit)="save(form.valid)" novalidate>\n\n    <div class="form-group">\n      <label class=" label">Name</label>\n      <input type="text" placeholder="Enter type name" formControlName="name" class="form-control">\n\n      <div class="error-msg" *ngIf="submitted || (form.controls.name.invalid && (form.controls.name.dirty || form.controls.name.touched))">\n        <div *ngIf="form.controls[\'name\'].hasError(\'required\')">\n          <label>Name is required.</label>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class="form-group">\n      <label class=" label">Field</label>\n      <input placeholder="Enter type field" formControlName="field" class="form-control">\n    </div> -->\n\n    <!-- <hr> -->\n\n    <div padding>\n      <button ion-button block size="large" type="submit" expand="block" ><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Type</button>\n    </div>\n\n  </form>\n\n</ion-content>\n  '/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-account-types\add-account-type\add-account-type.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */]])
    ], AddAccountTypePage);
    return AddAccountTypePage;
}());

//# sourceMappingURL=add-account-type.js.map

/***/ }),

/***/ 471:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditAccountTypePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the EditAccountTypePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditAccountTypePage = /** @class */ (function () {
    function EditAccountTypePage(navCtrl, navParams, fb, requestLoad, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.submitted = false;
        this.details = this.navParams.get('data');
        console.log('>>>Details', this.details);
        this.form = this.fb.group({
            name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required],
            field: ['']
        });
        this.form.controls['name'].setValue(this.details.name);
        // this.form.controls['field'].setValue(this.details.field);
    }
    EditAccountTypePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddPaymentModePage');
    };
    EditAccountTypePage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */]);
    };
    EditAccountTypePage.prototype.update = function (isValid) {
        var _this = this;
        this.submitted = true;
        if (isValid) {
            var val = this.form.value;
            var obj = {
                name: val.name,
            };
            this.loader.show();
            this.requestLoad.editAccountType(obj, this.details._id).subscribe(function (res) {
                _this.loader.hide();
                _this.toast.show({ 'message': 'Updated Successfully.' });
                _this.navCtrl.push('ManageAccountTypesPage');
            }, function (err) {
                _this.loader.hide();
                console.log('>>>>err', err);
            });
        }
    };
    EditAccountTypePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-account-type',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-account-types\edit-account-type\edit-account-type.html"*/'<!--\n  Generated template for the EditAccountTypePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit Account Type</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="form" (ngSubmit)="update(form.valid)" novalidate>\n\n    <div class="form-group">\n      <label class=" label">Name</label>\n      <input type="text" placeholder="Enter type name" formControlName="name" class="form-control">\n\n      <div class="error-msg" *ngIf="submitted || (form.controls.name.invalid && (form.controls.name.dirty || form.controls.name.touched))">\n        <div *ngIf="form.controls[\'name\'].hasError(\'required\')">\n          <label>Name is required.</label>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class="form-group">\n      <label class=" label">Field</label>\n      <input placeholder="Enter type field" formControlName="field" class="form-control">\n    </div> -->\n\n    <!-- <hr> -->\n\n    <div padding>\n      <button ion-button block size="large" type="submit" expand="block" ><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Edit Type</button>\n    </div>\n\n  </form>\n\n</ion-content>\n  '/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-account-types\edit-account-type\edit-account-type.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */]])
    ], EditAccountTypePage);
    return EditAccountTypePage;
}());

//# sourceMappingURL=edit-account-type.js.map

/***/ }),

/***/ 472:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageAccountCategoriesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__add_account_category_add_account_category__ = __webpack_require__(473);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__edit_account_category_edit_account_category__ = __webpack_require__(474);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








/**
 * Generated class for the ManageAccountCategoriesPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageAccountCategoriesPage = /** @class */ (function () {
    function ManageAccountCategoriesPage(navCtrl, navParams, requestLoad, actionSheetController, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.toast = toast;
        this.getCategories();
    }
    ManageAccountCategoriesPage.prototype.getCategories = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getAccountCategories().subscribe(function (res) {
            _this.loader.hide();
            console.log('>>>>Hello res', res);
            var data = res.json();
            _this.categories = data.results;
        }, function (err) {
            _this.loader.hide();
            console.log('>>>>Hello err', err);
        });
    };
    ManageAccountCategoriesPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_5__home_home__["a" /* HomePage */]);
    };
    ManageAccountCategoriesPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                // const actionSheet = await this.actionSheetController.create({
                //   title: 'Action',
                //   buttons: [{
                //     text: 'Add',
                //     icon: 'add',
                //     handler: () => {
                this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__add_account_category_add_account_category__["a" /* AddAccountCategoryPage */]);
                return [2 /*return*/];
            });
        });
    };
    ManageAccountCategoriesPage.prototype.presentActionSheet = function (userData, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Edit',
                                        icon: 'create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__edit_account_category_edit_account_category__["a" /* EditAccountCategoryPage */], { data: userData });
                                        }
                                    }, {
                                        text: 'Delete',
                                        icon: 'trash',
                                        handler: function () {
                                            _this.deleteCategory(userData._id);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManageAccountCategoriesPage.prototype.deleteCategory = function (id) {
        var _this = this;
        var conf = confirm('Are you sure you want to delete this category ?');
        if (conf) {
            this.loader.show();
            this.requestLoad.deleteAccountCategory(id).subscribe(function (res) {
                _this.loader.hide();
                _this.toast.show({ 'message': 'Deleted Successfully.' });
                _this.getCategories();
            }, function (err) {
                _this.loader.hide();
                console.log("error");
            });
        }
    };
    ManageAccountCategoriesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-account-categories',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-account-categories\manage-account-categories.html"*/'<!--\n  Generated template for the ManageAccountCategoriesPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Accounts Categories</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="addActionSheet()" >\n            <ion-icon name="add" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <ion-card *ngFor="let category of categories; let i = index">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(category, $event)"></ion-icon>\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ i + 1 }} {{ category.name  }}</span>\n      </p>\n\n      <!-- <div padding>\n        <ion-row>\n          <ion-col col-12>\n            <span><b>Field: </b> {{ category.field  }}</span>\n          </ion-col>\n        </ion-row>\n      </div> -->\n      \n    </ion-card-content>\n  </ion-card>\n\n</ion-content>'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-account-categories\manage-account-categories.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_toast__["a" /* ToastProvider */]])
    ], ManageAccountCategoriesPage);
    return ManageAccountCategoriesPage;
}());

//# sourceMappingURL=manage-account-categories.js.map

/***/ }),

/***/ 473:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddAccountCategoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the AddAccountCategoryPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddAccountCategoryPage = /** @class */ (function () {
    function AddAccountCategoryPage(navCtrl, navParams, fb, requestLoad, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.submitted = false;
        this.form = this.fb.group({
            name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required],
            field: ['']
        });
    }
    AddAccountCategoryPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddAccountCategoryPage');
    };
    AddAccountCategoryPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */]);
    };
    AddAccountCategoryPage.prototype.save = function (isValid) {
        var _this = this;
        this.submitted = true;
        if (isValid) {
            var val = this.form.value;
            var obj = {
                name: val.name,
            };
            this.loader.show();
            this.requestLoad.addAccountCategory(obj).subscribe(function (res) {
                _this.loader.hide();
                _this.toast.show({ 'message': 'Added Successfully.' });
                _this.navCtrl.push('ManageAccountCategoriesPage');
            }, function (err) {
                _this.loader.hide();
                console.log('>>>>err', err);
            });
        }
    };
    AddAccountCategoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-account-category',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-account-categories\add-account-category\add-account-category.html"*/'<!--\n  Generated template for the AddAccountCategoryPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n\n    <ion-toolbar>\n      <ion-title>Add Account Category</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="form" (ngSubmit)="save(form.valid)" novalidate>\n\n    <div class="form-group">\n      <label class=" label">Name</label>\n      <input type="text" placeholder="Enter category name" formControlName="name" class="form-control">\n\n      <div class="error-msg" *ngIf="submitted || (form.controls.name.invalid && (form.controls.name.dirty || form.controls.name.touched))">\n        <div *ngIf="form.controls[\'name\'].hasError(\'required\')">\n          <label>Name is required.</label>\n        </div>\n      </div>\n    </div>\n<!-- \n    <div class="form-group">\n      <label class=" label">Field</label>\n      <input placeholder="Enter category field" formControlName="field" class="form-control">\n    </div> -->\n\n\n    <div padding>\n      <button ion-button block size="large" type="submit" expand="block" ><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Category</button>\n    </div>\n\n  </form>\n\n</ion-content>\n    '/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-account-categories\add-account-category\add-account-category.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_5__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_toast__["a" /* ToastProvider */]])
    ], AddAccountCategoryPage);
    return AddAccountCategoryPage;
}());

//# sourceMappingURL=add-account-category.js.map

/***/ }),

/***/ 474:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditAccountCategoryPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the EditAccountCategoryPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditAccountCategoryPage = /** @class */ (function () {
    function EditAccountCategoryPage(navCtrl, navParams, fb, requestLoad, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.submitted = false;
        this.details = this.navParams.get('data');
        console.log('>>>Details', this.details);
        this.form = this.fb.group({
            name: [''],
            field: ['']
        });
        this.form.controls['name'].setValue(this.details.name);
        // this.form.controls['field'].setValue(this.details.field);
    }
    EditAccountCategoryPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_6__home_home__["a" /* HomePage */]);
    };
    EditAccountCategoryPage.prototype.update = function (isValid) {
        var _this = this;
        this.submitted = true;
        if (isValid) {
            var val = this.form.value;
            var obj = {
                name: val.name,
            };
            this.loader.show();
            this.requestLoad.editAccountCategory(obj, this.details._id).subscribe(function (res) {
                _this.loader.hide();
                _this.toast.show({ 'message': 'Updated Successfully.' });
                _this.navCtrl.push('ManageAccountCategoriesPage');
            }, function (err) {
                _this.loader.hide();
                console.log('>>>>err', err);
            });
        }
    };
    EditAccountCategoryPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-account-category',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-account-categories\edit-account-category\edit-account-category.html"*/'<!--\n  Generated template for the EditAccountCategoryPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit Account Category</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="form" (ngSubmit)="update(form.valid)" novalidate>\n\n    <div class="form-group">\n      <label class=" label">Name</label>\n      <input type="text" placeholder="Enter category name" formControlName="name" class="form-control">\n\n      <div class="error-msg" *ngIf="submitted || (form.controls.name.invalid && (form.controls.name.dirty || form.controls.name.touched))">\n        <div *ngIf="form.controls[\'name\'].hasError(\'required\')">\n          <label>Name is required.</label>\n        </div>\n      </div>\n    </div>\n<!-- \n    <div class="form-group">\n      <label class=" label">Field</label>\n      <input placeholder="Enter category field" formControlName="field" class="form-control">\n    </div> -->\n\n    <hr>\n\n    <div padding>\n      <button ion-button block size="large" type="submit" expand="block" ><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Edit Category</button>\n    </div>\n\n  </form>\n\n</ion-content>'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-account-categories\edit-account-category\edit-account-category.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */]])
    ], EditAccountCategoryPage);
    return EditAccountCategoryPage;
}());

//# sourceMappingURL=edit-account-category.js.map

/***/ }),

/***/ 475:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddAccountMasterPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__helpers_common__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__manage_accounts_master__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_accounts__ = __webpack_require__(34);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the AddAccountMasterPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddAccountMasterPage = /** @class */ (function () {
    function AddAccountMasterPage(navCtrl, navParams, loader, toast, fb, events, trucks, admin, mapsAPILoader, ngZone, accounts) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.events = events;
        this.trucks = trucks;
        this.admin = admin;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.accounts = accounts;
        this.main = true;
        this.address = false;
        this.drcr = ['Debit', 'Credit'];
        this.underLedgers = [];
        this.Groups = [];
        this.cateList = [];
        this.accountTypesList = [];
        // Search query for Accounts Type  Name list
        this.accountTypes = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.admin.searchAccountTypes(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_11_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Accounts Category Name list
        this.accountsCategory = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.admin.searchAccountsCategory(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_11_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_11_rxjs__["Observable"].of([]);
            }
        };
        this.truckFlag = false;
        this.accountNameList = [];
        this.truckNoList = [];
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_11_rxjs__["Observable"].of([]);
            }
        };
        this.addForm = this.fb.group({
            account_name: [''],
            agency_name: [''],
            truck_no: [''],
            category: [''],
            group: [''],
            accounts_type: [''],
            under_ledger: [''],
            gst_number: [''],
            pan_number: [''],
            vendor_code: [''],
            contact_person: [''],
            email: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].email],
            mobile_1: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            mobile_2: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            opening_balance: [''],
            o_drcr: [''],
            closing_balance: [''],
            c_drcr: [''],
            billing_street_1: [''],
            billing_street_2: [''],
            billing_city: [''],
            billing_state: [''],
            billing_pin: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(6), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(6)])],
            billing_country: [''],
            billing_phone: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            shipping_street_1: [''],
            shipping_street_2: [''],
            shipping_city: [''],
            shipping_state: [''],
            shipping_pin: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(6), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(6)])],
            shipping_country: [''],
            shipping_phone: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])]
        });
        this.getAccountTypesList();
        this.getAccountsCategoryList();
    }
    AddAccountMasterPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddAccountMasterPage');
    };
    AddAccountMasterPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    AddAccountMasterPage.prototype.getAccountsCategoryList = function () {
        var _this = this;
        this.admin.getAccountsCategoryList().subscribe(function (res) {
            var data = res.json();
            _this.cateList = data.results;
            console.log('Data >>>>>>>', _this.cateList);
            _this.cateList = _this.cateList.slice(0);
            _this.cateList.sort(function (a, b) {
                var x = a.name.toLowerCase();
                var y = b.name.toLowerCase();
                return x < y ? -1 : x > y ? 1 : 0;
            });
            console.log('Sort >>>>>>>', _this.cateList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddAccountMasterPage.prototype.getAccountTypesList = function () {
        var _this = this;
        this.admin.getAccountTypesList().subscribe(function (res) {
            var data = res.json();
            _this.accountTypesList = data.results;
            _this.accountTypesList = _this.accountTypesList.slice(0);
            _this.accountTypesList.sort(function (a, b) {
                var x = a.name.toLowerCase();
                var y = b.name.toLowerCase();
                return x < y ? -1 : x > y ? 1 : 0;
            });
            console.log('Data >>>>>>>', _this.accountTypesList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddAccountMasterPage.prototype.save = function () {
        var _this = this;
        var formData = this.addForm.value;
        // formData.accounts_type = formData.accounts_type.name ? formData.accounts_type.name: formData.accounts_type; 
        // formData.category = formData.category.name ? formData.category.name: formData.category; 
        var gstNumber = formData.gst_number;
        var panNumber = formData.pan_number;
        console.log("STR >>>>", gstNumber.toUpperCase());
        console.log("STR >>>>", panNumber.toUpperCase());
        formData.agency_name = formData.agency_name.agency_name ? formData.agency_name.agency_name : formData.agency_name;
        formData.gst_number = gstNumber.toUpperCase();
        formData.pan_number = panNumber.toUpperCase();
        console.log("Data >>>>", formData);
        this.loader.show();
        this.admin.addAccountsMaster(formData).subscribe(function (res) {
            _this.loader.hide();
            console.log("res >>>>>", res);
            _this.toast.show({ 'message': 'Added successfully.' });
            _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__manage_accounts_master__["a" /* ManageAccountsMasterPage */]);
        }, function (err) {
            _this.loader.hide();
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
    };
    AddAccountMasterPage.prototype.nextAdd = function () {
        var _this = this;
        this.main = false;
        this.address = true;
        this.content.scrollToTop();
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var billingCity = new google.maps.places.Autocomplete(_this.searchElementRef1.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                billingCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = billingCity.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('billingCity').value = pre_city;
                        _this.addForm.controls['billing_city'].setValue(pre_city);
                    });
                });
                var billingState = new google.maps.places.Autocomplete(_this.searchElementRef2.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                billingState.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = billingState.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        document.getElementById('billingState').value = components.administrative_area_level_1;
                        _this.addForm.controls['billing_state'].setValue(components.administrative_area_level_1);
                        _this.addForm.controls['billing_country'].setValue(components.country);
                    });
                });
                var shippingCity = new google.maps.places.Autocomplete(_this.searchElementRef3.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                shippingCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = shippingCity.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('shippingCity').value = pre_city;
                        _this.addForm.controls['shipping_city'].setValue(pre_city);
                    });
                });
                var shippingState = new google.maps.places.Autocomplete(_this.searchElementRef4.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                shippingState.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = shippingState.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        document.getElementById('shippingState').value = components.administrative_area_level_1;
                        _this.addForm.controls['shipping_state'].setValue(components.administrative_area_level_1);
                        _this.addForm.controls['shipping_country'].setValue(components.country);
                    });
                });
            });
        }, 2000);
    };
    AddAccountMasterPage.prototype.preMain = function () {
        this.main = true;
        this.address = false;
    };
    AddAccountMasterPage.prototype.radioSelect = function (event) {
        console.log("Here ->", event);
        if (event == "account_name") {
            this.truckFlag = false;
            this.getAccountsNameByAgencyAndTruck();
        }
        if (event == "truck_no") {
            this.accountNameList = [];
            this.truckFlag = true;
        }
    };
    AddAccountMasterPage.prototype.getAccountsNameByAgencyAndTruck = function () {
        var _this = this;
        this.accountNameList = [];
        var filters = {
            agency_name: '',
            truck_no: ''
        };
        if (this.addForm.value.agency_name) {
            filters.agency_name = this.addForm.value.agency_name.agency_name;
        }
        if (this.addForm.value.truck_no) {
            filters.truck_no = this.addForm.value.truck_no;
        }
        this.loader.show();
        this.accounts.getAccountsNameByAgencyAndTruck(filters).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            _this.accountNameList = dataList;
            _this.accountNameList = _this.accountNameList.slice(0);
            _this.accountNameList.sort(function (a, b) {
                var x = a.toLowerCase();
                var y = b.toLowerCase();
                return x < y ? -1 : x > y ? 1 : 0;
            });
            console.log("mainAccoutsList >>>>", dataList);
            _this.loader.hide();
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddAccountMasterPage.prototype.selectTruck = function () {
        this.getAccountsNameByAgencyAndTruck();
    };
    AddAccountMasterPage.prototype.getTruckNoByAgencyLedger = function () {
        var _this = this;
        var agencyName = this.addForm.value.agency_name.agency_name ? this.addForm.value.agency_name.agency_name : this.addForm.value.agency_name;
        this.truckNoList = [];
        this.loader.show();
        this.accounts.getTruckNoByAgencyLedger(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            _this.truckNoList = dataList;
            _this.truckNoList = _this.truckNoList.slice(0);
            _this.truckNoList.sort(function (a, b) {
                var x = a.toLowerCase();
                var y = b.toLowerCase();
                return x < y ? -1 : x > y ? 1 : 0;
            });
            console.log("truck No List >>>>", _this.truckNoList);
            _this.loader.hide();
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search1"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddAccountMasterPage.prototype, "searchElementRef1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search2"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddAccountMasterPage.prototype, "searchElementRef2", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search3"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddAccountMasterPage.prototype, "searchElementRef3", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search4"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddAccountMasterPage.prototype, "searchElementRef4", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
    ], AddAccountMasterPage.prototype, "content", void 0);
    AddAccountMasterPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-account-master',template:/*ion-inline-start:"D:\truck\src\pages\manage-accounts-master\add-account-master\add-account-master.html"*/'<!--\n  Generated template for the AddAccountMasterPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add Account Master</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="addForm">\n    <div *ngIf="main">\n      <!-- <div class="form-group">\n        <label class=" label">Account Name</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="account_name" class="form-control">\n      </div> -->\n\n      <div class="form-group">\n        <label class=" label">Agency Name</label>\n        <input autocomplete="off"\n          class="form-control"\n          ng2-auto-complete\n          [source]="agencyName.bind(this)"\n          list-formatter="agency_name"\n          formControlName="agency_name" \n          (change)="getTruckNoByAgencyLedger()" \n        /> \n\n      </div>\n\n      <br>\n      <div class="width-full">\n      <b>Select Any One for Accounts Name</b>\n      </div>\n      <ion-list radio-group>      \n        <ion-item>\n          <ion-label>Account Name</ion-label>\n          <ion-radio value="account_name" (ionSelect)="radioSelect($event)"></ion-radio>\n        </ion-item>\n    \n        <ion-item>\n          <ion-label>Truck No</ion-label>\n          <ion-radio value="truck_no" (ionSelect)="radioSelect($event)"></ion-radio>\n        </ion-item>\n      </ion-list>\n\n      <div class="form-group" *ngIf="truckFlag">\n        <label class=" label">Truck No</label>\n        <select class="form-control drop-down" name="truck_no" formControlName="truck_no" (change)="selectTruck()" >\n            <option value="">Select Truck No</option>\n            <option *ngFor="let tnl of truckNoList" [ngValue]="tnl">{{tnl}}</option>\n          </select>\n        <!-- <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="truckNo.bind(this)"\n          list-formatter="truck_no"\n          formControlName="truck_no"  \n          (change)="selectTruck()"        \n        /> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Account Name</label>\n        <select class="form-control drop-down" name="account_name" formControlName="account_name" >\n          <option value="">Select Account Name</option>\n          <option *ngFor="let accountName of accountNameList" [ngValue]="accountName">{{accountName}}</option>\n        </select>\n      </div>\n      \n      <div class="form-group">\n        <label class=" label">Category</label>\n        <select class="form-control drop-down" name="category" formControlName="category" >\n          <option value="">Select Category </option>\n          <option *ngFor="let ct of cateList" [ngValue]="ct.name">{{ct.name}}</option>\n        </select>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="category" class="form-control"> -->\n        <!-- <input autocomplete="off"\n          class="form-control"\n          ng2-auto-complete\n          [source]="accountsCategory.bind(this)"\n          list-formatter="name"\n          formControlName="category"          \n        /> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Group</label>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="group" class="form-control"> -->\n        <select class="form-control drop-down" name="group" formControlName="group" >\n          <option value="">Select Group </option>\n          <option *ngFor="let gr of Groups" [ngValue]="gr">{{gr}}</option>\n        </select>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Account Type</label>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="accounts_type" class="form-control"> -->\n        <!-- <input autocomplete="off"\n          class="form-control"\n          ng2-auto-complete\n          [source]="accountTypes.bind(this)"\n          list-formatter="name"\n          formControlName="accounts_type"          \n        /> -->\n        <select class="form-control drop-down" name="accounts_type" formControlName="accounts_type" >\n          <option value="">Select Category </option>\n          <option *ngFor="let atl of accountTypesList" [ngValue]="atl.name">{{atl.name}}</option>\n        </select>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Under Ledger</label>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="under_ledger" class="form-control"> -->\n        <select class="form-control drop-down" name="group" formControlName="under_ledger" >\n          <option value="">Select Under Ledger </option>\n          <option *ngFor="let accountName of accountNameList" [ngValue]="accountName">{{accountName}}</option>\n        </select>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">GST Number</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="gst_number" class="form-control upper">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Pan Number</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="pan_number" class="form-control upper">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Vendor Code</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="vendor_code" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Contact Person</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="contact_person" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Email</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="email" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.email.invalid && (addForm.controls.email.dirty || addForm.controls.email.touched))">\n        <div *ngIf="addForm.controls[\'email\'].errors.email">\n          <label>Invalid email.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile 1</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="mobile_1" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.mobile_1.invalid && (addForm.controls.mobile_1.dirty || addForm.controls.mobile_1.touched))">\n        <div *ngIf="addForm.controls[\'mobile_1\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'mobile_1\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile 2</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="mobile_2" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.mobile_2.invalid && (addForm.controls.mobile_2.dirty || addForm.controls.mobile_2.touched))">\n        <div *ngIf="addForm.controls[\'mobile_2\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'mobile_2\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Opening Balance</label>\n        <input type="number" placeholder="" autocomplete="off" formControlName="opening_balance" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">O.DrCr</label>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="o_drcr" class="form-control"> -->\n        <select class="form-control drop-down" name="o_drcr" formControlName="o_drcr" >\n            <!-- <option value="">Select Reports To </option> -->\n            <option *ngFor="let dc of drcr" [ngValue]="dc">{{dc}}</option>\n          </select>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Closing Balance</label>\n        <input type="number" placeholder="" autocomplete="off" formControlName="closing_balance" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">C.DrCr</label>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="c_drcr" class="form-control"> -->\n        <select class="form-control drop-down" name="c_drcr" formControlName="c_drcr" >\n          <!-- <option value="">Select Reports To </option> -->\n          <option *ngFor="let dc of drcr" [ngValue]="dc">{{dc}}</option>\n        </select>\n      </div>\n\n      <br>\n      <button ion-button class="next-button" (click)="nextAdd()" type="button" expand="block">Next</button>\n\n    </div>\n\n\n    <div *ngIf="address">\n      <div class="width-full">\n      <label class="fonts-size">Billing Address </label>\n      </div>\n      <div class="form-group margintop15">\n        <label class=" label">Street 1</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="billing_street_1" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Street 2</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="billing_street_2" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">City</label>\n        <input type="text" placeholder=""  autocomplete="off" formControlName="billing_city" class="form-control" id="billingCity" #search1>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">State</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="billing_state" class="form-control" id="billingState" #search2>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Pin</label>\n        <input type="number" placeholder="" autocomplete="off" formControlName="billing_pin" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.billing_pin.invalid && (addForm.controls.billing_pin.dirty || addForm.controls.billing_pin.touched))">\n        <div *ngIf="addForm.controls[\'billing_pin\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 6 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'billing_pin\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 6 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Country</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="billing_country" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Phone</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="billing_phone" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.billing_phone.invalid && (addForm.controls.billing_phone.dirty || addForm.controls.billing_phone.touched))">\n        <div *ngIf="addForm.controls[\'billing_phone\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'billing_phone\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n\n      <br>\n      <!-- <b>Shipping Address</b> -->\n      <div class="width-full margintop15">\n      <label class="fonts-size">Shipping Address </label>\n      </div>\n      <div class="form-group margintop15">\n        <label class=" label">Street 1</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_street_1" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Street 2</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_street_2" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">City</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_city" class="form-control" id="shippingCity" #search3>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">State</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_state" class="form-control" id="shippingState" #search4>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Pin</label>\n        <input type="number" placeholder="" autocomplete="off" formControlName="shipping_pin" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.shipping_pin.invalid && (addForm.controls.shipping_pin.dirty || addForm.controls.shipping_pin.touched))">\n        <div *ngIf="addForm.controls[\'shipping_pin\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 6 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'shipping_pin\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 6 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Country</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_country" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Phone</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_phone" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.shipping_phone.invalid && (addForm.controls.shipping_phone.dirty || addForm.controls.shipping_phone.touched))">\n        <div *ngIf="addForm.controls[\'shipping_phone\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'shipping_phone\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n\n      <br>\n      <button ion-button class="pre-button" (click)="preMain()" type="button" expand="block">Previous</button>\n      <button ion-button class="up-button" (click)="save()" type="submit" expand="block">Add Account Master</button>\n    </div>\n\n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-accounts-master\add-account-master\add-account-master.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_9__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_8__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_7__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_6__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_4__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"],
            __WEBPACK_IMPORTED_MODULE_13__providers_accounts__["a" /* Accounts */]])
    ], AddAccountMasterPage);
    return AddAccountMasterPage;
}());

//# sourceMappingURL=add-account-master.js.map

/***/ }),

/***/ 476:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditAccountMasterPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__helpers_common__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__manage_accounts_master__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_accounts__ = __webpack_require__(34);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the EditAccountMasterPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditAccountMasterPage = /** @class */ (function () {
    function EditAccountMasterPage(navCtrl, navParams, loader, toast, fb, events, trucks, admin, mapsAPILoader, ngZone, accounts) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.events = events;
        this.trucks = trucks;
        this.admin = admin;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.accounts = accounts;
        this.main = true;
        this.address = false;
        this.drcr = ['Debit', 'Credit'];
        this.underLedgers = [];
        this.Groups = [];
        this.cateList = [];
        this.accountTypesList = [];
        this.accName = false;
        this.truNo = false;
        // Search query for Accounts Type  Name list
        this.accountTypes = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.admin.searchAccountTypes(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_12_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Accounts Category Name list
        this.accountsCategory = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.admin.searchAccountsCategory(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_12_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_12_rxjs__["Observable"].of([]);
            }
        };
        this.truckFlag = false;
        this.accountNameList = [];
        this.truckNoList = [];
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_12_rxjs__["Observable"].of([]);
            }
        };
        this.details = this.navParams.get('data');
        if (this.details.truck_no) {
            this.accName = false;
            this.truNo = true;
        }
        else {
            this.accName = true;
            this.truNo = false;
        }
        this.editForm = this.fb.group({
            account_name: [''],
            agency_name: [''],
            truck_no: [''],
            category: [''],
            group: [''],
            accounts_type: [''],
            under_ledger: [''],
            gst_number: [''],
            pan_number: [''],
            vendor_code: [''],
            contact_person: [''],
            email: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].email],
            mobile_1: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            mobile_2: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            opening_balance: [''],
            o_drcr: [''],
            closing_balance: [''],
            c_drcr: [''],
            billing_street_1: [''],
            billing_street_2: [''],
            billing_city: [''],
            billing_state: [''],
            billing_pin: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(6), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(6)])],
            billing_country: [''],
            billing_phone: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            shipping_street_1: [''],
            shipping_street_2: [''],
            shipping_city: [''],
            shipping_state: [''],
            shipping_pin: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(6), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(6)])],
            shipping_country: [''],
            shipping_phone: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])]
        });
        this.getAccountTypesList();
        this.getAccountsCategoryList();
        console.log("details >>>>", this.details);
    }
    EditAccountMasterPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditAccountMasterPage');
        this.editForm.controls['account_name'].setValue(this.details.account_name);
        this.editForm.controls['group'].setValue(this.details.group);
        this.editForm.controls['agency_name'].setValue(this.details.agency_name);
        this.editForm.controls['under_ledger'].setValue(this.details.under_ledger);
        this.editForm.controls['gst_number'].setValue(this.details.gst_number);
        this.editForm.controls['pan_number'].setValue(this.details.pan_number);
        this.editForm.controls['vendor_code'].setValue(this.details.vendor_code);
        this.editForm.controls['contact_person'].setValue(this.details.contact_person);
        this.editForm.controls['email'].setValue(this.details.email);
        this.editForm.controls['mobile_1'].setValue(this.details.mobile_1);
        this.editForm.controls['mobile_2'].setValue(this.details.mobile_2);
        this.editForm.controls['opening_balance'].setValue(this.details.opening_balance);
        this.editForm.controls['o_drcr'].setValue(this.details.o_drcr);
        this.editForm.controls['closing_balance'].setValue(this.details.closing_balance);
        this.editForm.controls['c_drcr'].setValue(this.details.c_drcr);
        this.editForm.controls['billing_street_1'].setValue(this.details.billing_street_1);
        this.editForm.controls['billing_street_2'].setValue(this.details.billing_street_2);
        this.editForm.controls['billing_city'].setValue(this.details.billing_city);
        this.editForm.controls['billing_state'].setValue(this.details.billing_state);
        this.editForm.controls['billing_pin'].setValue(this.details.billing_pin);
        this.editForm.controls['billing_country'].setValue(this.details.billing_country);
        this.editForm.controls['billing_phone'].setValue(this.details.billing_phone);
        this.editForm.controls['shipping_street_1'].setValue(this.details.shipping_street_1);
        this.editForm.controls['shipping_street_2'].setValue(this.details.shipping_street_2);
        this.editForm.controls['shipping_city'].setValue(this.details.shipping_city);
        this.editForm.controls['shipping_state'].setValue(this.details.shipping_state);
        this.editForm.controls['shipping_pin'].setValue(this.details.shipping_pin);
        this.editForm.controls['shipping_country'].setValue(this.details.shipping_country);
        this.editForm.controls['shipping_phone'].setValue(this.details.shipping_phone);
        if (this.details.truck_no) {
            this.truckFlag = true;
            this.accName = false;
            this.truNo = true;
            this.getTruckNoByAgencyLedger();
            this.getAccountsNameByAgencyAndTruck();
        }
        else {
            this.accName = true;
            this.truNo = false;
            this.getAccountsNameByAgencyAndTruck();
        }
    };
    EditAccountMasterPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    EditAccountMasterPage.prototype.getAccountsCategoryList = function () {
        var _this = this;
        this.admin.getAccountsCategoryList().subscribe(function (res) {
            var data = res.json();
            _this.cateList = data.results;
            console.log('Data >>>>>>>', _this.cateList);
            _this.cateList = _this.cateList.slice(0);
            _this.cateList.sort(function (a, b) {
                var x = a.name.toLowerCase();
                var y = b.name.toLowerCase();
                return x < y ? -1 : x > y ? 1 : 0;
            });
            _this.editForm.controls['category'].setValue(_this.details.category);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditAccountMasterPage.prototype.getAccountTypesList = function () {
        var _this = this;
        this.admin.getAccountTypesList().subscribe(function (res) {
            var data = res.json();
            _this.accountTypesList = data.results;
            console.log('Data >>>>>>>', _this.accountTypesList);
            _this.accountTypesList = _this.accountTypesList.slice(0);
            _this.accountTypesList.sort(function (a, b) {
                var x = a.name.toLowerCase();
                var y = b.name.toLowerCase();
                return x < y ? -1 : x > y ? 1 : 0;
            });
            _this.editForm.controls['accounts_type'].setValue(_this.details.accounts_type);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditAccountMasterPage.prototype.update = function () {
        var _this = this;
        var formData = this.editForm.value;
        // formData.accounts_type = formData.accounts_type.name ? formData.accounts_type.name: formData.accounts_type; 
        // formData.category = formData.category.name ? formData.category.name: formData.category; 
        var gstNumber = formData.gst_number;
        var panNumber = formData.pan_number;
        console.log("STR >>>>", gstNumber.toUpperCase());
        console.log("STR >>>>", panNumber.toUpperCase());
        formData.agency_name = formData.agency_name.agency_name ? formData.agency_name.agency_name : formData.agency_name;
        formData.gst_number = gstNumber.toUpperCase();
        formData.pan_number = panNumber.toUpperCase();
        console.log("Data >>>>", formData);
        this.loader.show();
        this.admin.updateAccountsMaster(this.details._id, formData).subscribe(function (res) {
            _this.loader.hide();
            console.log("res >>>>>", res);
            _this.toast.show({ 'message': 'Updated successfully.' });
            _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_11__manage_accounts_master__["a" /* ManageAccountsMasterPage */]);
        }, function (err) {
            _this.loader.hide();
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
    };
    EditAccountMasterPage.prototype.nextAdd = function () {
        var _this = this;
        this.main = false;
        this.address = true;
        this.content.scrollToTop();
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var billingCity = new google.maps.places.Autocomplete(_this.searchElementRef1.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                billingCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = billingCity.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('billingCity').value = pre_city;
                        _this.editForm.controls['billing_city'].setValue(pre_city);
                    });
                });
                var billingState = new google.maps.places.Autocomplete(_this.searchElementRef2.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                billingState.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = billingState.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        document.getElementById('billingState').value = components.administrative_area_level_1;
                        _this.editForm.controls['billing_state'].setValue(components.administrative_area_level_1);
                        _this.editForm.controls['billing_country'].setValue(components.country);
                    });
                });
                var shippingCity = new google.maps.places.Autocomplete(_this.searchElementRef3.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                shippingCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = shippingCity.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('shippingCity').value = pre_city;
                        _this.editForm.controls['shipping_city'].setValue(pre_city);
                    });
                });
                var shippingState = new google.maps.places.Autocomplete(_this.searchElementRef4.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                shippingState.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = shippingState.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        document.getElementById('shippingState').value = components.administrative_area_level_1;
                        _this.editForm.controls['shipping_state'].setValue(components.administrative_area_level_1);
                        _this.editForm.controls['shipping_country'].setValue(components.country);
                    });
                });
            });
        }, 2000);
    };
    EditAccountMasterPage.prototype.preMain = function () {
        this.main = true;
        this.address = false;
    };
    EditAccountMasterPage.prototype.radioSelect = function (event) {
        console.log("Here ->", event);
        if (event == "account_name") {
            this.truckFlag = false;
            this.getAccountsNameByAgencyAndTruck();
        }
        if (event == "truck_no") {
            this.accountNameList = [];
            this.getTruckNoByAgencyLedger();
            this.truckFlag = true;
        }
    };
    EditAccountMasterPage.prototype.getAccountsNameByAgencyAndTruck = function () {
        var _this = this;
        this.accountNameList = [];
        var filters = {
            agency_name: '',
            truck_no: ''
        };
        if (this.editForm.value.agency_name) {
            filters.agency_name = this.editForm.value.agency_name.agency_name ? this.editForm.value.agency_name.agency_name : this.editForm.value.agency_name;
        }
        if (this.editForm.value.truck_no) {
            filters.truck_no = this.editForm.value.truck_no;
        }
        // this.loader.show();
        this.accounts.getAccountsNameByAgencyAndTruck(filters).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            _this.accountNameList = dataList;
            _this.accountNameList = _this.accountNameList.slice(0);
            _this.accountNameList.sort(function (a, b) {
                var x = a.toLowerCase();
                var y = b.toLowerCase();
                return x < y ? -1 : x > y ? 1 : 0;
            });
            console.log("mainAccoutsList >>>>", dataList);
            // this.loader.hide();
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditAccountMasterPage.prototype.selectTruck = function () {
        this.getAccountsNameByAgencyAndTruck();
    };
    EditAccountMasterPage.prototype.getTruckNoByAgencyLedger = function () {
        var _this = this;
        this.truckNoList = [];
        this.loader.show();
        this.accounts.getTruckNoByAgencyLedger(this.editForm.value.agency_name).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            _this.truckNoList = dataList;
            _this.truckNoList = _this.truckNoList.slice(0);
            _this.truckNoList.sort(function (a, b) {
                var x = a.toLowerCase();
                var y = b.toLowerCase();
                return x < y ? -1 : x > y ? 1 : 0;
            });
            _this.editForm.controls['truck_no'].setValue(_this.details.truck_no);
            console.log("truck No List >>>>", _this.truckNoList);
            _this.loader.hide();
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search1"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditAccountMasterPage.prototype, "searchElementRef1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search2"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditAccountMasterPage.prototype, "searchElementRef2", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search3"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditAccountMasterPage.prototype, "searchElementRef3", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search4"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], EditAccountMasterPage.prototype, "searchElementRef4", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["c" /* Content */])
    ], EditAccountMasterPage.prototype, "content", void 0);
    EditAccountMasterPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-account-master',template:/*ion-inline-start:"D:\truck\src\pages\manage-accounts-master\edit-account-master\edit-account-master.html"*/'<!--\n  Generated template for the EditAccountMasterPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit Account Master</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="editForm">\n    <div *ngIf="main">\n      <!-- <div class="form-group">\n        <label class=" label">Account Name</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="account_name" class="form-control">\n      </div> -->\n\n      <div class="form-group">\n        <label class=" label">Agency Name</label>\n        <input autocomplete="off"\n          class="form-control"\n          ng2-auto-complete\n          [source]="agencyName.bind(this)"\n          list-formatter="agency_name"\n          formControlName="agency_name" \n          (change)="getTruckNoByAgencyLedger()" \n          /> \n\n      </div>\n\n      <br>\n      <div class="width-full padding">\n      <b>Select Any One for Accounts Name</b>\n      </div>\n      \n      <ion-list radio-group>      \n        <ion-item>\n          <ion-label>Account Name</ion-label>\n          <ion-radio [checked]="accName" value="account_name" (ionSelect)="radioSelect($event)"></ion-radio>\n        </ion-item>\n    \n        <ion-item>\n          <ion-label>Truck No</ion-label>\n          <ion-radio [checked]="truNo" value="truck_no" (ionSelect)="radioSelect($event)"></ion-radio>\n        </ion-item>\n      </ion-list>\n\n      <div class="form-group" *ngIf="truckFlag">\n        <label class=" label">Truck No</label>\n        <select class="form-control drop-down" name="truck_no" formControlName="truck_no" (change)="selectTruck()" >\n            <option value="">Select Truck No</option>\n            <option *ngFor="let tnl of truckNoList" [ngValue]="tnl">{{tnl}}</option>\n          </select>\n        <!-- <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="truckNo.bind(this)"\n          list-formatter="truck_no"\n          formControlName="truck_no"  \n          (change)="selectTruck()"        \n        /> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Account Name</label>\n        <select class="form-control drop-down" name="account_name" formControlName="account_name" >\n          <option value="">Select Account Name</option>\n          <option *ngFor="let accountName of accountNameList" [ngValue]="accountName">{{accountName}}</option>\n        </select>\n      </div>\n      \n\n      <div class="form-group">\n        <label class=" label">Category</label>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="category" class="form-control"> -->\n        <!-- <input autocomplete="off"\n          class="form-control"\n          ng2-auto-complete\n          [source]="accountsCategory.bind(this)"\n          list-formatter="name"\n          formControlName="category"          \n        /> -->\n        <select class="form-control drop-down" name="category" formControlName="category" >\n          <option value="">Select Category </option>\n          <option *ngFor="let ct of cateList" [ngValue]="ct.name">{{ct.name}}</option>\n        </select>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Group</label>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="group" class="form-control"> -->\n        <select class="form-control drop-down" name="group" formControlName="group" >\n          <option value="">Select Group </option>\n          <option *ngFor="let gr of Groups" [ngValue]="gr">{{gr}}</option>\n        </select>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Account Type</label>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="accounts_type" class="form-control"> -->\n        <!-- <input autocomplete="off"\n          class="form-control"\n          ng2-auto-complete\n          [source]="accountTypes.bind(this)"\n          list-formatter="name"\n          formControlName="accounts_type"          \n        /> -->\n        <select class="form-control drop-down" name="accounts_type" formControlName="accounts_type" >\n          <option value="">Select Category </option>\n          <option *ngFor="let atl of accountTypesList" [ngValue]="atl.name">{{atl.name}}</option>\n        </select>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Under Ledger</label>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="under_ledger" class="form-control"> -->\n        <select class="form-control drop-down" name="group" formControlName="under_ledger" >\n          <option value="">Select Under Ledger </option>\n          <option *ngFor="let ul of underLedgers" [ngValue]="ul">{{ul}}</option>\n        </select>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">GST Number</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="gst_number" class="form-control upper">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Pan Number</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="pan_number" class="form-control upper">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Vendor Code</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="vendor_code" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Contact Person</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="contact_person" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Email</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="email" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.email.invalid && (editForm.controls.email.dirty || editForm.controls.email.touched))">\n        <div *ngIf="editForm.controls[\'email\'].errors.email">\n          <label>Invalid email.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile 1</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="mobile_1" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.mobile_1.invalid && (editForm.controls.mobile_1.dirty || editForm.controls.mobile_1.touched))">\n        <div *ngIf="editForm.controls[\'mobile_1\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="editForm.controls[\'mobile_1\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile 2</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="mobile_2" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.mobile_2.invalid && (editForm.controls.mobile_2.dirty || editForm.controls.mobile_2.touched))">\n        <div *ngIf="editForm.controls[\'mobile_2\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="editForm.controls[\'mobile_2\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Opening Balance</label>\n        <input type="number" placeholder="" autocomplete="off" formControlName="opening_balance" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">O.DrCr</label>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="o_drcr" class="form-control"> -->\n        <select class="form-control drop-down" name="o_drcr" formControlName="o_drcr" >\n            <!-- <option value="">Select Reports To </option> -->\n            <option *ngFor="let dc of drcr" [ngValue]="dc">{{dc}}</option>\n          </select>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Closing Balance</label>\n        <input type="number" placeholder="" autocomplete="off" formControlName="closing_balance" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">C.DrCr</label>\n        <!-- <input type="text" placeholder="" autocomplete="off" formControlName="c_drcr" class="form-control"> -->\n        <select class="form-control drop-down" name="c_drcr" formControlName="c_drcr" >\n          <!-- <option value="">Select Reports To </option> -->\n          <option *ngFor="let dc of drcr" [ngValue]="dc">{{dc}}</option>\n        </select>\n      </div>\n\n      <br>\n      <button ion-button class="next-button" (click)="nextAdd()" type="button" expand="block">Next</button>\n\n    </div>\n\n\n    <div *ngIf="address">\n      <div class="width-full">\n      <label class="fonts-size">Billing Address </label>\n      </div>\n      <div class="form-group">\n        <label class=" label">Street 1</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="billing_street_1" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Street 2</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="billing_street_2" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">City</label>\n        <input type="text" placeholder=""  autocomplete="off" formControlName="billing_city" class="form-control" id="billingCity" #search1>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">State</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="billing_state" class="form-control" id="billingState" #search2>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Pin</label>\n        <input type="number" placeholder="" autocomplete="off" formControlName="billing_pin" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.billing_pin.invalid && (editForm.controls.billing_pin.dirty || editForm.controls.billing_pin.touched))">\n        <div *ngIf="editForm.controls[\'billing_pin\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 6 letters.</label>\n        </div>\n        <div *ngIf="editForm.controls[\'billing_pin\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 6 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Country</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="billing_country" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Phone</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="billing_phone" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.billing_phone.invalid && (editForm.controls.billing_phone.dirty || editForm.controls.billing_phone.touched))">\n        <div *ngIf="editForm.controls[\'billing_phone\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="editForm.controls[\'billing_phone\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n\n      <br>\n      <!-- <b>Shipping Address</b> -->\n      <div class="width-full">\n      <label class="fonts-size">Shipping Address </label>\n      </div>\n      <div class="form-group">\n        <label class=" label">Street 1</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_street_1" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Street 2</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_street_2" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">City</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_city" class="form-control" id="shippingCity" #search3>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">State</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_state" class="form-control" id="shippingState" #search4>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Pin</label>\n        <input type="number" placeholder="" autocomplete="off" formControlName="shipping_pin" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.shipping_pin.invalid && (editForm.controls.shipping_pin.dirty || editForm.controls.shipping_pin.touched))">\n        <div *ngIf="editForm.controls[\'shipping_pin\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 6 letters.</label>\n        </div>\n        <div *ngIf="editForm.controls[\'shipping_pin\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 6 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Country</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_country" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Phone</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="shipping_phone" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (editForm.controls.shipping_phone.invalid && (editForm.controls.shipping_phone.dirty || editForm.controls.shipping_phone.touched))">\n        <div *ngIf="editForm.controls[\'shipping_phone\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="editForm.controls[\'shipping_phone\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="preMain()" type="button" expand="block">Previous</button>\n      <button ion-button class="up-button" (click)="update()" type="submit" expand="block">Update Account Master</button>\n    </div>\n    </div>\n\n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-accounts-master\edit-account-master\edit-account-master.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_9__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_8__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_7__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_6__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_4__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"],
            __WEBPACK_IMPORTED_MODULE_13__providers_accounts__["a" /* Accounts */]])
    ], EditAccountMasterPage);
    return EditAccountMasterPage;
}());

//# sourceMappingURL=edit-account-master.js.map

/***/ }),

/***/ 477:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageAccountsLedgerPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_truck__ = __webpack_require__(17);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










/**
 * Generated class for the ManageAccountsLedgerPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageAccountsLedgerPage = /** @class */ (function () {
    function ManageAccountsLedgerPage(navCtrl, navParams, accounts, loader, toast, formBuilder, trucks) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.accounts = accounts;
        this.loader = loader;
        this.toast = toast;
        this.formBuilder = formBuilder;
        this.trucks = trucks;
        this.accountsName = [];
        this.branchName = [];
        this.tableList = false;
        this.totalCredit = 0;
        this.totalDebit = 0;
        this.accountsLedgerList = [];
        this.closingAccount = 0;
        this.toDate = new Date().toISOString();
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_8_rxjs__["Observable"].of([]);
            }
        };
        this.fetchForm = this.formBuilder.group({
            account_name: [''],
            to_date: [this.toDate],
            from_date: [this.toDate],
            agency_name: [''],
            branch_name: [''],
            truck_no: ['']
        });
        this.agencyName = localStorage.getItem('agency_name');
        this.fetchForm.controls['agency_name'].setValue(this.agencyName);
        this.getAccountsLedgerBranchName();
        this.getLedgerAccountsName();
    }
    ManageAccountsLedgerPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManageAccountsLedgerPage');
    };
    ManageAccountsLedgerPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    ManageAccountsLedgerPage.prototype.getLedgerAccountsName = function () {
        var _this = this;
        this.loader.show();
        this.accounts.getAccountsLedgerAccountsName().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.accountsName = data.results;
            console.log("Accounts Name >>>>>", _this.accountsName);
        }, function (err) {
            _this.loader.hide();
            // this.toast.error({ 'message': 'Something went wrong while.' });
            console.log(">>>>>Err", err);
        });
    };
    ManageAccountsLedgerPage.prototype.getAccountsLedgerBranchName = function () {
        var _this = this;
        // this.loader.show();
        this.accounts.getAccountsLedgerBranchName().subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            _this.branchName = data.results;
            console.log("Accounts Name >>>>>", _this.branchName);
        }, function (err) {
            // this.loader.hide();
            // this.toast.error({ 'message': 'Something went wrong while.' });
            console.log(">>>>>Err", err);
        });
    };
    ManageAccountsLedgerPage.prototype.fetch = function () {
        var _this = this;
        this.accountsLedgerList = [];
        var accountName = this.fetchForm.value.account_name;
        var fromDate = this.fetchForm.value.from_date;
        var toDate = this.fetchForm.value.to_date;
        console.log("Data >>>>>", accountName, fromDate, toDate);
        var filters = {
            account_name: '',
            from_date: '',
            to_date: '',
            branch_name: '',
            truck_no: ''
        };
        if (this.fetchForm.value.account_name) {
            filters.account_name = this.fetchForm.value.account_name;
        }
        else {
            filters.account_name = '';
        }
        if (this.fetchForm.value.branch_name) {
            filters.branch_name = this.fetchForm.value.branch_name;
        }
        else {
            filters.branch_name = '';
        }
        if (this.fetchForm.value.truck_no) {
            filters.truck_no = this.fetchForm.value.truck_no.truck_no;
        }
        else {
            filters.truck_no = '';
        }
        if (this.fetchForm.value.from_date) {
            filters.from_date = this.fetchForm.value.from_date;
        }
        else {
            filters.from_date = '';
        }
        if (this.fetchForm.value.to_date) {
            filters.to_date = this.fetchForm.value.to_date;
        }
        else {
            filters.to_date = '';
        }
        this.loader.show();
        this.tableList = true;
        this.accounts.getFetchAccountsLedger(filters).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            console.log("Accounts >>>>>", data);
            _this.totalCredit = data.total_credit;
            _this.totalDebit = data.total_debit;
            var totalClosing = 0;
            data.results.forEach(function (element) {
                element.date_format = __WEBPACK_IMPORTED_MODULE_7_moment__(element.voucher_date).format('DD/MM/YYYY');
                if (element.debit_amount) {
                    totalClosing = totalClosing + element.debit_amount;
                }
                else {
                    totalClosing = totalClosing - element.credit_amount;
                }
                _this.closingAccount = Math.abs(totalClosing);
                element.closing_list = Math.abs(totalClosing);
                _this.accountsLedgerList.push(element);
            });
        }, function (err) {
            _this.loader.hide();
            _this.toast.error({ 'message': 'Something went wrong while.' });
            console.log(">>>>>Err", err);
        });
    };
    ManageAccountsLedgerPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-accounts-ledger',template:/*ion-inline-start:"D:\truck\src\pages\manage-accounts-ledger\manage-accounts-ledger.html"*/'<!--\n  Generated template for the ManageAccountsLedgerPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n        <ion-title>Accounts Ledger</ion-title>\n        <ion-buttons end>\n          <button ion-button icon-only (click)="home()" >\n              <ion-icon name="home" ></ion-icon>\n          </button>\n        </ion-buttons>\n      </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="fetchForm" novalidate>\n\n    <div class="form-group">\n      <label class=" label">Agency Name</label>\n      <input type="text" placeholder="" formControlName="agency_name" class="form-control">\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Branches Name </label> \n      <select class="form-control drop-down" name="branch_name" formControlName="branch_name" >\n        <option value="">Select Branch Name</option>\n        <option *ngFor="let bn of branchName" [ngValue]="bn">{{bn}}</option>\n      </select>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Accounts Name </label> \n      <select class="form-control drop-down" name="account_name" formControlName="account_name" >\n        <option value="">Select Account Name</option>\n        <option *ngFor="let an of accountsName" [ngValue]="an">{{an}}</option>\n      </select>\n    </div>\n  \n    <div class="form-group">\n      <label class=" label">Truck No</label>\n      <input\n        class="form-control"\n        ng2-auto-complete\n        [source]="truckNo.bind(this)"\n        list-formatter="truck_no"\n        formControlName="truck_no"          \n      />\n    </div>\n\n    <div class="form-group">\n      <label class=" label">From Date</label> \n      <ion-item class="form-control">\n        <ion-datetime name="from_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="from_date"></ion-datetime>\n      </ion-item>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">To Date</label> \n      <ion-item class="form-control">\n        <ion-datetime name="to_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="to_date"></ion-datetime>\n      </ion-item>\n    </div>\n    \n    <button ion-button (click)="fetch()" class="button-al" type="submit"> Fetch </button>\n    <br><br>\n    <hr>\n\n    <div *ngIf="tableList">\n\n      <p>\n        <span><b>Opening Balance: </b> 0.00/-</span> \n      </p>\n      \n      <table>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Particular</th>\n            <th>Debit</th>\n            <th>Credit</th>\n            <th>Closing</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let all of accountsLedgerList">\n            <td>{{ all.date_format }}</td>\n            <td>{{ all.narration }}</td>\n            <td><span class="button-al">{{ (all.debit_amount ? all.debit_amount: 0) | number : \'1.2-2\' }}</span></td>\n            <td><span class="button-al">{{ (all.credit_amount ? all.credit_amount: 0) | number : \'1.2-2\' }}</span></td>\n            <td><span class="button-al">{{ all.closing_list | number : \'1.2-2\' }}</span></td>\n          </tr>\n        </tbody>\n      </table>\n\n      <p>\n        <span class="button-al"><b>Closing Balance: </b> {{ closingAccount | number : \'1.2-2\' }}/-</span> \n      </p>\n    </div>\n\n\n  </form>  \n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-accounts-ledger\manage-accounts-ledger.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_accounts__["a" /* Accounts */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_6__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_9__providers_truck__["a" /* Trucks */]])
    ], ManageAccountsLedgerPage);
    return ManageAccountsLedgerPage;
}());

//# sourceMappingURL=manage-accounts-ledger.js.map

/***/ }),

/***/ 478:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RewardsLedgerPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__home_home__ = __webpack_require__(9);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the RewardsLedgerPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var RewardsLedgerPage = /** @class */ (function () {
    function RewardsLedgerPage(navCtrl, navParams, fb, requestLoad, events, trucks, accounts, loader, toast, admin) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.events = events;
        this.trucks = trucks;
        this.accounts = accounts;
        this.loader = loader;
        this.toast = toast;
        this.admin = admin;
        this.tableList = false;
        this.mainAccoutsList = [];
        this.salesmanList = [];
        this.rewardsLedgerList = [];
        this.totalCredit = 0;
        this.totalDebit = 0;
        this.accountsLedgerList = [];
        this.closingAccount = 0;
        this.toDate = new Date().toISOString();
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs__["Observable"].of([]);
            }
        };
        this.fetchForm = this.fb.group({
            from_date: [this.toDate],
            to_date: [this.toDate],
            agency_name: [''],
            salesman: ['']
        });
        // this.fetchForm.controls['agency_name'].setValue(this.agencyName);
        this.getSalesmanList();
        this.getAccounts();
    }
    RewardsLedgerPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__home_home__["a" /* HomePage */]);
    };
    RewardsLedgerPage.prototype.getAccounts = function () {
        var _this = this;
        var agency_name = localStorage.getItem('agency_name');
        console.log("agency_name >>>>", agency_name);
        this.requestLoad.getAccountsByAgency(agency_name).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            // console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.mainAccoutsList.push(element.account_name);
            });
            console.log("mainAccoutsList >>>>", _this.mainAccoutsList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    RewardsLedgerPage.prototype.onselectDealFinalSalesman = function () {
    };
    RewardsLedgerPage.prototype.getSalesmanList = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        this.admin.getListByAgency(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.salesmanList.push(element.first_name);
            });
            console.log("salesmanList >>>>", _this.salesmanList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    RewardsLedgerPage.prototype.fetch = function () {
        var _this = this;
        this.rewardsLedgerList = [];
        var fromDate = this.fetchForm.value.from_date;
        var toDate = this.fetchForm.value.to_date;
        // var agency_name = this.fetchForm.value.agency_name;
        var salesman = this.fetchForm.value.salesman;
        console.log("Data >>>>>", fromDate, toDate, salesman);
        var filters = {
            from_date: '',
            to_date: '',
            agency_name: '',
            salesman: ''
        };
        if (this.fetchForm.value.from_date) {
            filters.from_date = this.fetchForm.value.from_date;
        }
        else {
            filters.from_date = '';
        }
        if (this.fetchForm.value.to_date) {
            filters.to_date = this.fetchForm.value.to_date;
        }
        else {
            filters.to_date = '';
        }
        if (this.fetchForm.value.agency_name) {
            filters.agency_name = this.fetchForm.value.agency_name;
        }
        else {
            filters.agency_name = '';
        }
        if (this.fetchForm.value.salesman) {
            filters.salesman = this.fetchForm.value.salesman;
        }
        else {
            filters.salesman = '';
        }
        this.loader.show();
        this.tableList = true;
        this.accounts.displayRewardLedger(filters).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            console.log("Accounts >>>>>", data);
            _this.totalCredit = data.total_credit;
            _this.totalDebit = data.total_debit;
            var totalClosing = 0;
            data.results.forEach(function (element) {
                element.date_format = __WEBPACK_IMPORTED_MODULE_11_moment__(element.voucher_date).format('DD/MM/YYYY');
                if (element.debit_amount) {
                    totalClosing = Math.abs(totalClosing + element.debit_amount);
                }
                else {
                    totalClosing = Math.abs(totalClosing - element.credit_amount);
                }
                _this.closingAccount = totalClosing;
                element.closing_list = totalClosing;
                // this.accountsLedgerList.push(element);
                _this.accountsLedgerList = data.results;
            });
        }, function (err) {
            _this.loader.hide();
            _this.toast.error({ 'message': 'Something went wrong while.' });
            console.log(">>>>>Err", err);
        });
    };
    RewardsLedgerPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-rewards-ledger',template:/*ion-inline-start:"D:\truck\src\pages\rewards-ledger\rewards-ledger.html"*/'<!--\n  Generated template for the RewardsLedgerPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Rewards Ledger</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n\n    <!-- <ion-title>Rewards Ledger</ion-title> -->\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="fetchForm" novalidate>\n    <div class="form-group">\n      <label class=" label">From Date</label>\n      <ion-item class="form-control">\n        <ion-datetime\n          name="from_date"\n          display-format="MM/YYYY"\n          picker-format="YYYY-MM-DD"\n          formControlName="from_date"\n        ></ion-datetime>\n      </ion-item>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">To Date</label>\n      <ion-item class="form-control">\n        <ion-datetime\n          name="to_date"\n          display-format="MM/YYYY"\n          picker-format="YYYY-MM-DD"\n          formControlName="to_date"\n        ></ion-datetime>\n      </ion-item>\n    </div>\n\n      <div class="form-group">\n        <label class=" label">Agency Name</label>\n        <input\n          class="form-control"\n          ng2-auto-complete\n          [source]="agencyName.bind(this)"\n          list-formatter="agency_name"\n          formControlName="agency_name"\n        />\n        <!-- <input type="text" placeholder="" formControlName="agency_name" class="form-control"> -->\n      </div>\n\n      <div class="form-group">\n        <label class=" label"\n          >Salesman (Deal Done By) <span style="color:red">*</span></label\n        >\n        <select\n          class="form-control drop-down"\n          name="salesman"\n          formControlName="salesman"\n          (change)="onselectDealFinalSalesman()"\n        >\n          <option value="">Select Salesman</option>\n          <option *ngFor="let sml of salesmanList" [ngValue]="sml">{{\n            sml\n          }}</option>\n        </select>\n      </div>\n\n      <button ion-button (click)="fetch()" class="button-al" type="submit">\n        Fetch\n      </button>\n      <br /><br />\n      <hr />\n      <div *ngIf="tableList">\n        <p>\n          <span><b>Opening Balance: </b> 0.00/-</span>\n        </p>\n        <table border="1">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Agency</th>\n              <th>Particular</th>\n              <th>Debit</th>\n              <th>Credit</th>\n              <th>Closing</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor="let all of accountsLedgerList">\n              <td>{{ all.date_format }}</td>\n              <td>{{ all.agency_name }}</td>\n              <td>{{ all.narration_ref_no }}</td>\n              <td><span class="button-al">{{ (all.debit_amount ? all.debit_amount : 0) | number : \'1.2-2\' }}</span></td>\n              <td><span class="button-al">{{ (all.credit_amount ? all.credit_amount : 0 )| number : \'1.2-2\' }}</span></td>\n              <td><span class="button-al">{{ all.closing_list | number : \'1.2-2\' }}</span></td>\n            </tr>\n          </tbody>\n        </table>\n        <p>\n          <span class="button-al"><b>Closing Balance: </b> {{ closingAccount | number : \'1.2-2\' }}/-</span>\n        </p>\n      </div>\n    \n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\rewards-ledger\rewards-ledger.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_5__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_4__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_6__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_10__providers_accounts__["a" /* Accounts */],
            __WEBPACK_IMPORTED_MODULE_8__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_9__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], RewardsLedgerPage);
    return RewardsLedgerPage;
}());

//# sourceMappingURL=rewards-ledger.js.map

/***/ }),

/***/ 479:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrialBalancePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__angular_forms__ = __webpack_require__(7);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











/**
 * Generated class for the TrialBalancePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var TrialBalancePage = /** @class */ (function () {
    function TrialBalancePage(navCtrl, navParams, fb, events, trucks, accounts, loader, toast, admin) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.events = events;
        this.trucks = trucks;
        this.accounts = accounts;
        this.loader = loader;
        this.toast = toast;
        this.admin = admin;
        this.toDate = new Date().toISOString();
        this.tableList = false;
        this.mainTrialList = [];
        this.totalDebit = 0;
        this.totalCredit = 0;
        this.branchName = [];
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs__["Observable"].of([]);
            }
        };
        this.fetchForm = this.fb.group({
            from_date: [this.toDate],
            to_date: [this.toDate],
            agency_name: [''],
            branch_name: ['']
        });
        this.getAccountsLedgerBranchName();
    }
    TrialBalancePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad TrialBalancePage');
    };
    TrialBalancePage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    TrialBalancePage.prototype.getAccountsLedgerBranchName = function () {
        var _this = this;
        // this.loader.show();
        this.accounts.getAccountsLedgerBranchName().subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            _this.branchName = data.results;
            console.log("Accounts Name >>>>>", _this.branchName);
        }, function (err) {
            // this.loader.hide();
            // this.toast.error({ 'message': 'Something went wrong while.' });
            console.log(">>>>>Err", err);
        });
    };
    TrialBalancePage.prototype.fetch = function () {
        var _this = this;
        if (this.fetchForm.value.branch_name && this.fetchForm.value.agency_name.agency_name) {
            this.mainTrialList = [];
            this.totalCredit = 0;
            var filters = {
                from_date: '',
                to_date: '',
                agency_name: '',
                salesman: '',
                branch_name: ''
            };
            if (this.fetchForm.value.from_date) {
                filters.from_date = this.fetchForm.value.from_date;
            }
            else {
                filters.from_date = '';
            }
            if (this.fetchForm.value.to_date) {
                filters.to_date = this.fetchForm.value.to_date;
            }
            else {
                filters.to_date = '';
            }
            if (this.fetchForm.value.agency_name) {
                filters.agency_name = this.fetchForm.value.agency_name.agency_name;
            }
            else {
                filters.agency_name = '';
            }
            if (this.fetchForm.value.branch_name) {
                filters.branch_name = this.fetchForm.value.branch_name;
            }
            else {
                filters.branch_name = '';
            }
            this.loader.show();
            this.accounts.displayTrialBalance(filters).subscribe(function (res) {
                var data = res.json();
                var totalCreditArray = 0;
                var totalDeditArray = 0;
                data.results.forEach(function (element) {
                    var accountName = element.account_name.account_name ? element.account_name.account_name : element.account_name;
                    var creditAmount = element.account_name.credit_amount ? element.account_name.credit_amount : element.cr;
                    var debitAmount = element.account_name.debit_amount ? element.account_name.debit_amount : element.dr;
                    if (creditAmount == 0 && debitAmount == 0) {
                        console.log("creditAmount and debitAmount  0");
                    }
                    else {
                        // var obj = {
                        //   "account_name": accountName,
                        //   "debit_amount": debitAmount,
                        //   "credit_amount": Math.abs(creditAmount)
                        // };
                        if (accountName != "Commission" && accountName != "Commission A/c.") {
                            // var debitAmountObj = obj.debit_amount;
                            // var creditAmountObj = obj.credit_amount;
                            // obj.debit_amount = creditAmountObj;
                            // obj.credit_amount = debitAmountObj;
                            var obj = {
                                "account_name": accountName,
                                "debit_amount": debitAmount,
                                "credit_amount": Math.abs(creditAmount)
                            };
                            totalDeditArray = totalDeditArray + obj.debit_amount;
                            totalCreditArray = totalCreditArray + obj.credit_amount;
                            _this.mainTrialList.push(obj);
                            _this.totalDebit = Math.abs(totalDeditArray);
                            _this.totalCredit = Math.abs(totalCreditArray);
                        }
                        // totalDeditArray = totalDeditArray + obj.debit_amount;
                        // totalCreditArray = totalCreditArray + obj.credit_amount;
                        // this.mainTrialList.push(obj);
                        // this.totalDebit = Math.abs(totalDeditArray);
                        // this.totalCredit = Math.abs(totalCreditArray);
                    }
                });
                console.log("TrialBalance >>>>>", _this.mainTrialList);
                _this.tableList = true;
                _this.loader.hide();
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong while.' });
                console.log(">>>>>Err", err);
            });
        }
    };
    TrialBalancePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-trial-balance',template:/*ion-inline-start:"D:\truck\src\pages\trial-balance\trial-balance.html"*/'<!--\n  Generated template for the TrialBalancePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Accounts Trial Balance</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="fetchForm" novalidate>\n    <div class="form-group">\n      <label class=" label">From Date</label>\n      <ion-item class="form-control">\n        <ion-datetime name="from_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="from_date"></ion-datetime>\n      </ion-item>\n    </div>\n  \n    <div class="form-group">\n      <label class=" label">To Date</label>\n      <ion-item class="form-control">\n        <ion-datetime name="to_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="to_date"></ion-datetime>\n      </ion-item>\n    </div>\n  \n    <div class="form-group">\n      <label class=" label">Agency Name <span style="color:red">*</span></label>\n      <input \n        class="form-control" \n        ng2-auto-complete \n        [source]="agencyName.bind(this)" \n        list-formatter="agency_name" \n        formControlName="agency_name"\n      />   \n    </div>\n\n    <div class="form-group">\n      <label class=" label">Branch Name <span style="color:red">*</span></label> \n      <select class="form-control drop-down" name="branch_name" formControlName="branch_name" >\n        <option value="">Select Branch Name</option>\n        <option *ngFor="let bn of branchName" [ngValue]="bn">{{bn}}</option>\n      </select>\n    </div>\n\n    <button ion-button (click)="fetch()" class="button-al" type="submit"> Fetch </button><br><br>\n    <hr />\n\n\n    <div *ngIf="tableList">\n      <table border="1">\n        <thead>\n          <tr>\n            <th>Account Name</th>\n            <th>Dr.</th>\n            <th>Cr.</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let mtl of mainTrialList">\n            <td>{{ mtl.account_name }}</td>\n            <td><span class="button-al">{{ mtl.debit_amount | number : \'1.2-2\' }}</span></td>\n            <td><span class="button-al">{{ mtl.credit_amount | number : \'1.2-2\' }}</span></td>\n          </tr>\n          <tr>\n            <td><b class="button-al">Total</b></td>\n            <td><span class="button-al">{{ totalDebit | number : \'1.2-2\' }}</span></td>\n            <td><span class="button-al">{{ totalCredit | number : \'1.2-2\' }}</span></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\trial-balance\trial-balance.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_10__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_9__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_8__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_7__providers_accounts__["a" /* Accounts */],
            __WEBPACK_IMPORTED_MODULE_6__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], TrialBalancePage);
    return TrialBalancePage;
}());

//# sourceMappingURL=trial-balance.js.map

/***/ }),

/***/ 480:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManageRewardsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__manage_rewards_redemption__ = __webpack_require__(112);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










/**
 * Generated class for the ManageRewardsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManageRewardsPage = /** @class */ (function () {
    function ManageRewardsPage(navCtrl, fb, navParams, requestLoad, loader, toast, trucks, admin) {
        this.navCtrl = navCtrl;
        this.fb = fb;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.trucks = trucks;
        this.admin = admin;
        this.toDate = new Date().toISOString();
        this.mainAccoutsList = [];
        this.mainPaymentTypes = [];
        this.user_name = "";
        this.salesmanList = [];
        // dealFinalObj;
        this.agencyId = '';
        this.addForm = this.fb.group({
            date: [this.toDate],
            salesman: [''],
            points_generated: [''],
            redemption: [''],
            payment_type: [''],
            account_name: [''],
            remarks: [''],
            username: [''],
            srno: ['']
        });
        this.getPaymentType();
        this.getAccounts();
        this.user_name = localStorage.getItem('user_name');
        this.getSalesmanList();
        this.getMaxTrNoRewardsRedemption();
        this.getAgencyId();
    }
    ManageRewardsPage.prototype.ionViewDidLoad = function () {
        this.addForm.controls['username'].setValue(this.user_name);
    };
    ManageRewardsPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_8__home_home__["a" /* HomePage */]);
    };
    ManageRewardsPage.prototype.getPaymentType = function () {
        var _this = this;
        this.requestLoad.getPaymentTypesList().subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            dataList.forEach(function (element) {
                _this.mainPaymentTypes.push(element.name);
            });
            console.log("mainPaymentTypes >>>>", _this.mainPaymentTypes);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    ManageRewardsPage.prototype.getMaxTrNoRewardsRedemption = function () {
        var _this = this;
        this.admin.getMaxTrNoRewardsRedemption().subscribe(function (res) {
            var data = res.json();
            _this.maxTrNo = data.max_trno;
            console.log("maxTrNo >>>>", _this.maxTrNo);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    ManageRewardsPage.prototype.getAccounts = function () {
        var _this = this;
        var agency_name = localStorage.getItem('agency_name');
        console.log("agency_name >>>>", agency_name);
        this.requestLoad.getAccountsByAgency(agency_name).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            // console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.mainAccoutsList.push(element.account_name);
            });
            console.log("mainAccoutsList >>>>", _this.mainAccoutsList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    ManageRewardsPage.prototype.getSalesmanList = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        this.admin.getListByAgency(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.salesmanList.push(element.first_name);
            });
            console.log("salesmanList >>>>", _this.salesmanList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    ManageRewardsPage.prototype.getRewarsPoints = function () {
        var _this = this;
        console.log("Here >>>>");
        this.loader.show();
        var salesman = this.addForm.value.salesman;
        this.requestLoad.getSalesman(salesman).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.addForm.controls['points_generated'].setValue(data.points_generated);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    // getDealFinalDetails() {
    //   var dealNo = this.addForm.value.srno;
    //   this.requestLoad.getSrNo(dealNo).subscribe((res: any) => {
    //     var data = res.json(); 
    //     this.dealFinalObj = data.results;
    //     console.log("dealFinalObj >>>>", this.dealFinalObj);
    //     this.getAgencyId();
    //   }, err => {
    //     console.log(">>>>error", err);
    //   });
    // }
    ManageRewardsPage.prototype.getAgencyId = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        this.trucks.searchAgencyName(agencyName).subscribe(function (res) {
            var data = res.json();
            _this.agencyId = data[0]._id;
            console.log("agencyId >>>>", _this.agencyId);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    ManageRewardsPage.prototype.save = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        var formData = this.addForm.value;
        formData.trno = this.maxTrNo;
        var obj = {
            "agency_name": agencyName,
            "branch": localStorage.getItem('agency_name'),
            "agency_id": this.agencyId,
            "salesman": formData.salesman,
            "truck_no": "",
            "srno": this.maxTrNo,
            "narration_ref_no": "Deal no " + this.maxTrNo,
            "document_type": "RRedm",
            "debit_amount": formData.redemption,
            "credit_amount": '',
            "voucher_date": formData.date,
            "username": formData.username
        };
        var finalArr = [];
        finalArr.push(obj);
        var accountsLedgerArray = [];
        var userName = localStorage.getItem('user_name');
        var userId = localStorage.getItem('user_id');
        // **************** Rewards ******************
        var rewardsMainCredit = {
            "agency_name": agencyName,
            "branch_id": this.agencyId,
            "branch_name": agencyName,
            "account_name": formData.account_name,
            "truck_no": "",
            "sr_no": this.maxTrNo,
            // "deal_id": "", 
            "narration": "Being Cash Paid Against Rewards Points",
            "narration_ref_no": "",
            "document_type": "RRedm",
            "debit_amount": 0,
            "credit_amount": formData.redemption,
            "voucher_date": formData.date,
            "party_name": "",
            "user_name": userName,
            "user_id": userId
        };
        accountsLedgerArray.push(rewardsMainCredit);
        var rewardsMainDebit = {
            "agency_name": agencyName,
            "branch_id": this.agencyId,
            "branch_name": agencyName,
            "account_name": "Rewards Redemption",
            "truck_no": "",
            "sr_no": this.maxTrNo,
            // "deal_id": "", 
            "narration": "Being Cash Paid Against Rewards Points",
            "narration_ref_no": "",
            "document_type": "RRedm",
            "debit_amount": formData.redemption,
            "credit_amount": 0,
            "voucher_date": formData.date,
            "party_name": "",
            "user_name": userName,
            "user_id": userId
        };
        accountsLedgerArray.push(rewardsMainDebit);
        // console.log("accountsLedgerArray >>>>", accountsLedgerArray);
        // ********************************************
        this.loader.show();
        console.log("addRewardsRedemption >>>>", formData);
        console.log("addRewardsLedger >>>>", finalArr);
        console.log("addAccountsLedger >>>>", accountsLedgerArray);
        this.admin.addRewardsRedemption(formData).subscribe(function (res) {
            _this.requestLoad.addRewardsLedger(finalArr).subscribe(function (res) {
                _this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe(function (res) {
                    _this.loader.hide();
                    _this.addForm.reset();
                    _this.toast.show({ 'message': 'Added successfully.' });
                    _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__manage_rewards_redemption__["a" /* ManageRewardsRedemptionPage */]);
                }, function (err) {
                    _this.loader.hide();
                    _this.toast.error({ 'message': 'Something went wrong.' });
                    console.log(">>>>>Err", err);
                });
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }, function (err) {
            _this.loader.hide();
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
    };
    ManageRewardsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-rewards',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-rewards-redemption\add-rewards-redemption\manage-rewards.html"*/'<!--\n  Generated template for the ManageRewardsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    \n    <ion-toolbar>\n      <ion-title>Add Rewards Redemption</ion-title> \n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="addForm">\n      <div class="form-group">\n        <label class=" label">Date</label>\n        <ion-item class="form-control">\n          <ion-datetime name="date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="date"></ion-datetime>\n        </ion-item>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Salesman</label>\n        <select class="form-control drop-down" name="salesman" formControlName="salesman" (change)="getRewarsPoints()" >\n          <option value="">Select Salesman</option>\n          <option *ngFor="let sml of salesmanList" [ngValue]="sml">{{sml}}</option>\n        </select>\n      </div>\n\n      <!-- <div class="form-group">\n        <label class=" label">Sr No</label>\n        <input type="number" placeholder="" formControlName="srno" class="form-control" (change)="getDealFinalDetails()">\n      </div> -->\n\n      <div class="form-group">\n          <label class=" label">Points Generated</label>\n          <input type="number" placeholder="" formControlName="points_generated" class="form-control">\n      </div>\n\n      <div class="form-group">\n          <label class=" label">Redemption</label>\n          <input type="number" placeholder="" formControlName="redemption" class="form-control">\n      </div>\n\n      <div class="form-group">\n          <label class=" label">Payment Type</label>\n          <select class="form-control drop-down" name="payment_type" formControlName="payment_type" >\n            <option value="">Select Payment Type</option>\n            <option *ngFor="let mpt of mainPaymentTypes" [ngValue]="mpt">{{mpt}}</option>\n          </select>\n      </div>\n      <div class="form-group">\n          <label class=" label">Account Name</label>\n          <select class="form-control drop-down" name="account_name" formControlName="account_name" >\n            <option value="">Select Account Name</option>\n            <option *ngFor="let mal of mainAccoutsList" [ngValue]="mal">{{mal}}</option>\n          </select>\n      </div>\n      <div class="form-group">\n          <label class=" label">Remarks</label> \n          <input name="remarks" type="text" formControlName="remarks" class="form-control" /> \n      </div>\n      <div class="form-group">\n          <label class=" label">User Name</label>\n          <!-- <input\n            class="form-control"\n            ng2-auto-complete\n            [source]="username.bind(this)"\n            list-formatter="username"\n            formControlName="username"          \n          /> -->\n          <input type="text" placeholder="" formControlName="username" class="form-control">\n      </div>\n      <hr>\n      <button ion-button (click)="save()" type="button" class="add-al">Add</button><br><br>\n      <hr>\n  </form>                   \n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-rewards-redemption\add-rewards-redemption\manage-rewards.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_6__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], ManageRewardsPage);
    return ManageRewardsPage;
}());

//# sourceMappingURL=manage-rewards.js.map

/***/ }),

/***/ 481:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditRewardsRedemptionPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__manage_rewards_redemption__ = __webpack_require__(112);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the EditRewardsRedemptionPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditRewardsRedemptionPage = /** @class */ (function () {
    function EditRewardsRedemptionPage(navCtrl, fb, navParams, requestLoad, loader, toast, trucks, admin) {
        this.navCtrl = navCtrl;
        this.fb = fb;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.loader = loader;
        this.toast = toast;
        this.trucks = trucks;
        this.admin = admin;
        this.toDate = new Date().toISOString();
        this.mainAccoutsList = [];
        this.mainPaymentTypes = [];
        this.user_name = "";
        this.salesmanList = [];
        // dealFinalObj;
        this.agencyId = '';
        this.details = this.navParams.get('data');
        this.editForm = this.fb.group({
            date: [this.toDate],
            salesman: [''],
            points_generated: [''],
            redemption: [''],
            payment_type: [''],
            account_name: [''],
            remarks: [''],
            username: [''],
            srno: ['']
        });
        this.editForm.controls['date'].setValue(this.details.date);
        this.editForm.controls['points_generated'].setValue(this.details.points_generated);
        this.editForm.controls['redemption'].setValue(this.details.redemption);
        this.editForm.controls['remarks'].setValue(this.details.remarks);
        this.editForm.controls['username'].setValue(this.details.username);
        // this.editForm.controls['srno'].setValue(this.details.srno);
        // if(this.details.srno){
        //   this.getDealFinalDetails();
        // }
        this.getPaymentType();
        this.getAccounts();
        this.user_name = localStorage.getItem('user_name');
        this.getSalesmanList();
        this.getAgencyId();
    }
    EditRewardsRedemptionPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditRewardsRedemptionPage');
    };
    EditRewardsRedemptionPage.prototype.getPaymentType = function () {
        var _this = this;
        this.requestLoad.getPaymentTypesList().subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            dataList.forEach(function (element) {
                _this.mainPaymentTypes.push(element.name);
            });
            console.log("mainPaymentTypes >>>>", _this.mainPaymentTypes);
            _this.editForm.controls['payment_type'].setValue(_this.details.payment_type);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditRewardsRedemptionPage.prototype.getAccounts = function () {
        var _this = this;
        var agency_name = localStorage.getItem('agency_name');
        console.log("agency_name >>>>", agency_name);
        this.requestLoad.getAccountsByAgency(agency_name).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            // console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.mainAccoutsList.push(element.account_name);
            });
            console.log("mainAccoutsList >>>>", _this.mainAccoutsList);
            _this.editForm.controls['account_name'].setValue(_this.details.account_name);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditRewardsRedemptionPage.prototype.getSalesmanList = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        this.admin.getListByAgency(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.salesmanList.push(element.first_name);
            });
            _this.editForm.controls['salesman'].setValue(_this.details.salesman);
            console.log("salesmanList >>>>", _this.salesmanList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditRewardsRedemptionPage.prototype.getRewarsPoints = function () {
        var _this = this;
        console.log("Here >>>>");
        this.loader.show();
        var salesman = this.editForm.value.salesman;
        this.requestLoad.getSalesman(salesman).subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.editForm.controls['points_generated'].setValue(data.points_generated);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    // getDealFinalDetails() {
    //   var dealNo = this.editForm.value.srno;
    //   this.requestLoad.getSrNo(dealNo).subscribe((res: any) => {
    //     var data = res.json(); 
    //     this.dealFinalObj = data.results;
    //     console.log("dealFinalObj >>>>", this.dealFinalObj);
    //     this.getAgencyId();
    //   }, err => {
    //     console.log(">>>>error", err);
    //   });
    // }
    EditRewardsRedemptionPage.prototype.getAgencyId = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        this.trucks.searchAgencyName(agencyName).subscribe(function (res) {
            var data = res.json();
            _this.agencyId = data[0]._id;
            console.log("agencyId >>>>", _this.agencyId);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditRewardsRedemptionPage.prototype.save = function () {
        var _this = this;
        var agencyName = localStorage.getItem('agency_name');
        var formData = this.editForm.value;
        formData.trno = this.details.trno;
        console.log("formData >>>>", formData);
        this.loader.show();
        this.admin.updateRewardsRedemption(this.details._id, formData).subscribe(function (res) {
            _this.loader.hide();
            _this.toast.show({ 'message': 'Updated Successfully.' });
            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__manage_rewards_redemption__["a" /* ManageRewardsRedemptionPage */]);
        }, function (err) {
            _this.loader.hide();
            console.log('>>>>err', err);
        });
        // var obj = {
        //   "agency_name": this.dealFinalObj.agency_name,
        //   "branch": localStorage.getItem('agency_name'),
        //   "agency_id":  this.agencyId,
        //   "salesman": formData.salesman,
        //   "truck_no": this.dealFinalObj.truck_no,
        //   "srno": formData.srno,
        //   "narration_ref_no": "Deal no "+ formData.srno,
        //   "document_type": "REarn",
        //   "debit_amount": formData.redemption,
        //   "credit_amount": '',
        //   "voucher_date": formData.date,
        //   "username": formData.username
        // };
        // var finalArr = [];
        // finalArr.push(obj);
        // console.log("finalArr >>>>", finalArr);
        // var accountsLedgerArray = [];
        // var userName = localStorage.getItem('user_name');
        // var userId = localStorage.getItem('user_id');
        // // **************** Rewards ******************
        // var rewardsMainCredit = {
        //   "agency_name": this.dealFinalObj.agency_name,
        //   "branch_id": this.agencyId,
        //   "branch_name": this.dealFinalObj.agency_name,
        //   "account_name": formData.account_name,
        //   "truck_no": this.dealFinalObj.truck_no,
        //   "sr_no": formData.srno,
        //   "deal_id": this.dealFinalObj._id, 
        //   "narration": "Being Cash Paid Against Rewards Points",
        //   "narration_ref_no": "",
        //   "document_type": "RRedm",
        //   "debit_amount": 0,
        //   "credit_amount": formData.redemption,
        //   "voucher_date": formData.date,
        //   "party_name": "",
        //   "user_name": userName,
        //   "user_id": userId 
        // };
        // accountsLedgerArray.push(rewardsMainCredit);
        // var rewardsMainDebit = {
        //   "agency_name": this.dealFinalObj.agency_name,
        //   "branch_id": this.agencyId,
        //   "branch_name": this.dealFinalObj.agency_name,
        //   "account_name": "Rewards Redemption",
        //   "truck_no": this.dealFinalObj.truck_no,
        //   "sr_no": formData.srno,
        //   "deal_id": this.dealFinalObj._id, 
        //   "narration": "Being Cash Paid Against Rewards Points",
        //   "narration_ref_no": "",
        //   "document_type": "RRedm",
        //   "debit_amount": formData.redemption,
        //   "credit_amount": 0,
        //   "voucher_date": formData.date,
        //   "party_name": "",
        //   "user_name": userName,
        //   "user_id": userId 
        // };
        // accountsLedgerArray.push(rewardsMainDebit);
        // console.log("accountsLedgerArray >>>>", accountsLedgerArray);
        // // ********************************************
        // this.loader.show();
        // this.requestLoad.addRewardsLedger(finalArr).subscribe((res: any) => {
        //   this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe((res: any) => {
        //     this.loader.hide();
        //     this.editForm.reset();
        //     this.toast.show({ 'message': 'Added successfully.' });
        //     this.navCtrl.setRoot(ManageRewardsRedemptionPage);
        //   }, err => {
        //     this.loader.hide();
        //     this.toast.error({ 'message': 'Something went wrong.' });
        //     console.log(">>>>>Err", err);
        //   });
        // }, err => {
        //   this.loader.hide();
        //   this.toast.error({ 'message': 'Something went wrong.' });
        //   console.log(">>>>>Err", err);
        // });
    };
    EditRewardsRedemptionPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-rewards-redemption',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\manage-rewards-redemption\edit-rewards-redemption\edit-rewards-redemption.html"*/'<!--\n  Generated template for the EditRewardsRedemptionPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-title>Edit Rewards Redemption</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="editForm">\n      <div class="form-group">\n        <label class=" label">Date</label>\n        <ion-item class="form-control">\n          <ion-datetime name="date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="date"></ion-datetime>\n        </ion-item>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Salesman</label>\n        <select class="form-control drop-down" name="salesman" formControlName="salesman" (change)="getRewarsPoints()" >\n          <option value="">Select Salesman</option>\n          <option *ngFor="let sml of salesmanList" [ngValue]="sml">{{sml}}</option>\n        </select>\n      </div>\n\n      <!-- <div class="form-group">\n        <label class=" label">Sr No</label>\n        <input type="number" placeholder="" formControlName="srno" class="form-control" (change)="getDealFinalDetails()">\n      </div> -->\n\n      <div class="form-group">\n          <label class=" label">Points Generated</label>\n          <input type="number" placeholder="" formControlName="points_generated" class="form-control">\n      </div>\n\n      <div class="form-group">\n          <label class=" label">Redemption</label>\n          <input type="number" placeholder="" formControlName="redemption" class="form-control">\n      </div>\n\n      <div class="form-group">\n          <label class=" label">Payment Type</label>\n          <select class="form-control drop-down" name="payment_type" formControlName="payment_type" >\n            <option value="">Select Payment Type</option>\n            <option *ngFor="let mpt of mainPaymentTypes" [ngValue]="mpt">{{mpt}}</option>\n          </select>\n      </div>\n      <div class="form-group">\n          <label class=" label">Account Name</label>\n          <select class="form-control drop-down" name="account_name" formControlName="account_name" >\n            <option value="">Select Account Name</option>\n            <option *ngFor="let mal of mainAccoutsList" [ngValue]="mal">{{mal}}</option>\n          </select>\n      </div>\n      <div class="form-group">\n          <label class=" label">Remarks</label> \n          <input name="remarks" type="text" formControlName="remarks" class="form-control" /> \n      </div>\n      <div class="form-group">\n          <label class=" label">User Name</label>\n          <!-- <input\n            class="form-control"\n            ng2-auto-complete\n            [source]="username.bind(this)"\n            list-formatter="username"\n            formControlName="username"          \n          /> -->\n          <input type="text" placeholder="" formControlName="username" class="form-control">\n      </div>\n      <hr>\n      <button ion-button (click)="save()" type="button" class="add-al">Update</button><br><br>\n    \n  </form> \n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\manage-rewards-redemption\edit-rewards-redemption\edit-rewards-redemption.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_7__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_6__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], EditRewardsRedemptionPage);
    return EditRewardsRedemptionPage;
}());

//# sourceMappingURL=edit-rewards-redemption.js.map

/***/ }),

/***/ 482:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return RewardsTrialBalancePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs__ = __webpack_require__(1);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











/**
 * Generated class for the RewardsTrialBalancePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var RewardsTrialBalancePage = /** @class */ (function () {
    function RewardsTrialBalancePage(navCtrl, navParams, fb, events, trucks, accounts, loader, toast, admin) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.events = events;
        this.trucks = trucks;
        this.accounts = accounts;
        this.loader = loader;
        this.toast = toast;
        this.admin = admin;
        this.toDate = new Date().toISOString();
        this.tableList = false;
        this.mainTrialList = [];
        this.totalDebit = 0;
        this.totalCredit = 0;
        this.branchName = [];
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_10_rxjs__["Observable"].of([]);
            }
        };
        this.fetchForm = this.fb.group({
            from_date: [this.toDate],
            to_date: [this.toDate],
            agency_name: [''],
        });
        this.getAccountsLedgerBranchName();
    }
    RewardsTrialBalancePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad RewardsTrialBalancePage');
    };
    RewardsTrialBalancePage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__home_home__["a" /* HomePage */]);
    };
    RewardsTrialBalancePage.prototype.getAccountsLedgerBranchName = function () {
        var _this = this;
        // this.loader.show();
        this.accounts.getAccountsLedgerBranchName().subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            _this.branchName = data.results;
            console.log("Accounts Name >>>>>", _this.branchName);
        }, function (err) {
            // this.loader.hide();
            // this.toast.error({ 'message': 'Something went wrong while.' });
            console.log(">>>>>Err", err);
        });
    };
    RewardsTrialBalancePage.prototype.fetch = function () {
        var _this = this;
        this.mainTrialList = [];
        this.totalCredit = 0;
        var filters = {
            from_date: '',
            to_date: '',
            agency_name: '',
        };
        if (this.fetchForm.value.from_date) {
            filters.from_date = this.fetchForm.value.from_date;
        }
        else {
            filters.from_date = '';
        }
        if (this.fetchForm.value.to_date) {
            filters.to_date = this.fetchForm.value.to_date;
        }
        else {
            filters.to_date = '';
        }
        if (this.fetchForm.value.agency_name) {
            filters.agency_name = this.fetchForm.value.agency_name.agency_name;
        }
        else {
            filters.agency_name = '';
        }
        // if (this.fetchForm.value.branch_name){
        //   filters.branch_name = this.fetchForm.value.branch_name;
        // } else {
        //   filters.branch_name = '';
        // }
        this.loader.show();
        this.accounts.displayRewardsTrialBalance(filters).subscribe(function (res) {
            var data = res.json();
            var totalCreditArray = 0;
            var totalDeditArray = 0;
            data.results.forEach(function (element) {
                var accountName = element.salesman;
                var debitAmount = element.dr;
                var creditAmount = element.cr;
                if (creditAmount == 0 && debitAmount == 0) {
                    console.log("creditAmount and debitAmount  0");
                }
                else {
                    var obj = {
                        "salesman": accountName,
                        "debit_amount": debitAmount,
                        "credit_amount": Math.abs(creditAmount)
                    };
                    totalDeditArray = totalDeditArray + debitAmount;
                    totalCreditArray = totalCreditArray + creditAmount;
                    _this.mainTrialList.push(obj);
                    _this.totalDebit = Math.abs(totalDeditArray);
                    _this.totalCredit = Math.abs(totalCreditArray);
                }
            });
            console.log("TrialBalance >>>>>", _this.mainTrialList);
            _this.tableList = true;
            _this.loader.hide();
        }, function (err) {
            _this.loader.hide();
            _this.toast.error({ 'message': 'Something went wrong while.' });
            console.log(">>>>>Err", err);
        });
    };
    RewardsTrialBalancePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-rewards-trial-balance',template:/*ion-inline-start:"D:\truck\src\pages\rewards-trial-balance\rewards-trial-balance.html"*/'<!--\n  Generated template for the RewardsTrialBalancePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <!-- <ion-title>rewards-trial-balance</ion-title> -->\n    <ion-toolbar>\n      <ion-title>Rewards Trial Balance</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="fetchForm" novalidate>\n    <div class="form-group">\n      <label class=" label">From Date</label>\n      <ion-item class="form-control">\n        <ion-datetime name="from_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="from_date"></ion-datetime>\n      </ion-item>\n    </div>\n  \n    <div class="form-group">\n      <label class=" label">To Date</label>\n      <ion-item class="form-control">\n        <ion-datetime name="to_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="to_date"></ion-datetime>\n      </ion-item>\n    </div>\n  \n    <div class="form-group">\n      <label class=" label">Agency Name</label>\n      <input \n        class="form-control" \n        ng2-auto-complete \n        [source]="agencyName.bind(this)" \n        list-formatter="agency_name" \n        formControlName="agency_name"\n      />   \n    </div>\n\n    <!-- <div class="form-group">\n      <label class=" label">Branch Name </label> \n      <select class="form-control drop-down" name="branch_name" formControlName="branch_name" >\n        <option value="">Select Branch Name</option>\n        <option *ngFor="let bn of branchName" [ngValue]="bn">{{bn}}</option>\n      </select>\n    </div> -->\n\n    <button ion-button (click)="fetch()" class="button-al" type="submit"> Fetch </button><br><br>\n    <hr />\n\n\n    <div *ngIf="tableList">\n      <table border="1">\n        <thead>\n          <tr>\n            <th>Salesman Name</th>\n            <th>Dr.</th>\n            <th>Cr.</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let mtl of mainTrialList">\n            <td>{{ mtl.salesman }}</td>\n            <td><span class="button-al">{{ mtl.debit_amount | number : \'1.2-2\' }}</span></td>\n            <td><span class="button-al">{{ mtl.credit_amount | number : \'1.2-2\' }}</span></td>\n          </tr>\n          <tr>\n            <!-- <td></td> -->\n            <td><b class="button-al">Total</b></td>\n            <td><span class="button-al">{{ totalDebit | number : \'1.2-2\' }}</span></td>\n            <td><span class="button-al">{{ totalCredit | number : \'1.2-2\' }}</span></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\rewards-trial-balance\rewards-trial-balance.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_8__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_7__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_6__providers_accounts__["a" /* Accounts */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], RewardsTrialBalancePage);
    return RewardsTrialBalancePage;
}());

//# sourceMappingURL=rewards-trial-balance.js.map

/***/ }),

/***/ 483:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddPodPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__manage_pod__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the AddPodPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddPodPage = /** @class */ (function () {
    function AddPodPage(navCtrl, navParams, loader, toast, fb, requestLoad, events, trucks, accounts, admin) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.events = events;
        this.trucks = trucks;
        this.accounts = accounts;
        this.admin = admin;
        this.toDate = new Date().toISOString();
        this.dealListFlag = false;
        this.dealsList = [];
        this.statues = ['Ok', 'Not Ok'];
        this.podPending = ['Yes', 'No'];
        this.submitted = false;
        this.detentionAmount = 0;
        this.lateDeliveryAmount = 0;
        this.agencyPercentage = 0;
        this.indianaTruckingPercentage = 0;
        this.investorPercentage = 0;
        this.investorName = "";
        this.declare_advance = 0;
        this.receive_advance = 0;
        this.balance_advance = 0;
        this.advanceAmountList = [];
        this.mainPODList = [];
        this.mainDealFinalList = [];
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Transporter Name list
        this.transporterName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTransporterName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_3_rxjs__["Observable"].of([]);
            }
        };
        this.addForm = this.fb.group({
            pod_date: [this.toDate],
            truck_no: ['', __WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].maxLength(25)])],
            transporter_name: ['', __WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].maxLength(25)])],
            deal_no: ['', __WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].required])],
            dispatch_date: ['', __WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].required])],
            delivery_date: ['', __WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].required])],
            arrival_date: ['', __WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].required])],
            unloading_date: ['', __WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_7__angular_forms__["Validators"].required])],
            late_delivery: [''],
            detention: [''],
            company_late_delivery_amount: [''],
            company_detention_amount: [''],
            company_claim_amount: [''],
            transporter_late_delivery_amount: [''],
            transporter_detention_amount: [''],
            transporter_claim_amount: [''],
            pod_status: [''],
            pod_pending: [''],
        });
        this.formData = new FormData();
        this.getAdvanceAmountList();
    }
    AddPodPage.prototype.ionViewDidLoad = function () {
        console.log(' >>> ionViewDidLoad AddPodPage');
    };
    AddPodPage.prototype.ngOnInit = function () {
        console.log(' >>> ngOnInit');
    };
    AddPodPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    AddPodPage.prototype.isReadonly = function () {
        return this.isReadonly; //return true/false 
    };
    AddPodPage.prototype.getDealNosList = function () {
        var _this = this;
        if (this.addForm.value.truck_no) {
            this.mainDealFinalList = [];
            this.dealsList = [];
            var truckNo = this.addForm.value.truck_no.truck_no;
            var transporterName = this.addForm.value.transporter_name.transport_name;
            this.loader.show();
            // this.accounts.getDealNosList(transporterName, truckNo).subscribe((res: any) =>{
            // this.accounts.getNewDealNosList(transporterName, truckNo).subscribe((res: any) =>{
            this.accounts.getPODList().subscribe(function (res) {
                var podData = res.json();
                _this.mainPODList = [];
                _this.mainPODList = podData.result;
                _this.accounts.getNewDealNosListByTruckNo(truckNo).subscribe(function (res) {
                    var data = res.json();
                    _this.dealListFlag = true;
                    _this.dealsList = data.results;
                    _this.dealsList.forEach(function (df) {
                        _this.mainPODList.forEach(function (pod) {
                            if (pod.deal_no == df.deal_no) {
                                console.log("Not Add >>>", df.deal_no);
                            }
                            else {
                                _this.declare_advance = 0;
                                _this.receive_advance = 0;
                                _this.balance_advance = 0;
                                _this.advanceAmountList.forEach(function (aa) {
                                    if (df.deal_no == aa.deal_no && aa.name == truckNo) {
                                        if (aa.advance_amount[0]) {
                                            aa.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                                if (df.transporter_commission) {
                                    _this.receive_advance = _this.receive_advance + df.transporter_commission;
                                }
                                _this.declare_advance = df.transporter_freight;
                                _this.balance_advance = _this.declare_advance - _this.receive_advance;
                                df.declare_advance = _this.declare_advance;
                                df.receive_advance = _this.receive_advance;
                                df.balance_advance = _this.balance_advance;
                                df.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(df.deal_date).format("YYYY-MM-DD");
                                _this.mainDealFinalList.push(df);
                            }
                        });
                    });
                    _this.loader.hide();
                    console.log("Results >>>>", data.results);
                }, function (err) {
                    console.log("err >>>>", err);
                });
            }, function (err) {
                console.log("err >>>>", err);
            });
        }
    };
    AddPodPage.prototype.uploadPOD = function (event) {
        var fileList = event.target.files;
        if (fileList.length > 0) {
            var file = fileList[0];
            this.formData.append('upload_pod', file, file.name);
        }
    };
    AddPodPage.prototype.selectDealNoData = function (data) {
        var _this = this;
        console.log("Deal No Data >>>>", data);
        this.addForm.controls['deal_no'].setValue(data.deal_no);
        this.addForm.controls['transporter_name'].setValue(data.transporter_name);
        this.dealDate = data.deal_date;
        this.dealFrom = data.from;
        this.dealTo = data.to;
        this.dealConsignor = data.company_name;
        this.DealNoDetails = data;
        this.mainPODAmount = data.balance_advance;
        this.loader.show();
        this.accounts.getPostLoadByTicketNo(data.company_ticket_no).subscribe(function (res) {
            var postData = res.json();
            _this.loader.hide();
            if (postData.results[0]) {
                _this.postLoadData = postData.results[0];
                _this.addForm.controls['dispatch_date'].setValue(_this.postLoadData.despatch_date);
                _this.addForm.controls['delivery_date'].setValue(_this.postLoadData.delivery_date);
                if (_this.postLoadData.late_delivery_amount) {
                    _this.lateDeliveryAmount = _this.postLoadData.late_delivery_amount;
                }
                if (_this.postLoadData.detention_amount) {
                    _this.detentionAmount = _this.postLoadData.detention_amount;
                }
                _this.postLoadPaymentMode = _this.postLoadData.payment_mode;
            }
            _this.getAgencyId();
            _this.getCompanyId();
            _this.getTransporterId();
            _this.getAgencyListByName();
            console.log("postLoadData >>>>", data.results);
        }, function (err) {
            console.log("err >>>>", err);
        });
    };
    AddPodPage.prototype.setLateDelivery = function (event) {
        var deliveryDate = __WEBPACK_IMPORTED_MODULE_11_moment__(this.addForm.value.delivery_date, "YYYY-MM-DD");
        var arrivalDate = __WEBPACK_IMPORTED_MODULE_11_moment__(this.addForm.value.arrival_date, "YYYY-MM-DD");
        var lateDelivery = arrivalDate.diff(deliveryDate, 'days') + 1;
        this.addForm.controls['late_delivery'].setValue(lateDelivery);
        var cal = this.lateDeliveryAmount * lateDelivery;
        this.addForm.controls['company_late_delivery_amount'].setValue(cal);
        if (this.addForm.value.unloading_date) {
            this.setDetention("");
        }
    };
    AddPodPage.prototype.setDetention = function (event) {
        var arrivalDate = __WEBPACK_IMPORTED_MODULE_11_moment__(this.addForm.value.arrival_date, "YYYY-MM-DD");
        var unloadingDate = __WEBPACK_IMPORTED_MODULE_11_moment__(this.addForm.value.unloading_date, "YYYY-MM-DD");
        var detentionDiff = unloadingDate.diff(arrivalDate, 'days') + 1;
        this.addForm.controls['detention'].setValue(detentionDiff);
        var cal = this.detentionAmount * detentionDiff;
        this.addForm.controls['company_detention_amount'].setValue(cal);
    };
    AddPodPage.prototype.submit = function (isValid) {
        var _this = this;
        this.submitted = true;
        if (isValid) {
            var getFormData = this.addForm.value;
            this.formData.append('pod_date', getFormData.pod_date);
            this.formData.append('truck_no', getFormData.truck_no.truck_no);
            this.formData.append('transporter_name', getFormData.transporter_name.transport_name);
            this.formData.append('deal_no', getFormData.deal_no);
            this.formData.append('deal_date', this.dealDate);
            this.formData.append('from', this.dealFrom);
            this.formData.append('to', this.dealTo);
            this.formData.append('consignor', this.dealConsignor);
            this.formData.append('dispatch_date', getFormData.dispatch_date);
            this.formData.append('delivery_date', getFormData.delivery_date);
            if (getFormData.arrival_date) {
                this.formData.append('arrival_date', getFormData.arrival_date);
                this.formData.append('late_delivery', getFormData.late_delivery);
            }
            if (getFormData.unloading_date) {
                this.formData.append('unloading_date', getFormData.unloading_date);
                this.formData.append('detention', getFormData.detention);
            }
            this.formData.append('company_late_delivery_amount', getFormData.company_late_delivery_amount);
            this.formData.append('company_detention_amount', getFormData.company_detention_amount);
            this.formData.append('company_claim_amount', getFormData.company_claim_amount);
            this.formData.append('transporter_late_delivery_amount', getFormData.transporter_late_delivery_amount);
            this.formData.append('transporter_detention_amount', getFormData.transporter_detention_amount);
            this.formData.append('transporter_claim_amount', getFormData.transporter_claim_amount);
            this.formData.append('pod_status', getFormData.pod_status);
            for (var _i = 0, _a = this.formData.entries(); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                console.log(key, ':', value);
            }
            // this.formData.forEach(element => {
            //   console.log(">>>>"+element, this.formData[element]);
            // });
            // if(this.formData['upload_pod']) {
            //   console.log("Yes >>>>");
            // } else {
            //   console.log("No >>>>");
            // }
            console.log("formData >>>>", this.formData);
            this.loader.show();
            this.accounts.addPOD(this.formData).subscribe(function (res) {
                if (getFormData.pod_status == "Not Ok") {
                    _this.loader.hide();
                    _this.toast.show({ 'message': 'Added successfully.' });
                    _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__manage_pod__["a" /* ManagePodPage */]);
                }
                else {
                    var accountsLedgerArray = [];
                    var agencyName = _this.DealNoDetails.agency_name;
                    var agencyId = _this.agencyID;
                    var companyBranchName = _this.DealNoDetails.company_name;
                    var companyBranchId = _this.companyId;
                    var transporterBranchName = _this.DealNoDetails.transporter_name;
                    var transporterBranchId = _this.transporterId;
                    var truckNo = _this.DealNoDetails.truck_no;
                    var srNo = _this.DealNoDetails.deal_no;
                    var dealId = _this.DealNoDetails._id;
                    var userName = localStorage.getItem('user_name');
                    var userId = localStorage.getItem('user_id');
                    // var partyName = getFormData.party_category;
                    getFormData.company_late_delivery_amount;
                    getFormData.company_detention_amount;
                    getFormData.company_claim_amount;
                    getFormData.transporter_late_delivery_amount;
                    getFormData.transporter_detention_amount;
                    getFormData.transporter_claim_amount;
                    if (_this.DealNoDetails.payment_mode == 'To Be Billed') {
                        // ---------> For Company 
                        if (getFormData.company_late_delivery_amount) {
                            var company_late_delivery_debit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Payment " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_late_delivery_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_late_delivery_debit);
                            var company_late_delivery_credit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Late Delivery A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_late_delivery_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_late_delivery_credit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Receipt " + companyBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_late_delivery_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Late Delivery A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_late_delivery_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                        }
                        if (getFormData.company_detention_amount) {
                            var company_detention_amount_credit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Payment " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_detention_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_detention_amount_credit);
                            var company_detention_amount_debit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Detention A/c..",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_detention_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_detention_amount_debit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Receipt " + companyBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_detention_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Detention A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_detention_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                        }
                        if (getFormData.company_claim_amount) {
                            var company_late_delivery_debit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Payment " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_claim_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_late_delivery_debit);
                            var company_late_delivery_credit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Claim A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_claim_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_late_delivery_credit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Receipt " + companyBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_claim_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Claim A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_claim_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                        }
                        // ---------> For Transporter 
                        if (getFormData.transporter_late_delivery_amount) {
                            var transporter_late_delivery_credit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Receipt " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_late_delivery_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_credit);
                            var transporter_late_delivery_debit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Late Delivery A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_late_delivery_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_debit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Payment " + transporterBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_late_delivery_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Late Delivery A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_late_delivery_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                        }
                        if (getFormData.transporter_claim_amount) {
                            var transporter_late_delivery_credit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Receipt " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_claim_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_credit);
                            var transporter_late_delivery_debit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Claim A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_claim_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_debit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Payment " + transporterBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_claim_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Claim A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_claim_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                        }
                        if (getFormData.transporter_detention_amount) {
                            var transporter_late_delivery_debit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Receipt " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_detention_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_debit);
                            var transporter_late_delivery_credit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Detention A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_detention_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_credit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Payment " + transporterBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_detention_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Detention A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_detention_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                        }
                        // --------->  POD
                        var pod_credit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": 0,
                            "credit_amount": _this.mainPODAmount,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(pod_credit);
                        var pod_debit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": "Receipt " + agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": _this.mainPODAmount,
                            "credit_amount": 0,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(pod_debit);
                        var agency_pod_debit = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": truckNo,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": _this.mainPODAmount,
                            "credit_amount": 0,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(agency_pod_debit);
                        var agency_pod_credit = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": "Payment " + transporterBranchName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": 0,
                            "credit_amount": _this.mainPODAmount,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(agency_pod_credit);
                    }
                    if (_this.DealNoDetails.payment_mode == 'Advance Pod') {
                        // --------->  Transporter POD
                        var company_pod_debit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": _this.mainPODAmount,
                            "credit_amount": 0,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(company_pod_debit);
                        var company_pod_credit = {
                            "agency_name": agencyName,
                            "branch_id": companyBranchId,
                            "branch_name": companyBranchName,
                            "account_name": "Payment " + agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": 0,
                            "credit_amount": _this.mainPODAmount,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(company_pod_credit);
                        var company_agency_pod_credit = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": companyBranchName + " Billed A/c.",
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": 0,
                            "credit_amount": _this.mainPODAmount,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(company_agency_pod_credit);
                        var company_agency_pod_debit = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": "Receipt " + companyBranchName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": _this.mainPODAmount,
                            "credit_amount": 0,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(company_agency_pod_debit);
                        // ---------> For Company 
                        if (getFormData.company_late_delivery_amount) {
                            var company_late_delivery_debit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Payment " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_late_delivery_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_late_delivery_debit);
                            var company_late_delivery_credit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Late Delivery A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_late_delivery_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_late_delivery_credit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Receipt " + companyBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_late_delivery_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Late Delivery A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_late_delivery_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                        }
                        if (getFormData.company_detention_amount) {
                            var company_detention_amount_credit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Payment " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_detention_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_detention_amount_credit);
                            var company_detention_amount_debit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Detention A/c..",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_detention_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_detention_amount_debit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Receipt " + companyBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_detention_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Detention A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_detention_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                        }
                        if (getFormData.company_claim_amount) {
                            var company_late_delivery_debit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Payment " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_claim_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_late_delivery_debit);
                            var company_late_delivery_credit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Claim A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_claim_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_late_delivery_credit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Receipt " + companyBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.company_claim_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Claim A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.company_claim_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                        }
                        // ---------> For Transporter 
                        if (getFormData.transporter_late_delivery_amount) {
                            var transporter_late_delivery_credit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Receipt " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_late_delivery_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_credit);
                            var transporter_late_delivery_debit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Late Delivery A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_late_delivery_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_debit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Payment " + transporterBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_late_delivery_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Late Delivery A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_late_delivery_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                        }
                        if (getFormData.transporter_claim_amount) {
                            var transporter_late_delivery_credit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Receipt " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_claim_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_credit);
                            var transporter_late_delivery_debit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Claim A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_claim_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_debit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Payment " + transporterBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_claim_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Claim A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_claim_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                        }
                        if (getFormData.transporter_detention_amount) {
                            var transporter_late_delivery_debit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Receipt " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_detention_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_debit);
                            var transporter_late_delivery_credit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Detention A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_detention_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(transporter_late_delivery_credit);
                            var agency_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Payment " + transporterBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": getFormData.transporter_detention_amount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_credit);
                            var agency_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Detention A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": getFormData.transporter_detention_amount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_debit);
                        }
                        // --------->  Transporter POD
                        var pod_credit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": 0,
                            "credit_amount": _this.mainPODAmount,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(pod_credit);
                        var pod_debit = {
                            "agency_name": agencyName,
                            "branch_id": transporterBranchId,
                            "branch_name": transporterBranchName,
                            "account_name": "Receipt " + agencyName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": _this.mainPODAmount,
                            "credit_amount": 0,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(pod_debit);
                        var agency_pod_debit = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": truckNo,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": _this.mainPODAmount,
                            "credit_amount": 0,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(agency_pod_debit);
                        var agency_pod_credit = {
                            "agency_name": agencyName,
                            "branch_id": agencyId,
                            "branch_name": agencyName,
                            "account_name": "Payment " + transporterBranchName,
                            "truck_no": truckNo,
                            "sr_no": srNo,
                            "deal_id": dealId,
                            "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                            "narration_ref_no": "",
                            "document_type": "POD",
                            "debit_amount": 0,
                            "credit_amount": _this.mainPODAmount,
                            "voucher_date": _this.DealNoDetails.deal_date,
                            "party_name": "",
                            "user_name": userName,
                            "user_id": userId
                        };
                        accountsLedgerArray.push(agency_pod_credit);
                    }
                    if (_this.DealNoDetails.payment_mode == 'Advance To Pay') {
                        console.log("Throw Driver App >>>");
                    }
                    if (_this.DealNoDetails.payment_mode == 'To Pay') {
                        console.log("Throw Driver App >>>");
                    }
                    _this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe(function (res) {
                        _this.loader.hide();
                        _this.toast.show({ 'message': 'Added successfully.' });
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__manage_pod__["a" /* ManagePodPage */]);
                    }, function (err) {
                        _this.loader.hide();
                        _this.toast.error({ 'message': 'Something went wrong.' });
                        console.log(">>>>>err", err);
                    });
                }
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>err", err);
            });
        }
    };
    AddPodPage.prototype.getAgencyId = function () {
        var _this = this;
        this.trucks.searchAgencyName(this.DealNoDetails.agency_name).subscribe(function (res) {
            var data = res.json();
            _this.agencyID = data[0]._id;
            console.log("agencyID >>>>", _this.agencyID);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddPodPage.prototype.getCompanyId = function () {
        var _this = this;
        this.requestLoad.searchCompany(this.DealNoDetails.company_name).subscribe(function (res) {
            var data = res.json();
            _this.companyId = data[0]._id;
            console.log("companyId >>>>", _this.companyId);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddPodPage.prototype.getTransporterId = function () {
        var _this = this;
        this.trucks.searchTransporterName(this.DealNoDetails.transporter_name).subscribe(function (res) {
            var data = res.json();
            _this.transporterId = data[0]._id;
            console.log("transporterId >>>>", _this.transporterId);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddPodPage.prototype.getAgencyListByName = function () {
        var _this = this;
        var agencyName = this.DealNoDetails.agency_name;
        this.admin.getAgencyListByName(agencyName).subscribe(function (res) {
            var data = res.json();
            var agencyData = data.results;
            if (agencyData[0]) {
                _this.investorName = agencyData[0].investor_name;
                _this.agencyPercentage = agencyData[0].agency_percentage;
                _this.indianaTruckingPercentage = agencyData[0].indiana_trucking_percentage;
                _this.investorPercentage = agencyData[0].investor_percentage;
            }
            console.log("Agency Data >>>>", agencyData[0]);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddPodPage.prototype.getAdvanceAmountList = function () {
        var _this = this;
        this.loader.show();
        this.accounts.getAdvanceAmountList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.advanceAmountList = data.results;
            _this.advanceAmountList.forEach(function (element) {
                element.date_frmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.date).format('YYYY-MM-DD');
            });
            console.log('Data >>>>>>>', _this.advanceAmountList);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    AddPodPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-pod',template:/*ion-inline-start:"D:\truck\src\pages\manage-pod\add-pod\add-pod.html"*/'<!--\n  Generated template for the AddPodPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add POD</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n        \n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="addForm" novalidate>\n\n    <div class="form-group">\n      <label class=" label">POD Date</label>\n      <ion-item class="form-control">\n        <ion-datetime name="pod_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="pod_date"></ion-datetime>\n      </ion-item>\n    </div>\n    <div class="form-group">\n      <label class=" label">Truck No <span style="color:red">*</span> </label>\n      <input\n        class="form-control"\n        ng2-auto-complete\n        [source]="truckNo.bind(this)"\n        list-formatter="truck_no"\n        formControlName="truck_no"\n        (change)="getDealNosList()"\n      />\n      \n    <div class="error-msg" *ngIf="submitted || (addForm.controls.truck_no.invalid && (addForm.controls.truck_no.dirty || addForm.controls.truck_no.touched))">\n      <div *ngIf="addForm.controls[\'truck_no\'].hasError(\'required\')">\n        <label>Truck no is required.</label>\n      </div>\n      <div *ngIf="addForm.controls[\'truck_no\'].hasError(\'minlength\')">\n        <label>Minimum length is upto 2 letters.</label>\n      </div>\n      <div *ngIf="addForm.controls[\'truck_no\'].hasError(\'maxlength\')">\n        <label>Maximum length is upto 25 letters.</label>\n      </div>\n    </div>\n    </div>\n\n\n        \n\n    <br><br>\n    <div *ngIf="dealListFlag">\n\n      <table border="1">\n        <thead>\n          <tr>\n            <th>Deal No</th>\n            <th>Date</th>\n            <th>From</th>\n            <th>To</th>\n            <th>Consignor</th>\n            <th>Truck No.</th>\n\n            <th>Freight</th>\n            <th>Receive Advance</th>\n            <th>Balance Advance</th>\n            \n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let dld of mainDealFinalList">\n            <td class="deal-color" (click)="selectDealNoData(dld)">{{ dld.deal_no }}</td>\n            <td>{{ dld.deal_date_fmt }}</td>\n            <td>{{ dld.from }}</td>\n            <td>{{ dld.to }}</td>\n            <td>{{ dld.company_name }}</td>\n            <td>{{ dld.truck_no }}</td>\n\n            <td><span class="button-al">{{ dld.declare_advance | number : \'1.2-2\' }}</span></td>\n            <td><span class="button-al">{{ dld.receive_advance | number : \'1.2-2\' }}</span></td>\n            <td><span class="button-al">{{ dld.balance_advance | number : \'1.2-2\' }}</span></td>\n\n          </tr>\n        </tbody>\n      </table>\n\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Deal No. <span style="color:red">*</span>  </label> \n      <input name="deal_no" type="number" formControlName="deal_no" class="form-control" /> \n      <div class="error-msg" *ngIf="submitted || (addForm.controls.deal_no.invalid && (addForm.controls.deal_no.dirty || addForm.controls.deal_no.touched))">\n        <div *ngIf="addForm.controls[\'deal_no\'].hasError(\'required\')">\n          <label>Deal No is required.</label>\n        </div>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Transporter Name <span style="color:red">*</span> </label>\n      <input\n        class="form-control"\n        ng2-auto-complete\n        [source]="transporterName.bind(this)"\n        list-formatter="transport_name"\n        formControlName="transporter_name"\n      />\n      <!-- (change)="getDealNosList()"         -->\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.transporter_name.invalid && (addForm.controls.transporter_name.dirty || addForm.controls.transporter_name.touched))">\n        <div *ngIf="addForm.controls[\'transporter_name\'].hasError(\'required\')">\n          <label>Transporter Name is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'transporter_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'transporter_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n    </div>\n\n        \n    <div class="form-group">\n      <label class=" label">Dispatch Date <span style="color:red">*</span> </label> \n      <ion-item class="form-control">\n        <ion-datetime name="dispatch_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="dispatch_date"></ion-datetime>\n      </ion-item>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.dispatch_date.invalid && (addForm.controls.dispatch_date.dirty || addForm.controls.dispatch_date.touched))">\n        <div *ngIf="addForm.controls[\'dispatch_date\'].hasError(\'required\')">\n          <label>Dispatch Date is required.</label>\n        </div>\n      </div>  \n    </div>\n\n          \n\n    <div class="form-group">\n      <label class=" label">Expected Delivery Date <span style="color:red">*</span> </label> \n      <ion-item class="form-control">\n        <ion-datetime name="delivery_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="delivery_date"></ion-datetime>\n      </ion-item>\n      \n    <div class="error-msg" *ngIf="submitted || (addForm.controls.delivery_date.invalid && (addForm.controls.delivery_date.dirty || addForm.controls.delivery_date.touched))">\n      <div *ngIf="addForm.controls[\'delivery_date\'].hasError(\'required\')">\n        <label>Expected Delivery Date is required.</label>\n      </div>\n    </div>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Arrival Date <span style="color:red">*</span> </label> \n      <ion-item class="form-control">\n        <ion-datetime name="arrival_date" (ionChange)="setLateDelivery($event)" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="arrival_date"></ion-datetime>\n      </ion-item>\n      \n    <div class="error-msg" *ngIf="submitted || (addForm.controls.arrival_date.invalid && (addForm.controls.arrival_date.dirty || addForm.controls.arrival_date.touched))">\n      <div *ngIf="addForm.controls[\'arrival_date\'].hasError(\'required\')">\n        <label>Arrival Date is required.</label>\n      </div>\n    </div>\n    </div>\n\n\n    <div class="form-group">\n        <label class=" label">Late Delivery </label> \n        <input name="late_delivery" [readonly]="isReadonly()" type="number" formControlName="late_delivery" class="form-control" /> \n    </div>\n    <div class="form-group">\n      <label class=" label">Unloading Date <span style="color:red">*</span> </label> \n      <ion-item class="form-control">\n        <ion-datetime name="unloading_date" (ionChange)="setDetention($event)" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="unloading_date"></ion-datetime>\n      </ion-item>\n      \n    <div class="error-msg" *ngIf="submitted || (addForm.controls.unloading_date.invalid && (addForm.controls.unloading_date.dirty || addForm.controls.unloading_date.touched))">\n      <div *ngIf="addForm.controls[\'unloading_date\'].hasError(\'required\')">\n        <label>Unloading Date is required.</label>\n      </div>\n    </div>\n    </div>\n\n\n    <div class="form-group">\n      <label class=" label">Detention </label> \n      <input name="detention" [readonly]="isReadonly()" type="number" formControlName="detention" class="form-control" /> \n    </div>\n\n   \n     <!--  Company  Transporter-->\n     <br>\n     <ion-row style="width: 100%;">\n        <div class="form-group">\n       <ion-col col-6>\n         <span class="fonts-size">Company</span>\n       </ion-col>\n      </div>\n       <div class="form-group">\n       <ion-col col-6>\n         <span class="fonts-size">Transporter</span>\n       </ion-col>\n      </div>\n     </ion-row>\n \n \n     <ion-row>\n       <ion-col col-6>\n         <div class="form-group">\n           <input name="company_late_delivery_amount" placeholder="Company late delivery amount" type="number" formControlName="company_late_delivery_amount" class="form-control" /> \n         </div>\n       </ion-col>\n \n       <ion-col col-6>\n         <div class="form-group">\n           <input name="transporter_late_delivery_amount" placeholder="Transporter late delivery amount" type="number" formControlName="transporter_late_delivery_amount" class="form-control" /> \n         </div>\n       </ion-col>\n     </ion-row>\n \n     <ion-row>\n       <ion-col col-6>\n         <div class="form-group">\n           <input name="company_detention_amount" type="number" placeholder="Company detention amount" formControlName="company_detention_amount" class="form-control" /> \n         </div>\n       </ion-col>\n \n       <ion-col col-6>\n         <div class="form-group">\n           <input name="transporter_detention_amount" type="number" placeholder="Transporter detention amount" formControlName="transporter_detention_amount" class="form-control" /> \n         </div>\n       </ion-col>\n     </ion-row>\n \n     <ion-row>\n       <ion-col col-6>\n         <div class="form-group">\n           <input name="company_claim_amount" type="number" placeholder="Company claim amount" formControlName="company_claim_amount" class="form-control" /> \n         </div>\n       </ion-col>\n \n       <ion-col col-6>\n         <div class="form-group">\n           <input name="transporter_claim_amount" type="number" placeholder="Transporter claim amount" formControlName="transporter_claim_amount" class="form-control" /> \n         </div>\n       </ion-col>\n     </ion-row>\n \n    <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <!-- <label class="form-group label">POD Status</label> -->\n          <label class=" label">POD Status</label>\n          <select class="form-control drop-down" name="pod_status" formControlName="pod_status" >\n            <option value="">Select Status</option>\n            <option *ngFor="let sts of statues" [ngValue]="sts">{{sts}}</option>\n          </select>\n        </div>\n\n        <!-- <div class="form-group">\n          <label class=" label">POD Pending</label>\n          <select class="form-control drop-down" name="pod_pending" formControlName="pod_pending" >\n            <option value="">Select</option>\n            <option *ngFor="let pdp of podPending" [ngValue]="pdp">{{pdp}}</option>\n          </select>\n        </div>  -->\n      </ion-col>\n    </ion-row>\n\n    <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">Upload POD </label>\n          <input type="file" class="form-control" (change)="uploadPOD($event)" placeholder="Upload file">\n        </div>\n      </ion-col>\n    </ion-row>\n\n    <br>\n\n    <div padding class="button-submit">\n      <button ion-button block size="large" type="submit" (click)="submit(addForm.valid)" expand="block"> Submit </button>\n    </div>\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-pod\add-pod\add-pod.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_9__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_8__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_7__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_6__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_5__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_4__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_10__providers_accounts__["a" /* Accounts */],
            __WEBPACK_IMPORTED_MODULE_13__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], AddPodPage);
    return AddPodPage;
}());

//# sourceMappingURL=add-pod.js.map

/***/ }),

/***/ 484:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditPodPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__manage_pod__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














/**
 * Generated class for the EditPodPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditPodPage = /** @class */ (function () {
    function EditPodPage(navCtrl, navParams, loader, toast, fb, requestLoad, events, trucks, accounts, admin) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.events = events;
        this.trucks = trucks;
        this.accounts = accounts;
        this.admin = admin;
        this.toDate = new Date().toISOString();
        this.dealListFlag = false;
        this.dealsList = [];
        this.statues = ['Ok', 'Not Ok'];
        this.podPending = ['Yes', 'No'];
        this.podFlag = 0;
        this.submitted = false;
        this.detentionAmount = 0;
        this.lateDeliveryAmount = 0;
        this.agencyPercentage = 0;
        this.indianaTruckingPercentage = 0;
        this.investorPercentage = 0;
        this.investorName = "";
        this.podEditFlag = 0;
        this.declare_advance = 0;
        this.receive_advance = 0;
        this.balance_advance = 0;
        this.advanceAmountList = [];
        this.mainDealFinalList = [];
        // Search query for truck no list
        this.truckNo = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTruckNo(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_9_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Transporter Name list
        this.transporterName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchTransporterName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_9_rxjs__["Observable"].of([]);
            }
        };
        this.editForm = this.fb.group({
            pod_date: [''],
            truck_no: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            transporter_name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            deal_no: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            dispatch_date: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            delivery_date: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            arrival_date: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            unloading_date: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required])],
            late_delivery: [''],
            detention: [''],
            company_late_delivery_amount: [''],
            company_detention_amount: [''],
            company_claim_amount: [''],
            transporter_late_delivery_amount: [''],
            transporter_detention_amount: [''],
            transporter_claim_amount: [''],
            pod_status: [''],
            pod_pending: [''],
        });
        this.podDetails = navParams.get('data');
        this.editForm.controls['pod_date'].setValue(this.podDetails.pod_date);
        this.editForm.controls['truck_no'].setValue(this.podDetails.truck_no);
        this.editForm.controls['transporter_name'].setValue(this.podDetails.transporter_name);
        this.editForm.controls['deal_no'].setValue(this.podDetails.deal_no);
        this.editForm.controls['dispatch_date'].setValue(this.podDetails.dispatch_date);
        this.editForm.controls['delivery_date'].setValue(this.podDetails.delivery_date);
        this.editForm.controls['arrival_date'].setValue(this.podDetails.arrival_date);
        this.editForm.controls['unloading_date'].setValue(this.podDetails.unloading_date);
        this.editForm.controls['late_delivery'].setValue(this.podDetails.late_delivery);
        this.editForm.controls['detention'].setValue(this.podDetails.detention);
        this.editForm.controls['pod_status'].setValue(this.podDetails.pod_status);
        this.editForm.controls['pod_pending'].setValue(this.podDetails.pod_pending);
        this.editForm.controls['company_late_delivery_amount'].setValue(this.podDetails.company_late_delivery_amount);
        this.editForm.controls['company_detention_amount'].setValue(this.podDetails.company_detention_amount);
        this.editForm.controls['company_claim_amount'].setValue(this.podDetails.company_claim_amount);
        this.editForm.controls['transporter_late_delivery_amount'].setValue(this.podDetails.transporter_late_delivery_amount);
        this.editForm.controls['transporter_detention_amount'].setValue(this.podDetails.transporter_detention_amount);
        this.editForm.controls['transporter_claim_amount'].setValue(this.podDetails.transporter_claim_amount);
        this.lateDeliveryAmount = this.podDetails.company_late_delivery_amount / this.podDetails.late_delivery;
        this.detentionAmount = this.podDetails.company_detention_amount / this.podDetails.detention;
        this.dealDate = this.podDetails.deal_date;
        this.dealFrom = this.podDetails.from;
        this.dealTo = this.podDetails.to;
        this.dealConsignor = this.podDetails.consignor;
        this.formData = new FormData();
        this.getAdvanceAmountList();
        this.getDealNosList();
    }
    EditPodPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditPodPage');
        this.podEditFlag = 1;
    };
    EditPodPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_10__home_home__["a" /* HomePage */]);
    };
    EditPodPage.prototype.isReadonly = function () {
        return this.isReadonly; //return true/false 
    };
    EditPodPage.prototype.getDealDatabyPodDealNo = function () {
        var _this = this;
        // console.log("Re Results >>>>", this.dealsList);
        this.dealsList.forEach(function (element) {
            if (element.deal_no == _this.podDetails.deal_no) {
                _this.selectDealNoData(element);
            }
        });
    };
    EditPodPage.prototype.getDealNosList = function () {
        var _this = this;
        if (this.editForm.value.truck_no) {
            this.dealsList = [];
            var truckNo = this.editForm.value.truck_no.truck_no ? this.editForm.value.truck_no.truck_no : this.editForm.value.truck_no;
            var transporterName = this.editForm.value.transporter_name.transport_name ? this.editForm.value.transporter_name.transport_name : this.editForm.value.transporter_name;
            this.loader.show();
            // this.accounts.getDealNosList(transporterName, truckNo).subscribe((res: any) =>{
            // this.accounts.getNewDealNosList(transporterName, truckNo).subscribe((res: any) =>{
            this.accounts.getNewDealNosListByTruckNo(truckNo).subscribe(function (res) {
                var data = res.json();
                _this.dealListFlag = true;
                _this.dealsList = data.results;
                _this.dealsList.forEach(function (df) {
                    _this.declare_advance = 0;
                    _this.receive_advance = 0;
                    _this.balance_advance = 0;
                    _this.advanceAmountList.forEach(function (aa) {
                        if (df.deal_no == aa.deal_no && aa.name == truckNo) {
                            if (aa.advance_amount[0]) {
                                aa.advance_amount.forEach(function (e) {
                                    _this.receive_advance = _this.receive_advance + e.amount;
                                });
                            }
                        }
                    });
                    if (df.transporter_commission) {
                        _this.receive_advance = _this.receive_advance + df.transporter_commission;
                    }
                    _this.declare_advance = df.transporter_freight;
                    _this.balance_advance = _this.declare_advance - _this.receive_advance;
                    df.declare_advance = _this.declare_advance;
                    df.receive_advance = _this.receive_advance;
                    df.balance_advance = _this.balance_advance;
                    df.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(df.deal_date).format("YYYY-MM-DD");
                });
                _this.loader.hide();
                console.log("Results >>>>", data.results);
                if (_this.podEditFlag == 1) {
                    _this.podEditFlag = 0;
                    _this.getDealDatabyPodDealNo();
                }
            }, function (err) {
                console.log("err >>>>", err);
            });
        }
    };
    EditPodPage.prototype.uploadPOD = function (event) {
        var fileList = event.target.files;
        if (fileList.length > 0) {
            var file = fileList[0];
            this.podFlag = 1;
            this.formData.append('upload_pod', file, file.name);
        }
    };
    EditPodPage.prototype.selectDealNoData = function (data) {
        var _this = this;
        console.log("Deal No Data >>>>", data);
        this.editForm.controls['deal_no'].setValue(data.deal_no);
        this.editForm.controls['transporter_name'].setValue(data.transporter_name);
        this.dealDate = data.deal_date;
        this.dealFrom = data.from;
        this.dealTo = data.to;
        this.dealConsignor = data.company_name;
        this.DealNoDetails = data;
        this.mainPODAmount = data.balance_advance;
        this.loader.show();
        this.accounts.getPostLoadByTicketNo(data.company_ticket_no).subscribe(function (res) {
            var postData = res.json();
            _this.loader.hide();
            if (postData.results[0]) {
                _this.postLoadData = postData.results[0];
                _this.editForm.controls['dispatch_date'].setValue(_this.postLoadData.despatch_date);
                _this.editForm.controls['delivery_date'].setValue(_this.postLoadData.delivery_date);
                if (_this.postLoadData.late_delivery_amount) {
                    _this.lateDeliveryAmount = _this.postLoadData.late_delivery_amount;
                }
                if (_this.postLoadData.detention_amount) {
                    _this.detentionAmount = _this.postLoadData.detention_amount;
                }
                _this.postLoadPaymentMode = _this.postLoadData.payment_mode;
            }
            _this.getAgencyId();
            _this.getCompanyId();
            _this.getTransporterId();
            _this.getAgencyListByName();
            console.log("postLoadData >>>>", data.results);
        }, function (err) {
            console.log("err >>>>", err);
        });
    };
    EditPodPage.prototype.setLateDelivery = function (event) {
        var deliveryDate = __WEBPACK_IMPORTED_MODULE_11_moment__(this.editForm.value.delivery_date, "YYYY-MM-DD");
        var arrivalDate = __WEBPACK_IMPORTED_MODULE_11_moment__(this.editForm.value.arrival_date, "YYYY-MM-DD");
        var lateDelivery = arrivalDate.diff(deliveryDate, 'days') + 1;
        this.editForm.controls['late_delivery'].setValue(lateDelivery);
        var cal = this.lateDeliveryAmount * lateDelivery;
        this.editForm.controls['company_late_delivery_amount'].setValue(cal);
        if (this.editForm.value.unloading_date) {
            this.setDetention("");
        }
    };
    EditPodPage.prototype.setDetention = function (event) {
        var arrivalDate = __WEBPACK_IMPORTED_MODULE_11_moment__(this.editForm.value.arrival_date, "YYYY-MM-DD");
        var unloadingDate = __WEBPACK_IMPORTED_MODULE_11_moment__(this.editForm.value.unloading_date, "YYYY-MM-DD");
        var detentionDiff = unloadingDate.diff(arrivalDate, 'days') + 1;
        this.editForm.controls['detention'].setValue(detentionDiff);
        var cal = this.detentionAmount * detentionDiff;
        this.editForm.controls['company_detention_amount'].setValue(cal);
    };
    EditPodPage.prototype.submit = function (isValid) {
        var _this = this;
        this.submitted = true;
        if (isValid) {
            var getFormData = this.editForm.value;
            this.formData.append('pod_date', getFormData.pod_date);
            this.formData.append('truck_no', getFormData.truck_no.truck_no ? getFormData.truck_no.truck_no : getFormData.truck_no);
            this.formData.append('transporter_name', getFormData.transporter_name.transport_name ? getFormData.transporter_name.transport_name : getFormData.transporter_name);
            this.formData.append('deal_no', getFormData.deal_no);
            this.formData.append('deal_date', this.dealDate);
            this.formData.append('from', this.dealFrom);
            this.formData.append('to', this.dealTo);
            this.formData.append('consignor', this.dealConsignor);
            this.formData.append('dispatch_date', getFormData.dispatch_date);
            this.formData.append('delivery_date', getFormData.delivery_date);
            if (getFormData.arrival_date) {
                this.formData.append('arrival_date', getFormData.arrival_date);
                this.formData.append('late_delivery', getFormData.late_delivery);
            }
            if (getFormData.unloading_date) {
                this.formData.append('unloading_date', getFormData.unloading_date);
                this.formData.append('detention', getFormData.detention);
            }
            this.formData.append('company_late_delivery_amount', getFormData.company_late_delivery_amount);
            this.formData.append('company_detention_amount', getFormData.company_detention_amount);
            this.formData.append('company_claim_amount', getFormData.company_claim_amount);
            this.formData.append('transporter_late_delivery_amount', getFormData.transporter_late_delivery_amount);
            this.formData.append('transporter_detention_amount', getFormData.transporter_detention_amount);
            this.formData.append('transporter_claim_amount', getFormData.transporter_claim_amount);
            this.formData.append('pod_status', getFormData.pod_status);
            if (this.podFlag == 0) {
                this.formData.append('upload_pod', this.podDetails.upload_pod);
            }
            this.loader.show();
            var pod_document_type = "POD";
            this.requestLoad.deleteAccountsLedger(this.podDetails.deal_no, pod_document_type).subscribe(function (res) {
                _this.accounts.updatePOD(_this.podDetails._id, _this.formData).subscribe(function (res) {
                    if (getFormData.pod_status == "Not Ok") {
                        _this.loader.hide();
                        _this.toast.show({ 'message': 'Updated successfully.' });
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__manage_pod__["a" /* ManagePodPage */]);
                    }
                    else {
                        var accountsLedgerArray = [];
                        var agencyName = _this.DealNoDetails.agency_name;
                        var agencyId = _this.agencyID;
                        var companyBranchName = _this.DealNoDetails.company_name;
                        var companyBranchId = _this.companyId;
                        var transporterBranchName = _this.DealNoDetails.transporter_name;
                        var transporterBranchId = _this.transporterId;
                        var truckNo = _this.DealNoDetails.truck_no;
                        var srNo = _this.DealNoDetails.deal_no;
                        var dealId = _this.DealNoDetails._id;
                        var userName = localStorage.getItem('user_name');
                        var userId = localStorage.getItem('user_id');
                        // var partyName = getFormData.party_category;
                        getFormData.company_late_delivery_amount;
                        getFormData.company_detention_amount;
                        getFormData.company_claim_amount;
                        getFormData.transporter_late_delivery_amount;
                        getFormData.transporter_detention_amount;
                        getFormData.transporter_claim_amount;
                        if (_this.DealNoDetails.payment_mode == 'To Be Billed') {
                            // ---------> For Company 
                            if (getFormData.company_late_delivery_amount) {
                                var company_late_delivery_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Payment " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_late_delivery_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_late_delivery_debit);
                                var company_late_delivery_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Late Delivery A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_late_delivery_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_late_delivery_credit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Receipt " + companyBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_late_delivery_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Late Delivery A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_late_delivery_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                            }
                            if (getFormData.company_detention_amount) {
                                var company_detention_amount_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Payment " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_detention_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_detention_amount_credit);
                                var company_detention_amount_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Detention A/c..",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_detention_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_detention_amount_debit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Receipt " + companyBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_detention_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Detention A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_detention_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                            }
                            if (getFormData.company_claim_amount) {
                                var company_late_delivery_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Payment " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_claim_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_late_delivery_debit);
                                var company_late_delivery_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Claim A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_claim_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_late_delivery_credit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Receipt " + companyBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_claim_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Claim A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_claim_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                            }
                            // ---------> For Transporter 
                            if (getFormData.transporter_late_delivery_amount) {
                                var transporter_late_delivery_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Receipt " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_late_delivery_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_credit);
                                var transporter_late_delivery_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Late Delivery A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_late_delivery_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_debit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Payment " + transporterBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_late_delivery_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Late Delivery A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_late_delivery_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                            }
                            if (getFormData.transporter_claim_amount) {
                                var transporter_late_delivery_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Receipt " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_claim_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_credit);
                                var transporter_late_delivery_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Claim A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_claim_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_debit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Payment " + transporterBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_claim_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Claim A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_claim_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                            }
                            if (getFormData.transporter_detention_amount) {
                                var transporter_late_delivery_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Receipt " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_detention_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_debit);
                                var transporter_late_delivery_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Detention A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_detention_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_credit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Payment " + transporterBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_detention_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Detention A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_detention_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                            }
                            // --------->  POD
                            var pod_credit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": _this.mainPODAmount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(pod_credit);
                            var pod_debit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Receipt " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": _this.mainPODAmount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(pod_debit);
                            var agency_pod_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": truckNo,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": _this.mainPODAmount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_pod_debit);
                            var agency_pod_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Payment " + transporterBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": _this.mainPODAmount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_pod_credit);
                        }
                        if (_this.DealNoDetails.payment_mode == 'Advance Pod') {
                            // --------->  Transporter POD
                            var company_pod_debit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": _this.mainPODAmount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_pod_debit);
                            var company_pod_credit = {
                                "agency_name": agencyName,
                                "branch_id": companyBranchId,
                                "branch_name": companyBranchName,
                                "account_name": "Payment " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": _this.mainPODAmount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_pod_credit);
                            var company_agency_pod_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": companyBranchName + " Billed A/c.",
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": _this.mainPODAmount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_agency_pod_credit);
                            var company_agency_pod_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Receipt " + companyBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": _this.mainPODAmount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(company_agency_pod_debit);
                            // ---------> For Company 
                            if (getFormData.company_late_delivery_amount) {
                                var company_late_delivery_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Payment " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_late_delivery_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_late_delivery_debit);
                                var company_late_delivery_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Late Delivery A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_late_delivery_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_late_delivery_credit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Receipt " + companyBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_late_delivery_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Late Delivery A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_late_delivery_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                            }
                            if (getFormData.company_detention_amount) {
                                var company_detention_amount_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Payment " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_detention_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_detention_amount_credit);
                                var company_detention_amount_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Detention A/c..",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_detention_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_detention_amount_debit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Receipt " + companyBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_detention_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Detention A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_detention_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                            }
                            if (getFormData.company_claim_amount) {
                                var company_late_delivery_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Payment " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_claim_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_late_delivery_debit);
                                var company_late_delivery_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": "Claim A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_claim_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(company_late_delivery_credit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Receipt " + companyBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.company_claim_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Claim A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Company Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.company_claim_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                            }
                            // ---------> For Transporter 
                            if (getFormData.transporter_late_delivery_amount) {
                                var transporter_late_delivery_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Receipt " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_late_delivery_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_credit);
                                var transporter_late_delivery_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Late Delivery A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_late_delivery_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_debit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Payment " + transporterBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_late_delivery_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Late Delivery A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Late Delivery Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_late_delivery_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                            }
                            if (getFormData.transporter_claim_amount) {
                                var transporter_late_delivery_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Receipt " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_claim_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_credit);
                                var transporter_late_delivery_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Claim A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_claim_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_debit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Payment " + transporterBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_claim_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Claim A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Claim Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_claim_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                            }
                            if (getFormData.transporter_detention_amount) {
                                var transporter_late_delivery_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Receipt " + agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_detention_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_debit);
                                var transporter_late_delivery_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": "Detention A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_detention_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporter_late_delivery_credit);
                                var agency_credit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Payment " + transporterBranchName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": 0,
                                    "credit_amount": getFormData.transporter_detention_amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_credit);
                                var agency_debit = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": "Detention A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": "Transporter Detention Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                    "narration_ref_no": "",
                                    "document_type": "POD",
                                    "debit_amount": getFormData.transporter_detention_amount,
                                    "credit_amount": 0,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": "",
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(agency_debit);
                            }
                            // --------->  Transporter POD
                            var pod_credit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": _this.mainPODAmount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(pod_credit);
                            var pod_debit = {
                                "agency_name": agencyName,
                                "branch_id": transporterBranchId,
                                "branch_name": transporterBranchName,
                                "account_name": "Receipt " + agencyName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": _this.mainPODAmount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(pod_debit);
                            var agency_pod_debit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": truckNo,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": _this.mainPODAmount,
                                "credit_amount": 0,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_pod_debit);
                            var agency_pod_credit = {
                                "agency_name": agencyName,
                                "branch_id": agencyId,
                                "branch_name": agencyName,
                                "account_name": "Payment " + transporterBranchName,
                                "truck_no": truckNo,
                                "sr_no": srNo,
                                "deal_id": dealId,
                                "narration": "POD Amount From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo,
                                "narration_ref_no": "",
                                "document_type": "POD",
                                "debit_amount": 0,
                                "credit_amount": _this.mainPODAmount,
                                "voucher_date": _this.DealNoDetails.deal_date,
                                "party_name": "",
                                "user_name": userName,
                                "user_id": userId
                            };
                            accountsLedgerArray.push(agency_pod_credit);
                        }
                        if (_this.DealNoDetails.payment_mode == 'Advance To Pay') {
                            console.log("Throw Driver App >>>");
                        }
                        if (_this.DealNoDetails.payment_mode == 'To Pay') {
                            console.log("Throw Driver App >>>");
                        }
                        _this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe(function (res) {
                            _this.loader.hide();
                            _this.toast.show({ 'message': 'Updated successfully.' });
                            _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__manage_pod__["a" /* ManagePodPage */]);
                        }, function (err) {
                            _this.loader.hide();
                            _this.toast.error({ 'message': 'Something went wrong.' });
                            console.log(">>>>>err", err);
                        });
                    }
                }, function (err) {
                    _this.loader.hide();
                    _this.toast.error({ 'message': 'Something went wrong.' });
                    console.log(">>>>>err", err);
                });
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>err", err);
            });
        }
    };
    EditPodPage.prototype.getAgencyId = function () {
        var _this = this;
        this.trucks.searchAgencyName(this.DealNoDetails.agency_name).subscribe(function (res) {
            var data = res.json();
            _this.agencyID = data[0]._id;
            console.log("agencyID >>>>", _this.agencyID);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditPodPage.prototype.getCompanyId = function () {
        var _this = this;
        this.requestLoad.searchCompany(this.DealNoDetails.company_name).subscribe(function (res) {
            var data = res.json();
            _this.companyId = data[0]._id;
            console.log("companyId >>>>", _this.companyId);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditPodPage.prototype.getTransporterId = function () {
        var _this = this;
        this.trucks.searchTransporterName(this.DealNoDetails.transporter_name).subscribe(function (res) {
            var data = res.json();
            _this.transporterId = data[0]._id;
            console.log("transporterId >>>>", _this.transporterId);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditPodPage.prototype.getAgencyListByName = function () {
        var _this = this;
        var agencyName = this.DealNoDetails.agency_name;
        this.admin.getAgencyListByName(agencyName).subscribe(function (res) {
            var data = res.json();
            var agencyData = data.results;
            if (agencyData[0]) {
                _this.investorName = agencyData[0].investor_name;
                _this.agencyPercentage = agencyData[0].agency_percentage;
                _this.indianaTruckingPercentage = agencyData[0].indiana_trucking_percentage;
                _this.investorPercentage = agencyData[0].investor_percentage;
            }
            console.log("Agency Data >>>>", agencyData[0]);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditPodPage.prototype.getAdvanceAmountList = function () {
        var _this = this;
        // this.loader.show();
        this.accounts.getAdvanceAmountList().subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            _this.advanceAmountList = data.results;
            _this.advanceAmountList.forEach(function (element) {
                element.date_frmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.date).format('YYYY-MM-DD');
            });
            console.log('Data >>>>>>>', _this.advanceAmountList);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    EditPodPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-pod',template:/*ion-inline-start:"D:\truck\src\pages\manage-pod\edit-pod\edit-pod.html"*/'<!--\n  Generated template for the EditPodPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit POD</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n        \n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="editForm" novalidate>\n\n    <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">POD Date</label>\n          <ion-item class="form-control">\n            <ion-datetime name="pod_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="pod_date"></ion-datetime>\n          </ion-item>\n        </div>\n      </ion-col>\n    </ion-row>\n\n    <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">Truck No <span style="color:red">*</span> </label>\n          <input\n            class="form-control"\n            ng2-auto-complete\n            [source]="truckNo.bind(this)"\n            list-formatter="truck_no"\n            formControlName="truck_no"\n            (change)="getDealNosList()"\n          />\n        </div>\n\n        <div class="error-msg" *ngIf="submitted || (editForm.controls.truck_no.invalid && (editForm.controls.truck_no.dirty || editForm.controls.truck_no.touched))">\n          <div *ngIf="editForm.controls[\'truck_no\'].hasError(\'required\')">\n            <label>Truck no is required.</label>\n          </div>\n          <div *ngIf="editForm.controls[\'truck_no\'].hasError(\'minlength\')">\n            <label>Minimum length is upto 2 letters.</label>\n          </div>\n          <div *ngIf="editForm.controls[\'truck_no\'].hasError(\'maxlength\')">\n            <label>Maximum length is upto 25 letters.</label>\n          </div>\n        </div>\n    </ion-col>\n    </ion-row>\n\n\n    <br><br>\n    <div *ngIf="dealListFlag">\n\n      <table border="1">\n        <thead>\n          <tr>\n            <th>Deal No</th>\n            <th>Date</th>\n            <th>From</th>\n            <th>To</th>\n            <th>Consignor</th>\n            <th>Truck No.</th>\n\n            <th>Freight</th>\n            <th>Receive Advance</th>\n            <th>Balance Advance</th>\n            \n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor="let dld of dealsList">\n            <td class="deal-color" (click)="selectDealNoData(dld)">{{ dld.deal_no }}</td>\n            <td>{{ dld.deal_date_fmt }}</td>\n            <td>{{ dld.from }}</td>\n            <td>{{ dld.to }}</td>\n            <td>{{ dld.company_name }}</td>\n            <td>{{ dld.truck_no }}</td>\n\n            <td><span class="button-al">{{ dld.declare_advance | number : \'1.2-2\' }}</span></td>\n            <td><span class="button-al">{{ dld.receive_advance | number : \'1.2-2\' }}</span></td>\n            <td><span class="button-al">{{ dld.balance_advance | number : \'1.2-2\' }}</span></td>\n          </tr>\n        </tbody>\n      </table>\n\n    </div>\n    <br><br>\n\n    <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">Deal No. <span style="color:red">*</span> </label> \n          <input name="deal_no" type="number" formControlName="deal_no" class="form-control" /> \n        </div>\n\n        <div class="error-msg" *ngIf="submitted || (editForm.controls.deal_no.invalid && (editForm.controls.deal_no.dirty || editForm.controls.deal_no.touched))">\n          <div *ngIf="editForm.controls[\'deal_no\'].hasError(\'required\')">\n            <label>Deal No is required.</label>\n          </div>\n        </div>\n\n      </ion-col>\n    </ion-row>\n\n    <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">Transporter Name <span style="color:red">*</span> </label>\n          <input\n            class="form-control"\n            ng2-auto-complete\n            [source]="transporterName.bind(this)"\n            list-formatter="transport_name"\n            formControlName="transporter_name"       \n          />\n        </div>\n\n        <div class="error-msg" *ngIf="submitted || (editForm.controls.transporter_name.invalid && (editForm.controls.transporter_name.dirty || editForm.controls.transporter_name.touched))">\n          <div *ngIf="editForm.controls[\'transporter_name\'].hasError(\'required\')">\n            <label>Transporter Name is required.</label>\n          </div>\n          <div *ngIf="editForm.controls[\'transporter_name\'].hasError(\'minlength\')">\n            <label>Minimum length is upto 2 letters.</label>\n          </div>\n          <div *ngIf="editForm.controls[\'transporter_name\'].hasError(\'maxlength\')">\n            <label>Maximum length is upto 25 letters.</label>\n          </div>\n        </div>\n      </ion-col>\n    </ion-row>\n\n    <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">Dispatch Date <span style="color:red">*</span> </label> \n          <ion-item class="form-control">\n            <ion-datetime name="dispatch_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="dispatch_date"></ion-datetime>\n          </ion-item>\n        </div>\n\n        <div class="error-msg" *ngIf="submitted || (editForm.controls.dispatch_date.invalid && (editForm.controls.dispatch_date.dirty || editForm.controls.dispatch_date.touched))">\n          <div *ngIf="editForm.controls[\'dispatch_date\'].hasError(\'required\')">\n            <label>Dispatch Date is required.</label>\n          </div>\n        </div>          \n      </ion-col>\n\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">Expected Delivery Date <span style="color:red">*</span> </label> \n          <ion-item class="form-control">\n            <ion-datetime name="delivery_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="delivery_date"></ion-datetime>\n          </ion-item>\n        </div>\n\n        <div class="error-msg" *ngIf="submitted || (editForm.controls.delivery_date.invalid && (editForm.controls.delivery_date.dirty || editForm.controls.delivery_date.touched))">\n          <div *ngIf="editForm.controls[\'delivery_date\'].hasError(\'required\')">\n            <label>Expected Delivery Date is required.</label>\n          </div>\n        </div>\n      </ion-col>\n\n    </ion-row>\n\n    <br>\n    <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">Arrival Date <span style="color:red">*</span> </label> \n          <ion-item class="form-control">\n            <ion-datetime name="arrival_date" (ionChange)="setLateDelivery($event)" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="arrival_date"></ion-datetime>\n          </ion-item>\n        </div>\n\n        <div class="error-msg" *ngIf="submitted || (editForm.controls.arrival_date.invalid && (editForm.controls.arrival_date.dirty || editForm.controls.arrival_date.touched))">\n          <div *ngIf="editForm.controls[\'arrival_date\'].hasError(\'required\')">\n            <label>Arrival Date is required.</label>\n          </div>\n        </div>\n      </ion-col>\n\n      <ion-col col-6>\n        <div class="form-group">\n            <label class=" label">Late Delivery </label> \n            <input name="late_delivery" [readonly]="isReadonly()" type="number" formControlName="late_delivery" class="form-control" /> \n          </div>\n      </ion-col>\n\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">Unloading Date <span style="color:red">*</span> </label> \n          <ion-item class="form-control">\n            <ion-datetime name="unloading_date" (ionChange)="setDetention($event)" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="unloading_date"></ion-datetime>\n          </ion-item>\n        </div>\n\n        <div class="error-msg" *ngIf="submitted || (editForm.controls.unloading_date.invalid && (editForm.controls.unloading_date.dirty || editForm.controls.unloading_date.touched))">\n          <div *ngIf="editForm.controls[\'unloading_date\'].hasError(\'required\')">\n            <label>Unloading Date is required.</label>\n          </div>\n        </div>\n      </ion-col>\n\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">Detention </label> \n          <input name="detention" [readonly]="isReadonly()" type="number" formControlName="detention" class="form-control" /> \n        </div>\n      </ion-col>\n\n    </ion-row>\n\n     <!--  Company  Transporter-->\n     <br>\n     <ion-row style="width: 100%;">\n       <ion-col col-6>\n         <span class="fonts-size">Company</span>\n       </ion-col>\n \n       <ion-col col-6>\n         <span class="fonts-size">Transporter</span>\n       </ion-col>\n     </ion-row>\n \n \n     <ion-row>\n       <ion-col col-6>\n         <div class="form-group">\n           <input name="company_late_delivery_amount" placeholder="Company late delivery amount" type="number" formControlName="company_late_delivery_amount" class="form-control" /> \n         </div>\n       </ion-col>\n \n       <ion-col col-6>\n         <div class="form-group">\n           <input name="transporter_late_delivery_amount" placeholder="Transporter late delivery amount" type="number" formControlName="transporter_late_delivery_amount" class="form-control" /> \n         </div>\n       </ion-col>\n     </ion-row>\n \n     <ion-row>\n       <ion-col col-6>\n         <div class="form-group">\n           <input name="company_detention_amount" type="number" placeholder="Company detention amount" formControlName="company_detention_amount" class="form-control" /> \n         </div>\n       </ion-col>\n \n       <ion-col col-6>\n         <div class="form-group">\n           <input name="transporter_detention_amount" type="number" placeholder="Transporter detention amount" formControlName="transporter_detention_amount" class="form-control" /> \n         </div>\n       </ion-col>\n     </ion-row>\n \n     <ion-row>\n       <ion-col col-6>\n         <div class="form-group">\n           <input name="company_claim_amount" type="number" placeholder="Company claim amount" formControlName="company_claim_amount" class="form-control" /> \n         </div>\n       </ion-col>\n \n       <ion-col col-6>\n         <div class="form-group">\n           <input name="transporter_claim_amount" type="number" placeholder="Transporter claim amount" formControlName="transporter_claim_amount" class="form-control" /> \n         </div>\n       </ion-col>\n     </ion-row>\n \n \n\n    <!-- <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">Claim Amount </label> \n          <input name="claim_amount" type="number" formControlName="claim_amount" class="form-control" /> \n        </div>\n      </ion-col>\n    </ion-row> -->\n\n    <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">POD Status</label>\n          <select class="form-control drop-down" name="pod_status" formControlName="pod_status" >\n            <option value="">Select Status</option>\n            <option *ngFor="let sts of statues" [ngValue]="sts">{{sts}}</option>\n          </select>\n        </div>\n      </ion-col>\n    </ion-row>\n\n    <!-- <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">POD Pending</label>\n          <select class="form-control drop-down" name="pod_pending" formControlName="pod_pending" >\n            <option value="">Select</option>\n            <option *ngFor="let pdp of podPending" [ngValue]="pdp">{{pdp}}</option>\n          </select>\n        </div>\n      </ion-col>\n    </ion-row> -->\n\n    <ion-row>\n      <ion-col col-6>\n        <div class="form-group">\n          <label class=" label">Upload POD </label>\n          <input type="file" class="form-control" (change)="uploadPOD($event)" placeholder="Upload file">\n        </div>\n      </ion-col>\n    </ion-row>\n    \n    <p><a [href]="podDetails.upload_pod" target="_blank">Download POD</a></p>        \n    <!-- <ion-row>\n        <ion-col col-6>\n        </ion-col>\n      </ion-row> -->\n    \n\n    <br>\n    <button ion-button block size="large" type="submit" (click)="submit(editForm.valid)" expand="block"> Update </button>\n\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-pod\edit-pod\edit-pod.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_8__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_6__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_5__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_4__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_3__providers_accounts__["a" /* Accounts */],
            __WEBPACK_IMPORTED_MODULE_13__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], EditPodPage);
    return EditPodPage;
}());

//# sourceMappingURL=edit-pod.js.map

/***/ }),

/***/ 485:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditAdvanceAmountPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__manage_advance_amount__ = __webpack_require__(114);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the EditAdvanceAmountPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditAdvanceAmountPage = /** @class */ (function () {
    function EditAdvanceAmountPage(navCtrl, navParams, loader, toast, fb, requestLoad, events, trucks, admin, accounts) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.events = events;
        this.trucks = trucks;
        this.admin = admin;
        this.accounts = accounts;
        this.i = 0;
        this.toDate = new Date().toISOString();
        this.Party_Category = ['Company', 'Transporter'];
        // PAYMENT_TYPES = ['Receivable Advance', 'Receivalbe Freight', 'Payable Advance', 'Payable Freight'];
        this.PAYMENT_TYPES = [];
        this.mainAccoutsList = [];
        this.mainAdvanceAmountArray = [];
        this.dealFinalList = [];
        this.dealListFlag = false;
        this.agencyPercentage = 0;
        this.indianaTruckingPercentage = 0;
        this.investorPercentage = 0;
        this.investorName = "";
        this.dfNamesList = [];
        this.declare_advance = 0;
        this.receive_advance = 0;
        this.balance_advance = 0;
        this.advanceAmountList = [];
        this.checkBalanceAdvance = 0;
        this.displayAmount = 0;
        this.RCT = false;
        this.PYT = false;
        this.truckFlag = false;
        this.editForm = this.fb.group({
            date: [''],
            party_category: [''],
            deal_no: [''],
            name: [''],
            payment_type: [''],
            // advance_amount: [''],
            account_name: [''],
            amount: [''],
            remarks: [''],
        });
        this.advanceAmountDetails = this.navParams.get('data');
        this.editForm.controls['date'].setValue(this.advanceAmountDetails.date);
        this.editForm.controls['party_category'].setValue(this.advanceAmountDetails.party_category);
        this.editForm.controls['deal_no'].setValue(this.advanceAmountDetails.deal_no);
        this.editForm.controls['name'].setValue(this.advanceAmountDetails.name);
        this.editForm.controls['payment_type'].setValue(this.advanceAmountDetails.payment_type);
        this.editForm.controls['account_name'].setValue(this.advanceAmountDetails.account_name);
        this.editForm.controls['amount'].setValue(this.advanceAmountDetails.amount);
        this.editForm.controls['remarks'].setValue(this.advanceAmountDetails.remarks);
        if (this.advanceAmountDetails.advance_amount[0]) {
            this.advanceAmountDetails.advance_amount.forEach(function (r) {
                var obj = {
                    "account_name": r.account_name,
                    "amount": r.amount,
                    "remarks": r.remarks,
                    "srno": r.srno
                };
                _this.receive_advance = _this.receive_advance + r.amount;
                _this.mainAdvanceAmountArray.push(obj);
            });
        }
        if (this.advanceAmountDetails.party_category == 'Company') {
            this.RCT = true;
            this.PYT = false;
            this.PAYMENT_TYPES = [];
            this.PAYMENT_TYPES = ['Receivable Advance', 'Receivable Balance'];
        }
        if (this.advanceAmountDetails.party_category == 'Transporter') {
            this.RCT = false;
            this.PYT = true;
            this.PAYMENT_TYPES = [];
            this.PAYMENT_TYPES = ['Payable Advance', 'Payable Balance'];
        }
        this.getAdvanceAmountList();
        this.getDealFinalList();
        this.getAccounts();
    }
    EditAdvanceAmountPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditAdvanceAmountPage');
    };
    EditAdvanceAmountPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_10__home_home__["a" /* HomePage */]);
    };
    EditAdvanceAmountPage.prototype.isReadonly = function () {
        return this.isReadonly; //return true/false 
    };
    EditAdvanceAmountPage.prototype.radioSelect = function (event) {
        console.log("Here ->", event);
        // PAYMENT_TYPES
        if (event == "receipt") {
            this.PAYMENT_TYPES = [];
            this.PAYMENT_TYPES = ['Receivable Advance', 'Receivable Balance'];
            this.editForm.controls['party_category'].setValue('Company');
        }
        if (event == "payment") {
            this.PAYMENT_TYPES = [];
            this.PAYMENT_TYPES = ['Payable Advance', 'Payable Balance'];
            this.editForm.controls['party_category'].setValue('Transporter');
        }
    };
    EditAdvanceAmountPage.prototype.getAccounts = function () {
        var _this = this;
        this.mainAccoutsList = [];
        var agency_name = localStorage.getItem('agency_name');
        console.log("agency_name >>>>", agency_name);
        this.requestLoad.getAccountsByAgency(agency_name).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            // console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.mainAccoutsList.push({ "srno": element.srno, "account_name": element.account_name });
            });
            console.log("mainAccoutsList >>>>", _this.mainAccoutsList);
            _this.editForm.controls['account_name'].setValue('Cash / Bank');
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditAdvanceAmountPage.prototype.advanceAmountAddInArray = function () {
        var _this = this;
        var totalAmount = 0;
        this.mainAdvanceAmountArray.forEach(function (element) {
            totalAmount = totalAmount + element.amount;
        });
        if (this.editForm.value.account_name && this.editForm.value.amount) {
            totalAmount = totalAmount + this.editForm.value.amount;
            if (totalAmount > this.checkDeclareAdvance) {
                this.toast.error({ 'message': 'Advance Amount can not more than Declare Advance..!' });
            }
            else {
                var srno;
                this.mainAccoutsList.forEach(function (element) {
                    if (element.account_name == _this.editForm.value.account_name) {
                        srno = element.srno;
                    }
                });
                var obj = {
                    "account_name": this.editForm.value.account_name,
                    "amount": this.editForm.value.amount,
                    "remarks": this.editForm.value.remarks,
                    "srno": srno
                };
                this.mainAdvanceAmountArray.push(obj);
                this.displayAmount = this.displayAmount - this.editForm.value.amount;
                this.editForm.controls['account_name'].setValue('Cash / Bank');
                this.editForm.controls['amount'].setValue(this.displayAmount);
                this.editForm.controls['remarks'].setValue('');
                console.log("obj >>>>", obj);
            }
        }
    };
    EditAdvanceAmountPage.prototype.advanceAmountRemoveInArray = function (index, data) {
        this.displayAmount = this.displayAmount + data.amount;
        this.editForm.controls['amount'].setValue(this.displayAmount);
        this.mainAdvanceAmountArray.splice(index, 1);
        console.log("array >>>", this.mainAdvanceAmountArray);
    };
    EditAdvanceAmountPage.prototype.getDealFinalList = function () {
        var _this = this;
        this.loader.show();
        this.dealFinalList = [];
        this.requestLoad.getNewDealFinal().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            _this.dealListFlag = true;
            if (_this.editForm.value.party_category == "Company") {
                if (_this.editForm.value.payment_type == 'Receivable Advance') {
                    dataList.forEach(function (element) {
                        // payment_mode
                        if (element.payment_mode == 'Advance To Pay') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'Advance Pod') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'To Be Billed') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                    });
                }
                if (_this.editForm.value.payment_type == 'Receivable Balance') {
                    dataList.forEach(function (element) {
                        // payment_mode
                        if (element.payment_mode == 'Advance To Pay') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'Advance Pod') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'To Be Billed') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                    });
                }
            }
            else {
                // dataList.forEach(element => {
                if (_this.editForm.value.payment_type == 'Payable Advance') {
                    dataList.forEach(function (element) {
                        // payment_mode
                        if (element.payment_mode == 'Advance To Pay') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'Advance Pod') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'To Be Billed') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                    });
                }
                if (_this.editForm.value.payment_type == 'Payable Balance') {
                    dataList.forEach(function (element) {
                        // payment_mode
                        if (element.payment_mode == 'Advance To Pay') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'Advance Pod') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'To Be Billed') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.editForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                    });
                }
                // });
            }
            if (_this.editForm.value.payment_type == 'Payable Advance') {
                _this.truckFlag = true;
            }
            else {
                _this.truckFlag = false;
            }
            if (_this.i == 0) {
                _this.i = 1;
                _this.dealFinalList.forEach(function (a) {
                    if (_this.advanceAmountDetails.deal_no == a.deal_no) {
                        _this.selectDealNoData(a);
                    }
                });
            }
            // console.log('Deal Data >>>>>>>', this.dealFinalList);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    EditAdvanceAmountPage.prototype.selectDealNoData = function (data) {
        console.log('Deal Data >>>>>>>', data);
        this.DealNoDetails = data;
        this.editForm.controls['deal_no'].setValue(data.deal_no);
        this.displayAmount = data.balance_advance;
        this.checkDeclareAdvance = data.declare_advance;
        this.editForm.controls['amount'].setValue(this.displayAmount);
        // this.accounts.searchAccountNamebyDeal(data.company_name, data.deal_no).subscribe((res: any) => {
        //   var data = res.json(); 
        //   data.forEach(r => {
        //     this.dfNamesList.push(r.account_name);
        //   });
        //   this.editForm.controls['name'].setValue(this.advanceAmountDetails.name);
        if (this.editForm.value.payment_type == 'Receivable Advance') {
            if (data.payment_mode == 'To Be Billed') {
                this.editForm.controls['name'].setValue(data.company_name + " Unbilled A/C.");
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance Pod') {
                this.editForm.controls['name'].setValue(data.company_name + " Billed A/C.");
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance To Pay') {
                this.editForm.controls['name'].setValue(data.company_name + " Billed A/C.");
                this.checkBalanceAdvance = data.balance_advance;
            }
        }
        if (this.editForm.value.payment_type == 'Receivable Balance') {
            if (data.payment_mode == 'To Be Billed') {
                this.editForm.controls['name'].setValue("Receipt " + data.company_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance Pod') {
                this.editForm.controls['name'].setValue("Receipt " + data.company_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance To Pay') {
                this.editForm.controls['name'].setValue("Receipt " + data.company_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
        }
        if (this.editForm.value.payment_type == 'Payable Advance') {
            if (data.payment_mode == 'To Be Billed') {
                this.editForm.controls['name'].setValue(data.truck_no);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance Pod') {
                this.editForm.controls['name'].setValue(data.truck_no);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance To Pay') {
                this.editForm.controls['name'].setValue(data.truck_no);
                this.checkBalanceAdvance = data.balance_advance;
            }
        }
        if (this.editForm.value.payment_type == 'Payable Balance') {
            if (data.payment_mode == 'To Be Billed') {
                this.editForm.controls['name'].setValue("Payment " + data.transporter_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance Pod') {
                this.editForm.controls['name'].setValue("Payment " + data.transporter_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance To Pay') {
                this.editForm.controls['name'].setValue("Payment " + data.transporter_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
        }
        this.getAgencyId();
        this.getCompanyId();
        this.getTransporterId();
        this.getAgencyListByName();
        // }, err => {
        //   this.loader.hide();
        //   this.toast.error({ 'message': 'Something went wrong.' });
        //   console.log(">>>>>Err", err);
        // });
    };
    EditAdvanceAmountPage.prototype.update = function () {
        var _this = this;
        var totalAmount = 0;
        this.mainAdvanceAmountArray.forEach(function (element) {
            totalAmount = totalAmount + element.amount;
        });
        if (totalAmount > this.checkBalanceAdvance) {
            this.toast.error({ 'message': 'Advance Amount can not more than Declare Advance..!' });
        }
        else {
            if (this.mainAdvanceAmountArray[0]) {
                var getFormData = this.editForm.value;
                var obj = {
                    'date': getFormData.date,
                    'party_category': getFormData.party_category,
                    'deal_no': getFormData.deal_no,
                    'name': getFormData.name,
                    'payment_type': getFormData.payment_type,
                    'advance_amount': this.mainAdvanceAmountArray,
                };
                this.loader.show();
                var delDealNo = this.advanceAmountDetails.deal_no;
                var delDocumentType = "DFADV";
                var delPartyCategory = this.advanceAmountDetails.party_category;
                // Delete Advance Amount Accounts Ledger
                this.accounts.deleteAdvanceAmountAccountsLedger(delDealNo, delDocumentType, delPartyCategory).subscribe(function (res) {
                }, function (err) {
                    _this.loader.hide();
                    // this.toast.error({ 'message': 'Something went wrong.' });
                    console.log(">>>>>Err", err);
                });
                this.accounts.updateAdvanceAmount(this.advanceAmountDetails._id, obj).subscribe(function (res) {
                    var accountsLedgerArray = [];
                    var agencyName = _this.DealNoDetails.agency_name;
                    var agencyId = _this.agencyID;
                    var companyBranchName = _this.DealNoDetails.company_name;
                    var companyBranchId = _this.companyId;
                    var transporterBranchName = _this.DealNoDetails.transporter_name;
                    var transporterBranchId = _this.transporterId;
                    var truckNo = _this.DealNoDetails.truck_no;
                    var srNo = _this.DealNoDetails.deal_no;
                    var dealId = _this.DealNoDetails._id;
                    var userName = localStorage.getItem('user_name');
                    var userId = localStorage.getItem('user_id');
                    var partyName = getFormData.party_category;
                    // this.mainAdvanceAmountArray
                    // Cash / Bank  srno 1
                    // BPCL  srno 3
                    // Commission srno 4
                    // Diesal Account srno 5
                    if (_this.editForm.value.party_category == "Company") {
                        if (_this.DealNoDetails.payment_mode == 'To Be Billed') {
                            //-------------- For Credit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = agencyName + "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Company Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + companyBranchName + "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Credit Company ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Cash Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": companyBranchName + " Unbilled A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'Advance Pod') {
                            //-------------- For Credit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = agencyName + "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Company Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + companyBranchName + "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Credit Company ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Cash Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": companyBranchName + " Billed A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'Advance To Pay') {
                            //-------------- For Credit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = agencyName + "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Company Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + companyBranchName + "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Credit Company ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Cash Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": companyBranchName + " Billed A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'To Pay') {
                            //-------------- For Credit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = agencyName + "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Company Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + companyBranchName + "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Credit Company ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Cash Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": companyBranchName + " Billed A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                    }
                    if (_this.editForm.value.party_category == "Transporter") {
                        if (_this.DealNoDetails.payment_mode == 'To Be Billed') {
                            //-------------- For Debit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else {
                                    mainString = "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Paid  Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Transporter ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Deducted Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Transporter Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": truckNo,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'Advance Pod') {
                            //-------------- For Debit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else {
                                    mainString = "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Paid  Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Transporter ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Deducted Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Transporter Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": truckNo,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'Advance To Pay') {
                            //-------------- For Debit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else {
                                    mainString = "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Paid  Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Transporter ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Deducted Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Transporter Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": truckNo,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'To Pay') {
                            //-------------- For Debit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else {
                                    mainString = "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Paid  Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Transporter ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Deducted Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Transporter Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": truckNo,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        // **************** Commission ******************
                        // this.mainAdvanceAmountArray.forEach(element => {
                        //   if(element.srno == 4) {             
                        //     // this.investorName
                        //     var investorCr = (element.amount * this.investorPercentage) / 100;
                        //     var indianaTruckingCr = (element.amount * this.indianaTruckingPercentage) / 100;
                        //     var agencyCr = (element.amount * this.agencyPercentage) / 100;
                        //     var commissionAccountName = "";
                        //     if(this.DealNoDetails.payment_mode == 'To Pay') { 
                        //       commissionAccountName = "Receipt "+ transporterBranchName;
                        //     } else {
                        //       commissionAccountName = truckNo;
                        //     }
                        //     // Add Commission Debit
                        //     var commissionDebitObj = {
                        //       "agency_name": agencyName,
                        //       "branch_id": agencyId,
                        //       "branch_name": agencyName,
                        //       "account_name": commissionAccountName,
                        //       "truck_no": truckNo,
                        //       "sr_no": srNo,
                        //       "deal_id": dealId,
                        //       "narration": "Commission Against Freight From "+ this.DealNoDetails.from +" To "+ this.DealNoDetails.to +" as per DF no "+ srNo + " Truck no " + truckNo,  
                        //       "narration_ref_no": "",
                        //       "document_type": "DFADV",
                        //       "debit_amount": element.amount,
                        //       "credit_amount": 0,
                        //       "voucher_date": this.DealNoDetails.deal_date,
                        //       "party_name": partyName,
                        //       "user_name": userName,
                        //       "user_id": userId 
                        //     };
                        //     accountsLedgerArray.push(commissionDebitObj);
                        //     // Add Investor Name
                        //     var investorObj = {
                        //       "agency_name": agencyName,
                        //       "branch_id": agencyId,
                        //       "branch_name": agencyName,
                        //       "account_name": this.investorName,
                        //       "truck_no": truckNo,
                        //       "sr_no": srNo,
                        //       "deal_id": dealId,
                        //       "narration": "Commission Against Freight From "+ this.DealNoDetails.from +" To "+ this.DealNoDetails.to +" as per DF no "+ srNo + " Truck no " + truckNo,  
                        //       "narration_ref_no": "",
                        //       "document_type": "DFADV",
                        //       "debit_amount": 0,
                        //       "credit_amount": investorCr,
                        //       "voucher_date": this.DealNoDetails.deal_date,
                        //       "party_name": partyName,
                        //       "user_name": userName,
                        //       "user_id": userId 
                        //     };
                        //     accountsLedgerArray.push(investorObj);
                        //     // Add indiana Trucking
                        //     var indianaTruckingObj = {
                        //       "agency_name": agencyName,
                        //       "branch_id": agencyId,
                        //       "branch_name": agencyName,
                        //       "account_name": "Indiana Trucking Commission",
                        //       "truck_no": truckNo,
                        //       "sr_no": srNo,
                        //       "deal_id": dealId,
                        //       "narration": "Commission Against Freight From "+ this.DealNoDetails.from +" To "+ this.DealNoDetails.to +" as per DF no "+ srNo + " Truck no " + truckNo,  
                        //       "narration_ref_no": "",
                        //       "document_type": "DFADV",
                        //       "debit_amount": 0,
                        //       "credit_amount": indianaTruckingCr,
                        //       "voucher_date": this.DealNoDetails.deal_date,
                        //       "party_name": partyName,
                        //       "user_name": userName,
                        //       "user_id": userId 
                        //     };
                        //     accountsLedgerArray.push(indianaTruckingObj);
                        //     // Add indiana Trucking
                        //     var agencyObj = {
                        //       "agency_name": agencyName,
                        //       "branch_id": agencyId,
                        //       "branch_name": agencyName,
                        //       "account_name": agencyName+" Commission",
                        //       "truck_no": truckNo,
                        //       "sr_no": srNo,
                        //       "deal_id": dealId,
                        //       "narration": "Commission Against Freight From "+ this.DealNoDetails.from +" To "+ this.DealNoDetails.to +" as per DF no "+ srNo + " Truck no " + truckNo,  
                        //       "narration_ref_no": "",
                        //       "document_type": "DFADV",
                        //       "debit_amount": 0,
                        //       "credit_amount": agencyCr,
                        //       "voucher_date": this.DealNoDetails.deal_date,
                        //       "party_name": partyName,
                        //       "user_name": userName,
                        //       "user_id": userId 
                        //     };
                        //     accountsLedgerArray.push(agencyObj);
                        //   }
                        // });
                    }
                    _this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe(function (res) {
                        _this.loader.hide();
                        _this.editForm.reset();
                        _this.toast.show({ 'message': 'Updated successfully.' });
                        _this.mainAdvanceAmountArray = [];
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__manage_advance_amount__["a" /* ManageAdvanceAmountPage */]);
                    }, function (err) {
                        _this.loader.hide();
                        _this.toast.error({ 'message': 'Something went wrong.' });
                        console.log(">>>>>Err", err);
                    });
                }, function (err) {
                    _this.loader.hide();
                    _this.toast.error({ 'message': 'Something went wrong.' });
                    console.log(">>>>>Err", err);
                });
            }
        }
    };
    EditAdvanceAmountPage.prototype.getAgencyId = function () {
        var _this = this;
        this.trucks.searchAgencyName(this.DealNoDetails.agency_name).subscribe(function (res) {
            var data = res.json();
            _this.agencyID = data[0]._id;
            console.log("agencyID >>>>", _this.agencyID);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditAdvanceAmountPage.prototype.getCompanyId = function () {
        var _this = this;
        this.requestLoad.searchCompany(this.DealNoDetails.company_name).subscribe(function (res) {
            var data = res.json();
            _this.companyId = data[0]._id;
            console.log("companyId >>>>", _this.companyId);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditAdvanceAmountPage.prototype.getTransporterId = function () {
        var _this = this;
        this.trucks.searchTransporterName(this.DealNoDetails.transporter_name).subscribe(function (res) {
            var data = res.json();
            _this.transporterId = data[0]._id;
            console.log("transporterId >>>>", _this.transporterId);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditAdvanceAmountPage.prototype.getAgencyListByName = function () {
        var _this = this;
        var agencyName = this.DealNoDetails.agency_name;
        this.admin.getAgencyListByName(agencyName).subscribe(function (res) {
            var data = res.json();
            var agencyData = data.results;
            if (agencyData[0]) {
                _this.investorName = agencyData[0].investor_name;
                _this.agencyPercentage = agencyData[0].agency_percentage;
                _this.indianaTruckingPercentage = agencyData[0].indiana_trucking_percentage;
                _this.investorPercentage = agencyData[0].investor_percentage;
            }
            console.log("Agency Data >>>>", agencyData[0]);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditAdvanceAmountPage.prototype.getAdvanceAmountList = function () {
        var _this = this;
        // this.loader.show();
        this.accounts.getAdvanceAmountList().subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            _this.advanceAmountList = data.results;
            _this.advanceAmountList.forEach(function (element) {
                element.date_frmt = __WEBPACK_IMPORTED_MODULE_11_moment__(element.date).format('YYYY-MM-DD');
            });
            console.log('Data >>>>>>>', _this.advanceAmountList);
        }, function (err) {
            // this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    EditAdvanceAmountPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-advance-amount',template:/*ion-inline-start:"D:\truck\src\pages\manage-advance-amount\edit-advance-amount\edit-advance-amount.html"*/'<!--\n  Generated template for the EditAdvanceAmountPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit DF Receipt & Payment</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="editForm">\n\n    <div>\n      <ion-row>\n        <!-- 1 -->\n        <ion-col col-3 class="label-font">\n          <span>\n            <label class=" label">Date </label> \n          </span>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <ion-item class="form-control">\n              <ion-datetime name="date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="date"></ion-datetime>\n            </ion-item>\n          </div>\n        </ion-col>\n        <ion-col col-3 class="label-font">\n        </ion-col>\n        <ion-col col-3 class="label-font">\n        </ion-col>\n\n        <!-- 2 -->\n        <ion-col col-6 class="label-font">\n          <ion-list radio-group>      \n            <ion-item>\n              <ion-label>Receipt</ion-label>\n              <ion-radio [checked]="RCT" value="receipt" (ionSelect)="radioSelect($event)"></ion-radio>\n            </ion-item>\n        \n            <ion-item>\n              <ion-label>Payment</ion-label>\n              <ion-radio [checked]="PYT" value="payment" (ionSelect)="radioSelect($event)"></ion-radio>\n            </ion-item>\n          </ion-list>\n        </ion-col>\n        <ion-col col-6 class="label-font">\n        </ion-col>\n\n\n        <!-- 4 -->\n        <ion-col col-3 class="label-font">\n          <span>\n            <label class="form-group label">Payment Type </label> \n          </span>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <select class="form-control drop-down" name="payment_type" (change)="getDealFinalList()" formControlName="payment_type"  >\n              <option value="">Select Payment Type</option>\n              <option *ngFor="let pyty of PAYMENT_TYPES" [ngValue]="pyty">{{pyty}}</option>\n            </select>\n\n          </div>\n        </ion-col>\n        <ion-col col-3 class="label-font">\n        </ion-col>\n        <ion-col col-3 class="label-font">\n        </ion-col>\n\n        <!-- 2 -->\n        <ion-col col-3 class="label-font">\n          <span>\n            <label class=" label">Party Category </label> \n          </span>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n              <input name="party_category" [readonly]="isReadonly()" type="text" formControlName="party_category" class="form-control" /> \n            <!-- <select class="form-control drop-down" name="party_category" (change)="getDealFinalList()" formControlName="party_category"  >\n              <option value="">Select Party Category</option>\n              <option *ngFor="let ptct of Party_Category" [ngValue]="ptct">{{ptct}}</option>\n            </select> -->\n          </div>\n        </ion-col>\n        <ion-col col-3 class="label-font">\n        </ion-col>\n        <ion-col col-3 class="label-font">\n        </ion-col>\n      </ion-row>\n\n      <br><br>\n      <div *ngIf="dealListFlag">\n\n        <table border="1" padding>\n          <thead>\n            <tr>\n              <th>Deal No</th>\n              <th>Date</th>\n              <th>From</th>\n              <th>To</th>\n              <th>Name</th>\n              <th *ngIf="truckFlag">Truck No</th>\n\n              <th>Payment Mode</th>\n              <th>Declare Advance</th>\n              <th>Receive Advance</th>\n              <th>Balance Advance</th>\n              \n              \n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor="let dfl of dealFinalList">\n              <td class="deal-color" (click)="selectDealNoData(dfl)">{{ dfl.deal_no }}</td>\n              <td>{{ dfl.deal_date_fmt }}</td>\n              <td>{{ dfl.from }}</td>\n              <td>{{ dfl.to }}</td>\n              <td>{{ dfl.consignor }}</td>\n              <td *ngIf="truckFlag">{{ dfl.truck_no }}</td>\n\n              <td>{{ dfl.payment_mode }}</td>\n              <td><span class="button-al">{{ dfl.declare_advance | number : \'1.2-2\' }}</span></td>\n              <td><span class="button-al">{{ dfl.receive_advance | number : \'1.2-2\' }}</span></td>\n              <td><span class="button-al">{{ dfl.balance_advance | number : \'1.2-2\' }}</span></td>\n              \n            </tr>\n          </tbody>\n        </table>\n\n      </div>\n      <br><br>\n\n\n      <ion-row>\n        <!-- 3 -->\n        <ion-col col-3 class="label-font">\n          <span>\n            <label class=" label">DF No. </label> \n          </span>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <input name="deal_no" [readonly]="isReadonly()" type="number" formControlName="deal_no" class="form-control" /> \n          </div>\n        </ion-col>\n        <ion-col col-3 class="label-font">\n          <label class=" label">Account Name</label>\n        </ion-col>\n        <ion-col col-3>\n          <input name="name" [readonly]="isReadonly()" type="text" formControlName="name" class="form-control" />           \n          <!-- <div class="form-group">  \n            <select class="form-control drop-down" name="name" formControlName="name" >\n              <option value="">Select Name</option>\n              <option *ngFor="let dfn of dfNamesList" [ngValue]="dfn">{{dfn}}</option>\n            </select>\n          </div> -->\n        </ion-col>\n\n        \n\n      </ion-row>\n\n      <!-- Form Array -->\n      <br>\n      <ion-row>\n        \n        <ion-col col-3>\n          <div class="form-group">  \n            <label class=" label">Account Name</label>\n            <select class="form-control drop-down" name="account_name" formControlName="account_name" >\n              <option value="">Select Account Name</option>\n              <option *ngFor="let mal of mainAccoutsList" [ngValue]="mal.account_name">{{mal.account_name}}</option>\n            </select>\n          </div>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <label class=" label">Amount </label> \n            <input name="amount" type="number" formControlName="amount" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <label class=" label">Remarks </label> \n            <input name="remarks" type="text" formControlName="remarks" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-3 class="button-agl">\n          <button ion-button (click)="advanceAmountAddInArray()" type="button" class="add-al">Add</button><br><br>\n        </ion-col>\n      </ion-row>\n\n\n      <table border="0" padding>\n        <tbody>\n          <tr *ngFor="let adam of mainAdvanceAmountArray; let i = index">\n            <td>{{ adam.account_name }}</td>\n            <td>{{ adam.amount }}</td>\n            <td>{{ adam.remarks }}</td>\n            <td><button class="btn-size" (click)="advanceAmountRemoveInArray(i, adam)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button></td>\n          </tr>\n        </tbody>\n      </table>\n\n      <br>\n      <button ion-button block size="large" type="submit" (click)="update()" expand="block"> Submit </button>       \n    </div>\n\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-advance-amount\edit-advance-amount\edit-advance-amount.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_9__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_8__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_7__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_6__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_5__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_accounts__["a" /* Accounts */]])
    ], EditAdvanceAmountPage);
    return EditAdvanceAmountPage;
}());

//# sourceMappingURL=edit-advance-amount.js.map

/***/ }),

/***/ 486:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddAdvanceAmountPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__manage_advance_amount__ = __webpack_require__(114);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the AddAdvanceAmountPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddAdvanceAmountPage = /** @class */ (function () {
    function AddAdvanceAmountPage(navCtrl, navParams, loader, toast, fb, requestLoad, events, trucks, admin, accounts) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.requestLoad = requestLoad;
        this.events = events;
        this.trucks = trucks;
        this.admin = admin;
        this.accounts = accounts;
        this.toDate = new Date().toISOString();
        this.Party_Category = ['Company', 'Transporter'];
        // PAYMENT_TYPES = ['Receivable Advance', 'Receivalbe Freight', 'Payable Advance', 'Payable Freight'];
        this.PAYMENT_TYPES = [];
        this.mainAccoutsList = [];
        this.mainAdvanceAmountArray = [];
        this.dealFinalList = [];
        this.dealListFlag = false;
        this.advanceAmountList = [];
        this.agencyPercentage = 0;
        this.indianaTruckingPercentage = 0;
        this.investorPercentage = 0;
        this.investorName = "";
        this.dfNamesList = [];
        this.declare_advance = 0;
        this.receive_advance = 0;
        this.balance_advance = 0;
        this.checkBalanceAdvance = 0;
        this.displayAmount = 0;
        this.truckFlag = false;
        this.RCT = false;
        this.PYT = false;
        this.addForm = this.fb.group({
            date: [this.toDate],
            party_category: [''],
            deal_no: [''],
            name: [''],
            payment_type: [''],
            // advance_amount: [''],
            account_name: [''],
            amount: [''],
            remarks: [''],
        });
        this.getAccounts();
        this.getAdvanceAmountList();
    }
    AddAdvanceAmountPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddAdvanceAmountPage');
    };
    AddAdvanceAmountPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__home_home__["a" /* HomePage */]);
    };
    AddAdvanceAmountPage.prototype.isReadonly = function () {
        return this.isReadonly; //return true/false 
    };
    AddAdvanceAmountPage.prototype.radioSelect = function (event) {
        console.log("Here ->", event);
        // PAYMENT_TYPES
        if (event == "receipt") {
            this.RCT = true;
            this.PYT = false;
            this.PAYMENT_TYPES = [];
            this.PAYMENT_TYPES = ['Receivable Advance', 'Receivable Balance'];
            this.addForm.controls['party_category'].setValue('Company');
        }
        if (event == "payment") {
            this.RCT = false;
            this.PYT = true;
            this.PAYMENT_TYPES = [];
            this.PAYMENT_TYPES = ['Payable Advance', 'Payable Balance'];
            this.addForm.controls['party_category'].setValue('Transporter');
        }
    };
    AddAdvanceAmountPage.prototype.getAccounts = function () {
        var _this = this;
        this.mainAccoutsList = [];
        var agency_name = localStorage.getItem('agency_name');
        console.log("agency_name >>>>", agency_name);
        this.requestLoad.getAccountsByAgency(agency_name).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            // console.log("mainAccoutsList >>>>", dataList);
            dataList.forEach(function (element) {
                _this.mainAccoutsList.push({ "srno": element.srno, "account_name": element.account_name });
            });
            console.log("mainAccoutsList >>>>", _this.mainAccoutsList);
            _this.addForm.controls['account_name'].setValue('Cash / Bank');
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddAdvanceAmountPage.prototype.advanceAmountAddInArray = function () {
        var _this = this;
        var totalAmount = 0;
        this.mainAdvanceAmountArray.forEach(function (element) {
            totalAmount = totalAmount + element.amount;
        });
        if (this.addForm.value.account_name && this.addForm.value.amount) {
            totalAmount = totalAmount + this.addForm.value.amount;
            if (totalAmount > this.checkBalanceAdvance) {
                this.toast.error({ 'message': 'Advance Amount can not more than Declare Advance..!' });
            }
            else {
                var srno;
                this.mainAccoutsList.forEach(function (element) {
                    if (element.account_name == _this.addForm.value.account_name) {
                        srno = element.srno;
                    }
                });
                var obj = {
                    "account_name": this.addForm.value.account_name,
                    "amount": this.addForm.value.amount,
                    "remarks": this.addForm.value.remarks,
                    "srno": srno
                };
                this.displayAmount = this.displayAmount - this.addForm.value.amount;
                this.mainAdvanceAmountArray.push(obj);
                this.addForm.controls['account_name'].setValue('Cash / Bank');
                this.addForm.controls['amount'].setValue(this.displayAmount);
                this.addForm.controls['remarks'].setValue('');
                console.log("obj >>>>", obj);
            }
        }
    };
    AddAdvanceAmountPage.prototype.advanceAmountRemoveInArray = function (index, data) {
        this.displayAmount = this.displayAmount + data.amount;
        this.addForm.controls['amount'].setValue(this.displayAmount);
        this.mainAdvanceAmountArray.splice(index, 1);
        console.log("array >>>", this.mainAdvanceAmountArray);
    };
    AddAdvanceAmountPage.prototype.getDealFinalList = function () {
        var _this = this;
        this.loader.show();
        this.dealFinalList = [];
        this.requestLoad.getNewDealFinal().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            var dataList = data.results;
            _this.dealListFlag = true;
            if (_this.addForm.value.party_category == "Company") {
                if (_this.addForm.value.payment_type == 'Receivable Advance') {
                    dataList.forEach(function (element) {
                        // payment_mode
                        if (element.payment_mode == 'Advance To Pay') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'Advance Pod') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'To Be Billed') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                    });
                }
                if (_this.addForm.value.payment_type == 'Receivable Balance') {
                    dataList.forEach(function (element) {
                        // payment_mode
                        if (element.payment_mode == 'Advance To Pay') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'Advance Pod') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'To Be Billed') {
                            element.consignor = element.company_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.company_commission) {
                                _this.receive_advance = _this.receive_advance + element.company_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                    });
                }
            }
            else {
                // dataList.forEach(element => {
                if (_this.addForm.value.payment_type == 'Payable Advance') {
                    dataList.forEach(function (element) {
                        // payment_mode
                        if (element.payment_mode == 'Advance To Pay') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'Advance Pod') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'To Be Billed') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.company_advance;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                    });
                }
                if (_this.addForm.value.payment_type == 'Payable Balance') {
                    dataList.forEach(function (element) {
                        // payment_mode
                        if (element.payment_mode == 'Advance To Pay') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'Advance Pod') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                        if (element.payment_mode == 'To Be Billed') {
                            element.consignor = element.transporter_name;
                            element.deal_date_fmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.deal_date).format("YYYY-MM-DD");
                            _this.declare_advance = 0;
                            _this.receive_advance = 0;
                            _this.balance_advance = 0;
                            if (_this.advanceAmountList[0]) {
                                _this.advanceAmountList.forEach(function (r) {
                                    _this.receive_advance = element.company_advance;
                                    if (r.deal_no == element.deal_no && _this.addForm.value.payment_type == r.payment_type) {
                                        if (r.advance_amount[0]) {
                                            r.advance_amount.forEach(function (e) {
                                                _this.receive_advance = _this.receive_advance + e.amount;
                                            });
                                        }
                                    }
                                });
                            }
                            if (element.transporter_commission) {
                                _this.receive_advance = _this.receive_advance + element.transporter_commission;
                            }
                            _this.declare_advance = element.transporter_freight;
                            _this.balance_advance = _this.declare_advance - _this.receive_advance;
                            element.declare_advance = _this.declare_advance;
                            element.receive_advance = _this.receive_advance;
                            element.balance_advance = _this.balance_advance;
                            if (_this.balance_advance > 0) {
                                _this.dealFinalList.push(element);
                            }
                        }
                    });
                }
                // });
            }
            if (_this.addForm.value.payment_type == 'Payable Advance') {
                _this.truckFlag = true;
            }
            else {
                _this.truckFlag = false;
            }
            // console.log('Deal Data >>>>>>>', this.dealFinalList);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    AddAdvanceAmountPage.prototype.selectDealNoData = function (data) {
        console.log('Deal Data >>>>>>>', data);
        this.DealNoDetails = data;
        this.addForm.controls['deal_no'].setValue(data.deal_no);
        this.displayAmount = data.balance_advance;
        this.addForm.controls['amount'].setValue(this.displayAmount);
        // this.accounts.searchDealByDealNo(data.deal_no).subscribe((res: any) => {
        //   var data = res.json(); 
        //   var dataList = data.results;
        //   if(dataList[0]) {
        //     dataList.forEach(r => {
        //       if (r.advance_amount[0]) {
        //         r.advance_amount.forEach(e => {
        //           this.receive_advance = this.receive_advance + e.amount;
        //         });
        //       }
        //     });
        //   }
        //   this.declare_advance = data.company_advance;
        //   this.balance_advance = this.declare_advance - this.receive_advance;
        // 'Receivable Advance', 'Receivable Balance', 'Payable Advance', 'Payable Balance'
        if (this.addForm.value.payment_type == 'Receivable Advance') {
            if (data.payment_mode == 'To Be Billed') {
                this.addForm.controls['name'].setValue(data.company_name + " Unbilled A/C.");
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance Pod') {
                this.addForm.controls['name'].setValue(data.company_name + " Billed A/C.");
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance To Pay') {
                this.addForm.controls['name'].setValue(data.company_name + " Billed A/C.");
                this.checkBalanceAdvance = data.balance_advance;
            }
        }
        if (this.addForm.value.payment_type == 'Receivable Balance') {
            if (data.payment_mode == 'To Be Billed') {
                this.addForm.controls['name'].setValue("Receipt " + data.company_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance Pod') {
                this.addForm.controls['name'].setValue("Receipt " + data.company_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance To Pay') {
                this.addForm.controls['name'].setValue("Receipt " + data.company_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
        }
        if (this.addForm.value.payment_type == 'Payable Advance') {
            if (data.payment_mode == 'To Be Billed') {
                this.addForm.controls['name'].setValue(data.truck_no);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance Pod') {
                this.addForm.controls['name'].setValue(data.truck_no);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance To Pay') {
                this.addForm.controls['name'].setValue(data.truck_no);
                this.checkBalanceAdvance = data.balance_advance;
            }
        }
        if (this.addForm.value.payment_type == 'Payable Balance') {
            if (data.payment_mode == 'To Be Billed') {
                this.addForm.controls['name'].setValue("Payment " + data.transporter_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance Pod') {
                this.addForm.controls['name'].setValue("Payment " + data.transporter_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
            if (data.payment_mode == 'Advance To Pay') {
                this.addForm.controls['name'].setValue("Payment " + data.transporter_name);
                this.checkBalanceAdvance = data.balance_advance;
            }
        }
        this.getAgencyId();
        this.getCompanyId();
        this.getTransporterId();
        this.getAgencyListByName();
        // }, err => {
        //   this.loader.hide();
        //   this.toast.error({ 'message': 'Something went wrong.' });
        //   console.log(">>>>>Err", err);
        // });
    };
    AddAdvanceAmountPage.prototype.save = function () {
        var _this = this;
        var totalAmount = 0;
        this.mainAdvanceAmountArray.forEach(function (element) {
            totalAmount = totalAmount + element.amount;
        });
        if (totalAmount > this.checkBalanceAdvance) {
            this.toast.error({ 'message': 'Advance Amount can not more than Declare Advance..!' });
        }
        else {
            if (this.mainAdvanceAmountArray[0]) {
                var getFormData = this.addForm.value;
                var obj = {
                    'date': getFormData.date,
                    'party_category': getFormData.party_category,
                    'deal_no': getFormData.deal_no,
                    'name': getFormData.name,
                    'payment_type': getFormData.payment_type,
                    'advance_amount': this.mainAdvanceAmountArray,
                };
                this.loader.show();
                this.accounts.addAdvanceAmount(obj).subscribe(function (res) {
                    var accountsLedgerArray = [];
                    var agencyName = _this.DealNoDetails.agency_name;
                    var agencyId = _this.agencyID;
                    var companyBranchName = _this.DealNoDetails.company_name;
                    var companyBranchId = _this.companyId;
                    var transporterBranchName = _this.DealNoDetails.transporter_name;
                    var transporterBranchId = _this.transporterId;
                    var truckNo = _this.DealNoDetails.truck_no;
                    var srNo = _this.DealNoDetails.deal_no;
                    var dealId = _this.DealNoDetails._id;
                    var userName = localStorage.getItem('user_name');
                    var userId = localStorage.getItem('user_id');
                    var partyName = getFormData.party_category;
                    // this.mainAdvanceAmountArray
                    // Cash / Bank  srno 1
                    // BPCL  srno 3
                    // Commission srno 4
                    // Diesal Account srno 5
                    if (_this.addForm.value.party_category == "Company") {
                        if (_this.DealNoDetails.payment_mode == 'To Be Billed') {
                            //-------------- For Credit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = agencyName + "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Company Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + companyBranchName + "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Credit Company ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Cash Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": companyBranchName + " Unbilled A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'Advance Pod') {
                            //-------------- For Credit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = agencyName + "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Company Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + companyBranchName + "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Credit Company ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Cash Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": companyBranchName + " Billed A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'Advance To Pay') {
                            //-------------- For Credit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = agencyName + "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Company Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + companyBranchName + "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Credit Company ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Cash Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": companyBranchName + " Billed A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'To Pay') {
                            //-------------- For Credit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = agencyName + "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Paid Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": companyBranchId,
                                    "branch_name": companyBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Company Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + companyBranchName + "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Paid " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Credit Company ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Cash Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": companyBranchName + " Billed A/c.",
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                    }
                    if (_this.addForm.value.party_category == "Transporter") {
                        if (_this.DealNoDetails.payment_mode == 'To Be Billed') {
                            //-------------- For Debit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else {
                                    mainString = "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Paid  Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Transporter ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Deducted Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Transporter Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": truckNo,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'Advance Pod') {
                            //-------------- For Debit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else {
                                    mainString = "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Paid  Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Transporter ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Deducted Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Transporter Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": truckNo,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'Advance To Pay') {
                            //-------------- For Debit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else {
                                    mainString = "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Paid  Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Transporter ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Deducted Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Transporter Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": truckNo,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        if (_this.DealNoDetails.payment_mode == 'To Pay') {
                            //-------------- For Debit Account ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received from " + transporterBranchName + " Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                else {
                                    mainString = "Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Agency ------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Advance Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Paid  Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var transporterDebit = {
                                    "agency_name": agencyName,
                                    "branch_id": transporterBranchId,
                                    "branch_name": transporterBranchName,
                                    "account_name": agencyName,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(transporterDebit);
                            });
                            //-------------- For Credit Transporter ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Deducted Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": element.account_name,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": '',
                                    "credit_amount": element.amount,
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                            //-------------- For Debit Transporter Account Name ---------
                            _this.mainAdvanceAmountArray.forEach(function (element) {
                                var mainString = "";
                                if (element.srno == 1) {
                                    mainString = "Being Amount Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 4) {
                                    mainString = "Commission Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                if (element.srno == 5) {
                                    mainString = "Diesal Received Against Freight From " + _this.DealNoDetails.from + " To " + _this.DealNoDetails.to + " as per DF no " + srNo + " Truck no " + truckNo;
                                }
                                var obj = {
                                    "agency_name": agencyName,
                                    "branch_id": agencyId,
                                    "branch_name": agencyName,
                                    "account_name": truckNo,
                                    "truck_no": truckNo,
                                    "sr_no": srNo,
                                    "deal_id": dealId,
                                    "narration": mainString,
                                    "narration_ref_no": "",
                                    "document_type": "DFADV",
                                    "debit_amount": element.amount,
                                    "credit_amount": '',
                                    "voucher_date": _this.DealNoDetails.deal_date,
                                    "party_name": partyName,
                                    "user_name": userName,
                                    "user_id": userId
                                };
                                accountsLedgerArray.push(obj);
                            });
                        }
                        // **************** Commission ******************
                        // this.mainAdvanceAmountArray.forEach(element => {
                        //   if(element.srno == 4) {             
                        //     // this.investorName
                        //     var investorCr = (element.amount * this.investorPercentage) / 100;
                        //     var indianaTruckingCr = (element.amount * this.indianaTruckingPercentage) / 100;
                        //     var agencyCr = (element.amount * this.agencyPercentage) / 100;
                        //     var commissionAccountName = truckNo;
                        //     if(this.DealNoDetails.payment_mode == 'To Pay') { 
                        //       commissionAccountName = "Receipt "+ transporterBranchName;
                        //     } else {
                        //       commissionAccountName = "";
                        //     }
                        //     // Add Commission Debit
                        //     var commissionDebitObj = {
                        //       "agency_name": agencyName,
                        //       "branch_id": agencyId,
                        //       "branch_name": agencyName,
                        //       "account_name": commissionAccountName,
                        //       "truck_no": truckNo,
                        //       "sr_no": srNo,
                        //       "deal_id": dealId,
                        //       "narration": "Commission Against Freight From "+ this.DealNoDetails.from +" To "+ this.DealNoDetails.to +" as per DF no "+ srNo + " Truck no " + truckNo,  
                        //       "narration_ref_no": "",
                        //       "document_type": "DFADV",
                        //       "debit_amount": element.amount,
                        //       "credit_amount": 0,
                        //       "voucher_date": this.DealNoDetails.deal_date,
                        //       "party_name": partyName,
                        //       "user_name": userName,
                        //       "user_id": userId 
                        //     };
                        //     accountsLedgerArray.push(commissionDebitObj);
                        //     // Add Investor Name
                        //     var investorObj = {
                        //       "agency_name": agencyName,
                        //       "branch_id": agencyId,
                        //       "branch_name": agencyName,
                        //       "account_name": this.investorName,
                        //       "truck_no": truckNo,
                        //       "sr_no": srNo,
                        //       "deal_id": dealId,
                        //       "narration": "Commission Against Freight From "+ this.DealNoDetails.from +" To "+ this.DealNoDetails.to +" as per DF no "+ srNo + " Truck no " + truckNo,  
                        //       "narration_ref_no": "",
                        //       "document_type": "DFADV",
                        //       "debit_amount": 0,
                        //       "credit_amount": investorCr,
                        //       "voucher_date": this.DealNoDetails.deal_date,
                        //       "party_name": partyName,
                        //       "user_name": userName,
                        //       "user_id": userId 
                        //     };
                        //     accountsLedgerArray.push(investorObj);
                        //     // Add indiana Trucking
                        //     var indianaTruckingObj = {
                        //       "agency_name": agencyName,
                        //       "branch_id": agencyId,
                        //       "branch_name": agencyName,
                        //       "account_name": "Indiana Trucking Commission",
                        //       "truck_no": truckNo,
                        //       "sr_no": srNo,
                        //       "deal_id": dealId,
                        //       "narration": "Commission Against Freight From "+ this.DealNoDetails.from +" To "+ this.DealNoDetails.to +" as per DF no "+ srNo + " Truck no " + truckNo,  
                        //       "narration_ref_no": "",
                        //       "document_type": "DFADV",
                        //       "debit_amount": 0,
                        //       "credit_amount": indianaTruckingCr,
                        //       "voucher_date": this.DealNoDetails.deal_date,
                        //       "party_name": partyName,
                        //       "user_name": userName,
                        //       "user_id": userId 
                        //     };
                        //     accountsLedgerArray.push(indianaTruckingObj);
                        //     // Add indiana Trucking
                        //     var agencyObj = {
                        //       "agency_name": agencyName,
                        //       "branch_id": agencyId,
                        //       "branch_name": agencyName,
                        //       "account_name": agencyName+" Commission",
                        //       "truck_no": truckNo,
                        //       "sr_no": srNo,
                        //       "deal_id": dealId,
                        //       "narration": "Commission Against Freight From "+ this.DealNoDetails.from +" To "+ this.DealNoDetails.to +" as per DF no "+ srNo + " Truck no " + truckNo,  
                        //       "narration_ref_no": "",
                        //       "document_type": "DFADV",
                        //       "debit_amount": 0,
                        //       "credit_amount": agencyCr,
                        //       "voucher_date": this.DealNoDetails.deal_date,
                        //       "party_name": partyName,
                        //       "user_name": userName,
                        //       "user_id": userId 
                        //     };
                        //     accountsLedgerArray.push(agencyObj);
                        //   }
                        // });
                    }
                    _this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe(function (res) {
                        _this.loader.hide();
                        _this.addForm.reset();
                        _this.toast.show({ 'message': 'Added successfully.' });
                        _this.mainAdvanceAmountArray = [];
                        _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_12__manage_advance_amount__["a" /* ManageAdvanceAmountPage */]);
                    }, function (err) {
                        _this.loader.hide();
                        _this.toast.error({ 'message': 'Something went wrong.' });
                        console.log(">>>>>Err", err);
                    });
                }, function (err) {
                    _this.loader.hide();
                    _this.toast.error({ 'message': 'Something went wrong.' });
                    console.log(">>>>>Err", err);
                });
            }
        }
    };
    AddAdvanceAmountPage.prototype.getAgencyId = function () {
        var _this = this;
        this.trucks.searchAgencyName(this.DealNoDetails.agency_name).subscribe(function (res) {
            var data = res.json();
            _this.agencyID = data[0]._id;
            console.log("agencyID >>>>", _this.agencyID);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddAdvanceAmountPage.prototype.getCompanyId = function () {
        var _this = this;
        this.requestLoad.searchCompany(this.DealNoDetails.company_name).subscribe(function (res) {
            var data = res.json();
            _this.companyId = data[0]._id;
            console.log("companyId >>>>", _this.companyId);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddAdvanceAmountPage.prototype.getTransporterId = function () {
        var _this = this;
        this.trucks.searchTransporterName(this.DealNoDetails.transporter_name).subscribe(function (res) {
            var data = res.json();
            _this.transporterId = data[0]._id;
            console.log("transporterId >>>>", _this.transporterId);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddAdvanceAmountPage.prototype.getAgencyListByName = function () {
        var _this = this;
        var agencyName = this.DealNoDetails.agency_name;
        this.admin.getAgencyListByName(agencyName).subscribe(function (res) {
            var data = res.json();
            var agencyData = data.results;
            if (agencyData[0]) {
                _this.investorName = agencyData[0].investor_name;
                _this.agencyPercentage = agencyData[0].agency_percentage;
                _this.indianaTruckingPercentage = agencyData[0].indiana_trucking_percentage;
                _this.investorPercentage = agencyData[0].investor_percentage;
            }
            console.log("Agency Data >>>>", agencyData[0]);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    AddAdvanceAmountPage.prototype.getAdvanceAmountList = function () {
        var _this = this;
        this.loader.show();
        this.accounts.getAdvanceAmountList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.advanceAmountList = data.results;
            _this.advanceAmountList.forEach(function (element) {
                element.date_frmt = __WEBPACK_IMPORTED_MODULE_10_moment__(element.date).format('YYYY-MM-DD');
            });
            console.log('Data >>>>>>>', _this.advanceAmountList);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    AddAdvanceAmountPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-advance-amount',template:/*ion-inline-start:"D:\truck\src\pages\manage-advance-amount\add-advance-amount\add-advance-amount.html"*/'<!--\n  Generated template for the AddAdvanceAmountPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <!-- <ion-title>add-advance-amount</ion-title> -->\n\n    <ion-toolbar>\n      <ion-title>Add DF Receipt & Payment</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="addForm">\n<div>\n\n\n      <div class="form-group">\n          <label class=" label">Date</label>\n          <ion-item class="form-control">\n              <ion-datetime name="date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="date"></ion-datetime>\n            </ion-item>        \n          </div>\n\n          <div class="width-full advance-radio">  \n              <ion-item>\n                <ion-label>Receipt</ion-label>\n                <ion-radio [checked]="RCT" value="receipt" (ionSelect)="radioSelect($event)"></ion-radio>\n              </ion-item>\n          \n              <ion-item>\n                <ion-label>Payment</ion-label>\n                <ion-radio [checked]="PYT" value="payment" (ionSelect)="radioSelect($event)"></ion-radio>\n              </ion-item>            \n        </div>\n\n    <div class="form-group">\n        <label class="label">Payment Type </label> \n        <select class="form-control drop-down" name="payment_type" (change)="getDealFinalList()" formControlName="payment_type"  >\n            <option value="">Select Payment Type</option>\n            <option *ngFor="let pyty of PAYMENT_TYPES" [ngValue]="pyty">{{pyty}}</option>\n          </select> \n    </div>\n\n      \n    <div class="form-group">\n        <label class=" label">Party Category </label> \n        <input name="party_category" [readonly]="isReadonly()" type="text" formControlName="party_category" class="form-control" /> \n      </div>\n\n  \n      <div class="width-full">\n\n        <!-- 2 -->\n         <div *ngIf="dealListFlag">\n\n        <table border="1" padding>\n          <thead>\n            <tr>\n              <th>Deal No</th>\n              <th>Date</th>\n              <th>From</th>\n              <th>To</th>\n              <th>Name</th>\n              <th *ngIf="truckFlag">Truck No</th>\n\n              <th>Payment Mode</th>\n              <th>Declare Advance</th>\n              <th>Receive Advance</th>\n              <th>Balance Advance</th>\n              \n              \n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor="let dfl of dealFinalList">\n              <td class="deal-color" (click)="selectDealNoData(dfl)">{{ dfl.deal_no }}</td>\n              <td>{{ dfl.deal_date_fmt }}</td>\n              <td>{{ dfl.from }}</td>\n              <td>{{ dfl.to }}</td>\n              <td>{{ dfl.consignor }}</td>\n              <td *ngIf="truckFlag">{{ dfl.truck_no }}</td>\n\n              <td>{{ dfl.payment_mode }}</td>\n              <td><span class="button-al">{{ dfl.declare_advance | number : \'1.2-2\' }}</span></td>\n              <td><span class="button-al">{{ dfl.receive_advance | number : \'1.2-2\' }}</span></td>\n              <td><span class="button-al">{{ dfl.balance_advance | number : \'1.2-2\' }}</span></td>\n              \n            </tr>\n          </tbody>\n        </table>\n\n      </div>\n    </div>\n\n  <!-- 3 -->\n        \n    <div class="form-group">\n        <label class=" label">DF No. </label> \n        <input name="deal_no" [readonly]="isReadonly()" type="number" formControlName="deal_no" class="form-control" /> \n      </div>\n      \n    <div class="form-group">\n        <label class=" label">Account Name</label>\n        <input name="name" [readonly]="isReadonly()" type="text" formControlName="name" class="form-control" />           \n      </div>\n\n\n      <!-- Form Array -->\n      \n        <ion-col col-3>\n          <div class="form-group">  \n            <label class=" label">Account Name</label>\n            <select class="form-control drop-down" name="account_name" formControlName="account_name" >\n              <option value="">Select Account Name</option>\n              <option *ngFor="let mal of mainAccoutsList" [ngValue]="mal.account_name">{{mal.account_name}}</option>\n            </select>\n          </div>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <label class=" label">Amount </label> \n            <input name="amount" type="number" formControlName="amount" class="form-control" /> \n          </div>\n        </ion-col>\n\n        <ion-col col-3>\n          <div class="form-group">\n            <label class=" label">Remarks </label> \n            <input name="remarks" type="text" formControlName="remarks" class="form-control" /> \n          </div>\n        </ion-col>\n        <div class="width-full" padding>\n          <button ion-button (click)="advanceAmountAddInArray()" type="button" class="add-al">Add</button><br><br>\n        </div>\n\n\n      <table border="0" padding>\n        <tbody>\n          <tr *ngFor="let adam of mainAdvanceAmountArray; let i = index">\n            <td>{{ adam.account_name }}</td>\n            <td>{{ adam.amount }}</td>\n            <td>{{ adam.remarks }}</td>\n            <td><button class="btn-size" (click)="advanceAmountRemoveInArray(i, adam)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button></td>\n          </tr>\n        </tbody>\n      </table>\n\n      <br>\n      <div class="width-full">\n      <button ion-button block size="large" type="submit" (click)="save()" expand="block"> Submit </button>       \n    </div>\n    </div>\n\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-advance-amount\add-advance-amount\add-advance-amount.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_8__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_7__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_6__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_5__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_4__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_11__providers_accounts__["a" /* Accounts */]])
    ], AddAdvanceAmountPage);
    return AddAdvanceAmountPage;
}());

//# sourceMappingURL=add-advance-amount.js.map

/***/ }),

/***/ 487:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddDocumentsMasterPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_fleet_management__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__attach_documents__ = __webpack_require__(115);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Generated class for the AddDocumentsMasterPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddDocumentsMasterPage = /** @class */ (function () {
    function AddDocumentsMasterPage(navCtrl, navParams, fb, fleetManagement, loader, toast, events) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.fleetManagement = fleetManagement;
        this.loader = loader;
        this.toast = toast;
        this.events = events;
        this.submitted = false;
        this.addForm = this.fb.group({
            name: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required],
        });
    }
    AddDocumentsMasterPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddDocumentsMasterPage');
    };
    AddDocumentsMasterPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    AddDocumentsMasterPage.prototype.save = function (isValid) {
        var _this = this;
        this.submitted = true;
        if (isValid) {
            this.loader.show();
            var obj = {
                name: this.addForm.value.name
            };
            this.fleetManagement.addDocumentsMaster(obj).subscribe(function (res) {
                _this.loader.hide();
                _this.addForm.reset();
                _this.toast.show({ 'message': 'Added Successfully.' });
                _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__attach_documents__["a" /* AttachDocumentsPage */], { flag: 1 });
            }, function (err) {
                console.log("err >>>", err);
            });
        }
    };
    AddDocumentsMasterPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-documents-master',template:/*ion-inline-start:"D:\truck\src\pages\attach-documents\add-documents-master\add-documents-master.html"*/'<!--\n  Generated template for the AddDocumentsMasterPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add Documents Master</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n    <form [formGroup]="addForm" (ngSubmit)="save(addForm.valid)" novalidate>\n\n        <div class="form-group">\n          <label class=" label">Name</label>\n          <input type="text" placeholder="Enter name" formControlName="name" class="form-control">\n    \n          <div class="error-msg" *ngIf="submitted || (addForm.controls.name.invalid && (addForm.controls.name.dirty || addForm.controls.name.touched))">\n            <div *ngIf="addForm.controls[\'name\'].hasError(\'required\')">\n              <label>Name is required.</label>\n            </div>\n          </div>\n        </div>\n    \n        <div padding>\n          <button ion-button block size="large" type="submit" expand="block" ><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add</button>\n        </div>\n    \n      </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\attach-documents\add-documents-master\add-documents-master.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_7__providers_fleet_management__["a" /* FleetManagement */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_6__providers_event_service__["a" /* EventsService */]])
    ], AddDocumentsMasterPage);
    return AddDocumentsMasterPage;
}());

//# sourceMappingURL=add-documents-master.js.map

/***/ }),

/***/ 488:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditAttachDocumentsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_fleet_management__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__attach_documents__ = __webpack_require__(115);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the EditAttachDocumentsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditAttachDocumentsPage = /** @class */ (function () {
    function EditAttachDocumentsPage(navCtrl, navParams, fb, fleetManagement, loader, toast) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.fleetManagement = fleetManagement;
        this.loader = loader;
        this.toast = toast;
        this.documentDetails = this.navParams.get('data');
        this.editDocumentForm = this.fb.group({
            start_date: [],
            end_date: []
        });
        console.log("documentDetails >>>", this.documentDetails);
        var attachdocument_row = this.documentDetails.attachdocument.split('uploads/');
        this.documentDetails.attachdocument_format = attachdocument_row[1];
        this.editDocumentForm.controls['start_date'].setValue(this.documentDetails.startdate);
        this.editDocumentForm.controls['end_date'].setValue(this.documentDetails.enddate);
    }
    EditAttachDocumentsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditAttachDocumentsPage');
    };
    EditAttachDocumentsPage.prototype.update = function () {
        var _this = this;
        this.loader.show();
        var data = {
            id: this.documentDetails._id,
            start_date: this.editDocumentForm.value.start_date,
            end_date: this.editDocumentForm.value.end_date,
        };
        this.fleetManagement.updateDocumentData(data).subscribe(function (res) {
            _this.toast.show({ 'message': 'Updated Successfully.' });
            _this.loader.hide();
            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__attach_documents__["a" /* AttachDocumentsPage */], { flag: 0, truck_no: _this.documentDetails.truck_no });
        }, function (err) {
            _this.toast.show({ 'message': 'Something went wrong..!' });
        });
    };
    EditAttachDocumentsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-attach-documents',template:/*ion-inline-start:"D:\truck\src\pages\attach-documents\edit-attach-documents\edit-attach-documents.html"*/'<!--\n  Generated template for the EditAttachDocumentsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Edit Attach Documents</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <h4>Edit Document: {{ documentDetails.attachdocument_format }}</h4>\n  <form [formGroup]="editDocumentForm">\n\n    <div class="form-group">\n      <label class=" label">Start Date</label>\n      <ion-item class="form-control">\n        <ion-datetime name="start_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="start_date"></ion-datetime>\n      </ion-item>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">End Date</label>\n      <ion-item class="form-control">\n        <ion-datetime name="end_date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="end_date"></ion-datetime>\n      </ion-item>\n    </div>\n\n    <br>\n    <div class="form-group">\n      <button ion-button class="update-button" (click)="update()" type="button" expand="block">Update</button>\n    </div>\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\attach-documents\edit-attach-documents\edit-attach-documents.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_5__providers_fleet_management__["a" /* FleetManagement */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_toast__["a" /* ToastProvider */]])
    ], EditAttachDocumentsPage);
    return EditAttachDocumentsPage;
}());

//# sourceMappingURL=edit-attach-documents.js.map

/***/ }),

/***/ 489:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficQualityControl; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the TrafficQualityControl page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var TrafficQualityControl = /** @class */ (function () {
    function TrafficQualityControl(navCtrl, navParams, requestLoad, actionSheetController, admin, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.categories = [
            'Deal Final',
            'Truck Verification',
            'Bank Details / Loading Status',
            'Receivable Advance',
            'Pending POD - T',
            'Pending POD - C',
            'Receivable Balance',
            'Commission'
        ];
        this.activeTab = this.categories[0];
        this.isShow = false;
        localStorage.setItem("quality", "yes");
    }
    TrafficQualityControl.prototype.ionViewDidEnter = function () {
        localStorage.setItem("quality", "yes");
        this.getDealFinalList();
    };
    TrafficQualityControl.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad TrafficOperationsPage');
        // this.deal = this.navParams.get('data');
        localStorage.setItem("quality", "yes");
        this.getDealFinalList();
    };
    TrafficQualityControl.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    TrafficQualityControl.prototype.setActiveTab = function (c) {
        this.activeTab = c;
    };
    TrafficQualityControl.prototype.getDealFinalList = function () {
        var _this = this;
        console.log("getting <<<");
        this.loader.show();
        this.requestLoad.getDealFinalNewListSorted().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            data.results.forEach(function (d) {
                d.deal_date = __WEBPACK_IMPORTED_MODULE_6_moment__(d.deal_date).format('DD/MM/YYYY');
            });
            _this.deal = data.results;
            console.log('Data >>>>>>>', _this.deal);
            localStorage.setItem("data", JSON.stringify(_this.deal));
            _this.isShow = true;
            _this.pendingVerification = _this.deal.filter(function (e) {
                return !e.traffic_operations.document_verification;
            });
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    TrafficQualityControl = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-traffic-quality',template:/*ion-inline-start:"D:\truck\src\pages\traffic-quality-control\traffic-quality-control.html"*/'<!--\n  Generated template for the TrafficOperationsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Traffic Quality Control</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()">\n          <ion-icon name="home"></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n\n    <!-- <ion-toolbar>\n      <ion-row class="filters">\n        <ion-col no-padding col-12>\n          <ion-slides slidesPerView="3.4">\n            <ion-slide *ngFor="let category of categories" (click)="selectedTab(category)" [class.selected]="activeTab === category">\n              <p>{{category}}</p>\n            </ion-slide>\n          </ion-slides>\n        </ion-col>\n      </ion-row>\n    </ion-toolbar> -->\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <!-- TABS -->\n <!--  <ion-row>\n    <ion-col>\n      <ul class="nav nav-tabs">\n        <li *ngFor="let c of categories" [ngClass]="{ active: activeTab == c }">\n          <a href="javascript:void(0)" (click)="setActiveTab(c)">{{ c }}</a>\n        </li>\n      </ul>\n    </ion-col>\n  </ion-row> -->\n\n<ion-row *ngIf="isShow">\n  <ion-col col-3>\n    <ion-card class="card_ico"><div><h4>Payable Advance   </h4> <span>{{pendingVerification.length}}</span></div></ion-card>\n  </ion-col>\n\n  <ion-col col-3>\n    <ion-card class="card_ico"><div><h4> Payable Balance    </h4> \n      <span>Qty:2</span>\n      <span>Amt:2000</span>\n    </div></ion-card>\n  </ion-col>\n\n  <ion-col col-3>\n    <ion-card class="card_ico"><div><h4>Receivable Advance  </h4> \n      <span>Qty:2</span>\n      <span>Amt:2000</span>\n    </div></ion-card>\n  </ion-col>\n\n  <ion-col col-3>\n    <ion-card class="card_ico"><div><h4>Receivable Balance    </h4> \n      <span>Qty:2</span>\n      <span>Amt:2000</span>\n   \n    </div></ion-card>\n  </ion-col>\n</ion-row>  \n\n<div class="search">\n  <input type="text" placeholder="Search" class="form-control">\n</div>\n  <!-- CONTENTS -->\n  <ion-row  *ngIf="isShow">\n    <ion-col>\n        <traffic-ops-deals-tab [data]="deal"></traffic-ops-deals-tab>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Truck Verification\'">\n    <ion-col>\n        <traffic-ops-trucks-verification [data]="deal"></traffic-ops-trucks-verification>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Bank Details / Loading Status\'">\n    <ion-col>\n        <traffic-ops-bank-detail [data]="deal"></traffic-ops-bank-detail>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Receivable Advance\'">\n    <ion-col>\n        <traffic-ops-receivable-advance [data]="deal"></traffic-ops-receivable-advance>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Pending POD - T\'">\n    <ion-col>\n        <traffic-ops-pending-pod-t [data]="deal"></traffic-ops-pending-pod-t>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Pending POD - C\'">\n    <ion-col>\n        <traffic-ops-pending-pod-c [data]="deal"></traffic-ops-pending-pod-c>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Receivable Balance\'">\n    <ion-col>\n        <traffic-ops-receivable-balance [data]="deal"></traffic-ops-receivable-balance>\n    </ion-col>\n  </ion-row>\n<!-- \n  <ion-row *ngIf="activeTab === \'Commission\'">\n    <ion-col>\n        <traffic-ops-commission></traffic-ops-commission>\n    </ion-col>\n  </ion-row> -->\n  \n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\traffic-quality-control\traffic-quality-control.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */]])
    ], TrafficQualityControl);
    return TrafficQualityControl;
}());

//# sourceMappingURL=traffic-quality-control.js.map

/***/ }),

/***/ 490:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EditAccountsTransactionsPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__accounts_transactions__ = __webpack_require__(170);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












/**
 * Generated class for the EditAccountsTransactionsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var EditAccountsTransactionsPage = /** @class */ (function () {
    function EditAccountsTransactionsPage(navCtrl, navParams, admin, actionSheetController, loader, toast, fb, trucks, accounts, requestLoad) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.admin = admin;
        this.actionSheetController = actionSheetController;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.trucks = trucks;
        this.accounts = accounts;
        this.requestLoad = requestLoad;
        this.toDate = new Date().toISOString();
        this.voucherTypes = ['Receipt', 'Payment', 'Contra', 'Journal', 'Debit Note', 'Credit Note'];
        this.accountsHead = [];
        this.againsts = ['DOCUMENT', 'EMI', 'INVESTMENT', 'MAINTENANCE', 'SALARY', 'SITE ADVANCE', 'TYRE'];
        this.mainAccoutsList = [];
        this.mainPaymentTypes = [];
        this.mainAccountsTransactions = [];
        this.display = true;
        this.editData = false;
        this.truckNoList = [];
        this.accountsDataArray = [];
        this.fromEdit = 0;
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_9_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Accounts Name list
        this.accountsName = function (keyword) {
            if (keyword) {
                var agencyName = _this.updateForm.value.agency_name.agency_name ? _this.updateForm.value.agency_name.agency_name : _this.updateForm.value.agency_name;
                return _this.accounts.searchAccountsNameByAgency(keyword, agencyName).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_9_rxjs__["Observable"].of([]);
            }
        };
        this.accountsTransactionsDetails = navParams.get('data');
        if (this.accountsTransactionsDetails.accounts_data[0]) {
            this.accountsTransactionsDetails.accounts_data.forEach(function (r) {
                _this.accountsDataArray.push(_this.accountsDataForm(r));
            });
            console.log(" Yes  >>>");
        }
        else {
            console.log(" No  >>>");
            this.accountsDataArray.push(this.newAccountsDataForm());
        }
        this.updateForm = this.fb.group({
            agency_name: [''],
            voucher_type: [''],
            voucher_no: [''],
            date: [this.toDate],
            truck_no: [''],
            naration: [''],
            debit: [0],
            credit: [0],
            accounts_data: this.fb.array(this.accountsDataArray),
        });
        this.updateForm.controls['agency_name'].setValue(this.accountsTransactionsDetails.agency_name);
        this.updateForm.controls['voucher_type'].setValue(this.accountsTransactionsDetails.voucher_type);
        this.updateForm.controls['voucher_no'].setValue(this.accountsTransactionsDetails.voucher_no);
        this.updateForm.controls['date'].setValue(this.accountsTransactionsDetails.date);
        this.updateForm.controls['naration'].setValue(this.accountsTransactionsDetails.naration);
        this.updateForm.controls['debit'].setValue(this.accountsTransactionsDetails.debit);
        this.updateForm.controls['credit'].setValue(this.accountsTransactionsDetails.credit);
        if (this.accountsTransactionsDetails.truck_no) {
            this.fromEdit = 1;
            this.getTruckNoByAgencyLedger();
        }
    }
    EditAccountsTransactionsPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad EditAccountsTransactionsPage');
    };
    EditAccountsTransactionsPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_10__home_home__["a" /* HomePage */]);
    };
    EditAccountsTransactionsPage.prototype.isReadonly = function () {
        return this.isReadonly; //return true/false 
    };
    Object.defineProperty(EditAccountsTransactionsPage.prototype, "accountsData", {
        get: function () { return this.updateForm.get('accounts_data'); },
        enumerable: true,
        configurable: true
    });
    EditAccountsTransactionsPage.prototype.accountsDataForm = function (d) {
        var data = d ? d : '';
        return this.fb.group({
            account_name: [data.account_name],
            account_debit: [data.account_debit],
            account_credit: [data.account_credit],
        });
    };
    EditAccountsTransactionsPage.prototype.newAccountsDataForm = function () {
        return this.fb.group({
            account_name: [''],
            account_debit: [''],
            account_credit: [''],
        });
    };
    EditAccountsTransactionsPage.prototype.addTo = function () {
        this.accounts_data = this.updateForm.get('accounts_data');
        this.accounts_data.push(this.newAccountsDataForm());
    };
    EditAccountsTransactionsPage.prototype.removeTo = function (index) {
        if (index === 0) {
            this.toast.error({ 'message': 'Cannot remove this form.' });
        }
        else {
            this.accounts_data.removeAt(index);
            this.calculationDrCr();
        }
    };
    EditAccountsTransactionsPage.prototype.getVoucherNo = function () {
        var _this = this;
        if (this.updateForm.value.agency_name.agency_name && this.updateForm.value.voucher_type) {
            this.loader.show();
            var agencyName = this.updateForm.value.agency_name.agency_name;
            var voucherType = this.updateForm.value.voucher_type;
            this.accounts.getMaxVoucherNo(agencyName, voucherType).subscribe(function (res) {
                var data = res.json();
                _this.loader.hide();
                console.log("Max No >>>>>", data.max_voucher_no);
                _this.updateForm.controls['voucher_no'].setValue(data.max_voucher_no);
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }
        if (this.updateForm.value.agency_name.agency_name) {
            this.fromEdit = 0;
            this.getTruckNoByAgencyLedger();
        }
    };
    EditAccountsTransactionsPage.prototype.getPaymentType = function () {
        var _this = this;
        this.requestLoad.getPaymentTypesList().subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            dataList.forEach(function (element) {
                _this.mainPaymentTypes.push(element.name);
            });
            console.log("mainPaymentTypes >>>>", _this.mainPaymentTypes);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditAccountsTransactionsPage.prototype.calculationDrCr = function () {
        // console.log("accounts_data >>>>", this.updateForm.value.accounts_data);
        var totalDebit = 0;
        var totalCredit = 0;
        this.updateForm.value.accounts_data.forEach(function (r) {
            if (r.account_debit) {
                totalDebit = totalDebit + r.account_debit;
            }
            if (r.account_credit) {
                totalCredit = totalCredit + r.account_credit;
            }
        });
        this.updateForm.controls['debit'].setValue(totalDebit);
        this.updateForm.controls['credit'].setValue(totalCredit);
    };
    EditAccountsTransactionsPage.prototype.update = function () {
        var _this = this;
        var voucherTypesArray = [
            { "name": 'Receipt', "value": "REC" },
            { "name": 'Payment', "value": "PYT" },
            { "name": 'Contra', "value": "CON" },
            { "name": 'Journal', "value": "JOR" },
            { "name": 'Debit Note', "value": "DNT" },
            { "name": 'Credit Note', "value": "CNT" },
        ];
        var getFormData = this.updateForm.value;
        var accountsLedgerArray = [];
        var accountsDataArray = [];
        var voucherDocumentType = "";
        voucherTypesArray.forEach(function (r) {
            if (r.name == getFormData.voucher_type) {
                voucherDocumentType = r.value;
            }
        });
        var voucherNoObj = {
            agency_name: getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
            voucher_type: getFormData.voucher_type,
            voucher_no: getFormData.voucher_no
        };
        var accountsTransactionsObj = {
            agency_name: getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
            voucher_type: getFormData.voucher_type,
            voucher_document_type: voucherDocumentType,
            voucher_no: getFormData.voucher_no,
            date: getFormData.date,
            // account_head: "",
            // payment_type: getFormData.payment_type,
            // against: getFormData.against,
            // account_name: getFormData.account_name,
            truck_no: getFormData.truck_no,
            accounts_data: accountsDataArray,
            naration: getFormData.naration,
            debit: getFormData.debit,
            credit: getFormData.credit,
            user_name: localStorage.getItem('user_name')
        };
        getFormData.accounts_data.forEach(function (r) {
            r.account_name = r.account_name.account_name ? r.account_name.account_name : r.account_name;
            accountsDataArray.push(r);
            var obj = {
                "agency_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
                "branch_name": getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name,
                "account_name": r.account_name,
                "truck_no": getFormData.truck_no,
                "narration": getFormData.naration,
                "sr_no": getFormData.voucher_no,
                "document_type": voucherDocumentType,
                "debit_amount": r.account_debit,
                "credit_amount": r.account_credit,
                "voucher_date": getFormData.date,
                "user_name": localStorage.getItem('user_name')
            };
            accountsLedgerArray.push(obj);
        });
        console.log("Accounts Transactions >>>>>>", accountsTransactionsObj);
        this.loader.show();
        // // Add Accounts Transactions
        // this.accounts.addAccountsTransactions(accountsTransactionsObj).subscribe((res: any) => {
        //   // Add Voucher 
        //   this.accounts.addVoucherNo(voucherNoObj).subscribe((res: any) => {
        //     this.loader.hide();
        //     this.updateForm.reset();
        //     this.toast.show({ 'message': 'Added successfully.' });
        //     this.getAccountsTransactions();
        //     // this.navCtrl.setRoot();
        //   }, err => {
        //     this.loader.hide();
        //     this.toast.error({ 'message': 'Something went wrong.' });
        //     console.log(">>>>>Err", err);
        //   });
        // }, err => {
        //   this.loader.hide();
        //   this.toast.error({ 'message': 'Something went wrong.' });
        //   console.log(">>>>>Err", err);
        // });
        // Delete Accounts Ledger Records 
        var document_type = voucherDocumentType;
        var agencyName = getFormData.agency_name.agency_name ? getFormData.agency_name.agency_name : getFormData.agency_name;
        this.requestLoad.deleteAccountsTransactionsLedger(this.accountsTransactionsDetails.voucher_no, document_type, agencyName).subscribe(function (res) {
            // Add Accounts Ledger Records 
            _this.requestLoad.addAccountsLedger(accountsLedgerArray).subscribe(function (res) {
                // Update Accounts Transactions Records 
                _this.accounts.updateAccountsTransactions(_this.accountsTransactionsDetails._id, accountsTransactionsObj).subscribe(function (res) {
                    _this.loader.hide();
                    _this.toast.error({ 'message': 'Updated successfully.' });
                    _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_11__accounts_transactions__["a" /* AccountsTransactionsPage */]);
                }, function (err) {
                    console.log(">>>>error", err);
                });
            }, function (err) {
                console.log(">>>>error", err);
            });
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditAccountsTransactionsPage.prototype.getTruckNoByAgencyLedger = function () {
        var _this = this;
        this.truckNoList = [];
        var agencyName = this.updateForm.value.agency_name.agency_name ? this.updateForm.value.agency_name.agency_name : this.updateForm.value.agency_name;
        // this.loader.show();
        this.accounts.getTruckNoByAgencyLedger(agencyName).subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            _this.truckNoList = dataList;
            if (_this.fromEdit = 1) {
                _this.updateForm.controls['truck_no'].setValue(_this.accountsTransactionsDetails.truck_no);
            }
            console.log("truck No List >>>>", _this.truckNoList);
            // this.loader.hide();
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    EditAccountsTransactionsPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-edit-accounts-transactions',template:/*ion-inline-start:"D:\truck\src\pages\accounts-transactions\edit-accounts-transactions\edit-accounts-transactions.html"*/'<!--\n  Generated template for the EditAccountsTransactionsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-header>\n  <ion-navbar>\n\n    <ion-toolbar>\n      <ion-title>Edit Accounts Transactions</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="home()" >\n          <ion-icon name="home" ></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n  \n<ion-content padding>\n\n  <form [formGroup]="updateForm">\n\n    <div class="form-group">\n      <label class=" label">Agency Name</label>\n      <input type="text" [readonly]="isReadonly()" placeholder="" formControlName="agency_name" class="form-control">\n      <!-- <input\n        class="form-control"\n        [readonly]="isReadonly()"\n        ng2-auto-complete\n        [source]="agencyName.bind(this)"\n        list-formatter="agency_name"\n        formControlName="agency_name" \n        (change)= "getVoucherNo()"         \n      /> -->\n    </div>\n  \n    <div class="form-group">\n      <label class=" label">Voucher Type</label>\n      <input type="text" [readonly]="isReadonly()" placeholder="" formControlName="voucher_type" class="form-control">\n      <!-- <select class="form-control drop-down" name="voucher_type" [readonly]="isReadonly()" formControlName="voucher_type" (change)= "getVoucherNo()" >\n        <option value="">Select Type</option>\n        <option *ngFor="let vt of voucherTypes" [ngValue]="vt">{{vt}}</option>\n      </select> -->\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Voucher No</label>\n      <input type="number" [readonly]="isReadonly()" placeholder="" formControlName="voucher_no" class="form-control">\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Date</label>\n      <ion-item class="form-control">\n        <ion-datetime name="date" display-format="MM/YYYY" picker-format="YYYY-MM-DD" formControlName="date"></ion-datetime>\n      </ion-item>\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Truck No</label>\n      <select class="form-control drop-down" name="truck_no" formControlName="truck_no" >\n          <option value="">Select Truck No</option>\n          <option *ngFor="let tnl of truckNoList" [ngValue]="tnl">{{tnl}}</option>\n        </select>\n    </div>\n\n\n    <br /><hr />\n    \n    \n\n    <div formArrayName="accounts_data" class="transaction-name">            \n      <div *ngFor="let r of accountsData.controls; let i = index;">\n        <div [formGroupName]="i" class="width-full">\n          <div class="form-group">\n            <label class=" label">Account Name</label>\n            <input\n              class="form-control"\n              ng2-auto-complete\n              [source]="accountsName.bind(this)"\n              list-formatter="account_name"\n              formControlName="account_name"         \n            />\n          </div>\n          \n\n          <div class="form-group">\n            <label class=" label">Debit</label>\n            <input type="number" placeholder="" formControlName="account_debit" class="form-control" (change)="calculationDrCr()">\n          </div>\n      \n          <div class="form-group">\n            <label class=" label">Credit</label>\n            <input type="number" placeholder="" formControlName="account_credit" class="form-control" (change)="calculationDrCr()">\n          </div>\n        \n\n        <div class="add-minus-btns" padding>\n          <button class="btn-size" ion-button color="secondary" (click)="addTo()"><ion-icon name="add"></ion-icon></button>\n          <button class="btn-size" ion-button color="danger" (click)="removeTo(i)"><ion-icon name="close"></ion-icon></button>\n        </div>\n        </div>\n      </div>\n    </div>\n\n    <hr />\n\n    <div class="form-group">\n      <label class=" label">Naration</label>\n      <input type="text" placeholder="" formControlName="naration" class="form-control">\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Debit</label>\n      <input type="number" [readonly]="isReadonly()" placeholder="" formControlName="debit" class="form-control">\n    </div>\n\n    <div class="form-group">\n      <label class=" label">Credit</label>\n      <input type="number" [readonly]="isReadonly()" placeholder="" formControlName="credit" class="form-control">\n    </div>\n\n\n    <br>\n    <div class="width-full">\n    <button ion-button (click)="update()" type="submit" expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Update</button>\n</div>\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\accounts-transactions\edit-accounts-transactions\edit-accounts-transactions.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_8__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_7__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_6__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_5__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_4__providers_accounts__["a" /* Accounts */],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */]])
    ], EditAccountsTransactionsPage);
    return EditAccountsTransactionsPage;
}());

//# sourceMappingURL=edit-accounts-transactions.js.map

/***/ }),

/***/ 492:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditAccountsTransactionsPageModule", function() { return EditAccountsTransactionsPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_accounts_transactions__ = __webpack_require__(490);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var EditAccountsTransactionsPageModule = /** @class */ (function () {
    function EditAccountsTransactionsPageModule() {
    }
    EditAccountsTransactionsPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_accounts_transactions__["a" /* EditAccountsTransactionsPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_accounts_transactions__["a" /* EditAccountsTransactionsPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], EditAccountsTransactionsPageModule);
    return EditAccountsTransactionsPageModule;
}());

//# sourceMappingURL=edit-accounts-transactions.module.js.map

/***/ }),

/***/ 493:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAgenciesPageModule", function() { return AddAgenciesPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_agencies__ = __webpack_require__(980);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var AddAgenciesPageModule = /** @class */ (function () {
    function AddAgenciesPageModule() {
    }
    AddAgenciesPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_agencies__["a" /* AddAgenciesPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_agencies__["a" /* AddAgenciesPage */]),
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */],
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AddAgenciesPageModule);
    return AddAgenciesPageModule;
}());

//# sourceMappingURL=add-agencies.module.js.map

/***/ }),

/***/ 494:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficOperationPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the TrafficOperationsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var TrafficOperationPage = /** @class */ (function () {
    function TrafficOperationPage(navCtrl, navParams, requestLoad, actionSheetController, admin, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.categories = [
            'Vehicle Verification',
            'Bank Details / Loading Status',
            'Receivable Cash',
            'POD',
        ];
        this.activeTab = this.categories[0];
        this.deal = [];
        this.deals = [];
        this.quality = localStorage.quality === undefined;
        if (!this.quality) {
            this.categories = [];
            this.categories.push("Cash Bank");
            // this.activeTab = this.categories[0];
        }
    }
    TrafficOperationPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad TrafficOperationsPage editwala');
        // this.getDealFinalList();
        // this.deal = this.navParams.get('data');
    };
    TrafficOperationPage.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    TrafficOperationPage.prototype.setActiveTab = function (c) {
        this.activeTab = c;
    };
    TrafficOperationPage.prototype.getDealFinalList = function () {
        var _this = this;
        console.log("getting <<<");
        this.loader.show();
        this.requestLoad.getDealFinalNewListSorted().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            data.results.forEach(function (d) {
                d.deal_date = __WEBPACK_IMPORTED_MODULE_6_moment__(d.deal_date).format('DD/MM/YYYY');
            });
            // this.deals = data.results;
            _this.deal = data.results;
            console.log('Data >>>>>>>', _this.deal);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    TrafficOperationPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-traffic-operation',template:/*ion-inline-start:"D:\truck\src\pages\traffic-operation\traffic-operation.html"*/'<!--\n  Generated template for the TrafficOperationsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Traffic Operations</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()">\n          <ion-icon name="home"></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n\n    <!-- <ion-toolbar>\n      <ion-row class="filters">\n        <ion-col no-padding col-12>\n          <ion-slides slidesPerView="3.4">\n            <ion-slide *ngFor="let category of categories" (click)="selectedTab(category)" [class.selected]="activeTab === category">\n              <p>{{category}}</p>\n            </ion-slide>\n          </ion-slides>\n        </ion-col>\n      </ion-row>\n    </ion-toolbar> -->\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding >\n  <!-- TABS -->\n  <ion-row>\n    <ion-col>\n      <ul class="nav nav-tabs">\n        <li *ngFor="let c of categories" [ngClass]="{ active: activeTab == c }">\n          <a href="javascript:void(0)" (click)="setActiveTab(c)">{{ c }}</a>\n        </li>\n      </ul>\n    </ion-col>\n  </ion-row>\n\n  <!-- CONTENTS -->\n<!--   <ion-row *ngIf="activeTab === \'Deal Final\'">\n    <ion-col>\n        <traffic-ops-deals-tab [data]="deal"></traffic-ops-deals-tab>\n    </ion-col>\n  </ion-row>\n -->\n  <ion-row *ngIf="activeTab === \'Vehicle Verification\'">\n    <ion-col>\n        <traffic-ops-trucks-verification [data]="deal"></traffic-ops-trucks-verification>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Bank Details / Loading Status\'">\n    <ion-col>\n        <traffic-ops-bank-detail [data]="deal"></traffic-ops-bank-detail>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Receivable Cash\'">\n    <ion-col>\n        <traffic-ops-receivable-advance [data]="deal"></traffic-ops-receivable-advance>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'POD\'">\n    <ion-col>\n        <traffic-ops-pending-pod-t [data]="deal"></traffic-ops-pending-pod-t>\n    </ion-col>\n  </ion-row>\n<!-- \n  <ion-row *ngIf="activeTab === \'Commission\'">\n    <ion-col>\n        <traffic-ops-commission></traffic-ops-commission>\n    </ion-col>\n  </ion-row> -->\n  \n</ion-content>'/*ion-inline-end:"D:\truck\src\pages\traffic-operation\traffic-operation.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */]])
    ], TrafficOperationPage);
    return TrafficOperationPage;
}());

//# sourceMappingURL=traffic-operation.js.map

/***/ }),

/***/ 495:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficQualityEdit; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_moment__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the TrafficOperationsPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var TrafficQualityEdit = /** @class */ (function () {
    function TrafficQualityEdit(navCtrl, navParams, requestLoad, actionSheetController, admin, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.categories = [
            'Cash Bank',
        ];
        this.activeTab = this.categories[0];
        this.deal = [];
        this.deals = [];
    }
    TrafficQualityEdit.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad TrafficOperationsPage editwala');
        // this.getDealFinalList();
        // this.deal = this.navParams.get('data');
    };
    TrafficQualityEdit.prototype.home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
    };
    TrafficQualityEdit.prototype.setActiveTab = function (c) {
        this.activeTab = c;
    };
    TrafficQualityEdit.prototype.getDealFinalList = function () {
        var _this = this;
        console.log("getting <<<");
        this.loader.show();
        this.requestLoad.getDealFinalNewListSorted().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            data.results.forEach(function (d) {
                d.deal_date = __WEBPACK_IMPORTED_MODULE_6_moment__(d.deal_date).format('DD/MM/YYYY');
            });
            // this.deals = data.results;
            _this.deal = data.results;
            console.log('Data >>>>>>>', _this.deal);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    TrafficQualityEdit = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-quality-edit',template:/*ion-inline-start:"D:\truck\src\pages\traffic-quality-edit\traffic-quality-edit.html"*/'<!--\n  Generated template for the TrafficOperationsPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Traffic Quality Control</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="home()">\n          <ion-icon name="home"></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n\n    <!-- <ion-toolbar>\n      <ion-row class="filters">\n        <ion-col no-padding col-12>\n          <ion-slides slidesPerView="3.4">\n            <ion-slide *ngFor="let category of categories" (click)="selectedTab(category)" [class.selected]="activeTab === category">\n              <p>{{category}}</p>\n            </ion-slide>\n          </ion-slides>\n        </ion-col>\n      </ion-row>\n    </ion-toolbar> -->\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding >\n  <!-- TABS -->\n  <ion-row>\n    <ion-col>\n      <ul class="nav nav-tabs">\n        <li *ngFor="let c of categories" [ngClass]="{ active: activeTab == c }">\n          <a href="javascript:void(0)" (click)="setActiveTab(c)">{{ c }}</a>\n        </li>\n      </ul>\n    </ion-col>\n  </ion-row>\n\n  <!-- CONTENTS -->\n<!--   <ion-row *ngIf="activeTab === \'Deal Final\'">\n    <ion-col>\n        <traffic-ops-deals-tab [data]="deal"></traffic-ops-deals-tab>\n    </ion-col>\n  </ion-row>\n -->\n  <ion-row *ngIf="activeTab === \'Vehicle Verification\'">\n    <ion-col>\n        <traffic-ops-trucks-verification [data]="deal"></traffic-ops-trucks-verification>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Bank Details / Loading Status\'">\n    <ion-col>\n        <traffic-ops-bank-detail [data]="deal"></traffic-ops-bank-detail>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'Cash Bank\'">\n    <ion-col>\n        <traffic-ops-receivable-advance [data]="deal"></traffic-ops-receivable-advance>\n    </ion-col>\n  </ion-row>\n\n  <ion-row *ngIf="activeTab === \'POD\'">\n    <ion-col>\n        <traffic-ops-pending-pod-t [data]="deal"></traffic-ops-pending-pod-t>\n    </ion-col>\n  </ion-row>\n<!-- \n  <ion-row *ngIf="activeTab === \'Commission\'">\n    <ion-col>\n        <traffic-ops-commission></traffic-ops-commission>\n    </ion-col>\n  </ion-row> -->\n  \n</ion-content>'/*ion-inline-end:"D:\truck\src\pages\traffic-quality-edit\traffic-quality-edit.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */]])
    ], TrafficQualityEdit);
    return TrafficQualityEdit;
}());

//# sourceMappingURL=traffic-quality-edit.js.map

/***/ }),

/***/ 496:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddCompanyPageModule", function() { return AddCompanyPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_company__ = __webpack_require__(997);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var AddCompanyPageModule = /** @class */ (function () {
    function AddCompanyPageModule() {
    }
    AddCompanyPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_company__["a" /* AddCompanyPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_company__["a" /* AddCompanyPage */]),
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */],
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AddCompanyPageModule);
    return AddCompanyPageModule;
}());

//# sourceMappingURL=add-company.module.js.map

/***/ }),

/***/ 497:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddDriverPageModule", function() { return AddDriverPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_driver__ = __webpack_require__(998);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var AddDriverPageModule = /** @class */ (function () {
    function AddDriverPageModule() {
    }
    AddDriverPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_driver__["a" /* AddDriverPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_driver__["a" /* AddDriverPage */]),
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"],
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AddDriverPageModule);
    return AddDriverPageModule;
}());

//# sourceMappingURL=add-driver.module.js.map

/***/ }),

/***/ 498:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddEmployeePageModule", function() { return AddEmployeePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_employee__ = __webpack_require__(999);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_components_module__ = __webpack_require__(38);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var AddEmployeePageModule = /** @class */ (function () {
    function AddEmployeePageModule() {
    }
    AddEmployeePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_employee__["a" /* AddEmployeePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_employee__["a" /* AddEmployeePage */]),
                __WEBPACK_IMPORTED_MODULE_4__components_components_module__["a" /* ComponentsModule */],
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AddEmployeePageModule);
    return AddEmployeePageModule;
}());

//# sourceMappingURL=add-employee.module.js.map

/***/ }),

/***/ 499:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddTransporterPageModule", function() { return AddTransporterPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_transporter__ = __webpack_require__(1000);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var AddTransporterPageModule = /** @class */ (function () {
    function AddTransporterPageModule() {
    }
    AddTransporterPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_transporter__["a" /* AddTransporterPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_transporter__["a" /* AddTransporterPage */]),
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */],
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AddTransporterPageModule);
    return AddTransporterPageModule;
}());

//# sourceMappingURL=add-transporter.module.js.map

/***/ }),

/***/ 500:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Transporter; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__api__ = __webpack_require__(56);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

// import { Http } from '@angular/http';

var Transporter = /** @class */ (function () {
    function Transporter(
        // public http: Http, 
        api) {
        this.api = api;
    }
    Transporter.prototype.addTransporterDetails = function (data) {
        console.log(" Data >>>>>>>>>>>", data);
        return this.api.post('transport_details/add', data);
    };
    Transporter.prototype.getTransporterDetails = function (data) {
        return this.api.get('transport_details/get_by_srno?srno=' + data);
    };
    Transporter = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__api__["a" /* Api */]])
    ], Transporter);
    return Transporter;
}());

//# sourceMappingURL=transporter.js.map

/***/ }),

/***/ 501:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddUserPageModule", function() { return AddUserPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_user__ = __webpack_require__(1001);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var AddUserPageModule = /** @class */ (function () {
    function AddUserPageModule() {
    }
    AddUserPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_user__["a" /* AddUserPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_user__["a" /* AddUserPage */]),
            ],
        })
    ], AddUserPageModule);
    return AddUserPageModule;
}());

//# sourceMappingURL=add-user.module.js.map

/***/ }),

/***/ 502:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminPrivilegesAddTruckPageModule", function() { return AdminPrivilegesAddTruckPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__admin_privileges_add_truck__ = __webpack_require__(1002);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var AdminPrivilegesAddTruckPageModule = /** @class */ (function () {
    function AdminPrivilegesAddTruckPageModule() {
    }
    AdminPrivilegesAddTruckPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__admin_privileges_add_truck__["a" /* AdminPrivilegesAddTruckPage */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__admin_privileges_add_truck__["a" /* AdminPrivilegesAddTruckPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AdminPrivilegesAddTruckPageModule);
    return AdminPrivilegesAddTruckPageModule;
}());

//# sourceMappingURL=admin-privileges-add-truck.module.js.map

/***/ }),

/***/ 503:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminPrivilegesPageModule", function() { return AdminPrivilegesPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__admin_privileges__ = __webpack_require__(1003);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__admin_privileges_add_truck_admin_privileges_add_truck_module__ = __webpack_require__(502);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__add_transporter_add_transporter_module__ = __webpack_require__(499);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__add_company_add_company_module__ = __webpack_require__(496);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__add_driver_add_driver_module__ = __webpack_require__(497);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__request_load_request_load_module__ = __webpack_require__(504);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__add_agencies_add_agencies_module__ = __webpack_require__(493);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__add_user_add_user_module__ = __webpack_require__(501);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};










var AdminPrivilegesPageModule = /** @class */ (function () {
    function AdminPrivilegesPageModule() {
    }
    AdminPrivilegesPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__admin_privileges__["a" /* AdminPrivilegesPage */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__admin_privileges__["a" /* AdminPrivilegesPage */]),
                __WEBPACK_IMPORTED_MODULE_3__admin_privileges_add_truck_admin_privileges_add_truck_module__["AdminPrivilegesAddTruckPageModule"],
                __WEBPACK_IMPORTED_MODULE_4__add_transporter_add_transporter_module__["AddTransporterPageModule"],
                __WEBPACK_IMPORTED_MODULE_5__add_company_add_company_module__["AddCompanyPageModule"],
                __WEBPACK_IMPORTED_MODULE_6__add_driver_add_driver_module__["AddDriverPageModule"],
                __WEBPACK_IMPORTED_MODULE_7__request_load_request_load_module__["RequestLoadPageModule"],
                __WEBPACK_IMPORTED_MODULE_8__add_agencies_add_agencies_module__["AddAgenciesPageModule"],
                __WEBPACK_IMPORTED_MODULE_9__add_user_add_user_module__["AddUserPageModule"]
            ],
        })
    ], AdminPrivilegesPageModule);
    return AdminPrivilegesPageModule;
}());

//# sourceMappingURL=admin-privileges.module.js.map

/***/ }),

/***/ 504:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RequestLoadPageModule", function() { return RequestLoadPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__request_load__ = __webpack_require__(1004);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var RequestLoadPageModule = /** @class */ (function () {
    function RequestLoadPageModule() {
    }
    RequestLoadPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__request_load__["a" /* RequestLoadPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__request_load__["a" /* RequestLoadPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], RequestLoadPageModule);
    return RequestLoadPageModule;
}());

//# sourceMappingURL=request-load.module.js.map

/***/ }),

/***/ 505:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAccountCategoryPageModule", function() { return AddAccountCategoryPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_account_category__ = __webpack_require__(473);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var AddAccountCategoryPageModule = /** @class */ (function () {
    function AddAccountCategoryPageModule() {
    }
    AddAccountCategoryPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_account_category__["a" /* AddAccountCategoryPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_account_category__["a" /* AddAccountCategoryPage */]),
            ],
        })
    ], AddAccountCategoryPageModule);
    return AddAccountCategoryPageModule;
}());

//# sourceMappingURL=add-account-category.module.js.map

/***/ }),

/***/ 506:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditAccountCategoryPageModule", function() { return EditAccountCategoryPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_account_category__ = __webpack_require__(474);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var EditAccountCategoryPageModule = /** @class */ (function () {
    function EditAccountCategoryPageModule() {
    }
    EditAccountCategoryPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_account_category__["a" /* EditAccountCategoryPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_account_category__["a" /* EditAccountCategoryPage */]),
            ],
        })
    ], EditAccountCategoryPageModule);
    return EditAccountCategoryPageModule;
}());

//# sourceMappingURL=edit-account-category.module.js.map

/***/ }),

/***/ 507:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageAccountCategoriesPageModule", function() { return ManageAccountCategoriesPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_account_categories__ = __webpack_require__(472);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_account_category_add_account_category_module__ = __webpack_require__(505);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__edit_account_category_edit_account_category_module__ = __webpack_require__(506);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManageAccountCategoriesPageModule = /** @class */ (function () {
    function ManageAccountCategoriesPageModule() {
    }
    ManageAccountCategoriesPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_account_categories__["a" /* ManageAccountCategoriesPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_account_categories__["a" /* ManageAccountCategoriesPage */]),
                __WEBPACK_IMPORTED_MODULE_3__add_account_category_add_account_category_module__["AddAccountCategoryPageModule"],
                __WEBPACK_IMPORTED_MODULE_4__edit_account_category_edit_account_category_module__["EditAccountCategoryPageModule"]
            ],
        })
    ], ManageAccountCategoriesPageModule);
    return ManageAccountCategoriesPageModule;
}());

//# sourceMappingURL=manage-account-categories.module.js.map

/***/ }),

/***/ 508:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAccountTypePageModule", function() { return AddAccountTypePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_account_type__ = __webpack_require__(470);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var AddAccountTypePageModule = /** @class */ (function () {
    function AddAccountTypePageModule() {
    }
    AddAccountTypePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_account_type__["a" /* AddAccountTypePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_account_type__["a" /* AddAccountTypePage */]),
            ],
        })
    ], AddAccountTypePageModule);
    return AddAccountTypePageModule;
}());

//# sourceMappingURL=add-account-type.module.js.map

/***/ }),

/***/ 509:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditAccountTypePageModule", function() { return EditAccountTypePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_account_type__ = __webpack_require__(471);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var EditAccountTypePageModule = /** @class */ (function () {
    function EditAccountTypePageModule() {
    }
    EditAccountTypePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_account_type__["a" /* EditAccountTypePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_account_type__["a" /* EditAccountTypePage */]),
            ],
        })
    ], EditAccountTypePageModule);
    return EditAccountTypePageModule;
}());

//# sourceMappingURL=edit-account-type.module.js.map

/***/ }),

/***/ 510:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageAccountTypesPageModule", function() { return ManageAccountTypesPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_account_types__ = __webpack_require__(469);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_account_type_add_account_type_module__ = __webpack_require__(508);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__edit_account_type_edit_account_type_module__ = __webpack_require__(509);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManageAccountTypesPageModule = /** @class */ (function () {
    function ManageAccountTypesPageModule() {
    }
    ManageAccountTypesPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_account_types__["a" /* ManageAccountTypesPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_account_types__["a" /* ManageAccountTypesPage */]),
                __WEBPACK_IMPORTED_MODULE_3__add_account_type_add_account_type_module__["AddAccountTypePageModule"],
                __WEBPACK_IMPORTED_MODULE_4__edit_account_type_edit_account_type_module__["EditAccountTypePageModule"]
            ],
        })
    ], ManageAccountTypesPageModule);
    return ManageAccountTypesPageModule;
}());

//# sourceMappingURL=manage-account-types.module.js.map

/***/ }),

/***/ 511:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddCancelReasonsPageModule", function() { return AddCancelReasonsPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_cancel_reasons__ = __webpack_require__(467);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var AddCancelReasonsPageModule = /** @class */ (function () {
    function AddCancelReasonsPageModule() {
    }
    AddCancelReasonsPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_cancel_reasons__["a" /* AddCancelReasonsPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_cancel_reasons__["a" /* AddCancelReasonsPage */]),
            ],
        })
    ], AddCancelReasonsPageModule);
    return AddCancelReasonsPageModule;
}());

//# sourceMappingURL=add-cancel-reasons.module.js.map

/***/ }),

/***/ 512:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditCancelReasonsPageModule", function() { return EditCancelReasonsPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_cancel_reasons__ = __webpack_require__(468);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var EditCancelReasonsPageModule = /** @class */ (function () {
    function EditCancelReasonsPageModule() {
    }
    EditCancelReasonsPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_cancel_reasons__["a" /* EditCancelReasonsPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_cancel_reasons__["a" /* EditCancelReasonsPage */]),
            ],
        })
    ], EditCancelReasonsPageModule);
    return EditCancelReasonsPageModule;
}());

//# sourceMappingURL=edit-cancel-reasons.module.js.map

/***/ }),

/***/ 513:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageCancelReasonsPageModule", function() { return ManageCancelReasonsPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_cancel_reasons__ = __webpack_require__(466);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__edit_cancel_reasons_edit_cancel_reasons_module__ = __webpack_require__(512);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__add_cancel_reasons_add_cancel_reasons_module__ = __webpack_require__(511);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManageCancelReasonsPageModule = /** @class */ (function () {
    function ManageCancelReasonsPageModule() {
    }
    ManageCancelReasonsPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_cancel_reasons__["a" /* ManageCancelReasonsPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_cancel_reasons__["a" /* ManageCancelReasonsPage */]),
                __WEBPACK_IMPORTED_MODULE_4__add_cancel_reasons_add_cancel_reasons_module__["AddCancelReasonsPageModule"],
                __WEBPACK_IMPORTED_MODULE_3__edit_cancel_reasons_edit_cancel_reasons_module__["EditCancelReasonsPageModule"]
            ],
        })
    ], ManageCancelReasonsPageModule);
    return ManageCancelReasonsPageModule;
}());

//# sourceMappingURL=manage-cancel-reasons.module.js.map

/***/ }),

/***/ 514:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddPaymentModePageModule", function() { return AddPaymentModePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_payment_mode__ = __webpack_require__(464);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var AddPaymentModePageModule = /** @class */ (function () {
    function AddPaymentModePageModule() {
    }
    AddPaymentModePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_payment_mode__["a" /* AddPaymentModePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_payment_mode__["a" /* AddPaymentModePage */]),
            ],
        })
    ], AddPaymentModePageModule);
    return AddPaymentModePageModule;
}());

//# sourceMappingURL=add-payment-mode.module.js.map

/***/ }),

/***/ 515:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditPaymentModePageModule", function() { return EditPaymentModePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_payment_mode__ = __webpack_require__(465);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var EditPaymentModePageModule = /** @class */ (function () {
    function EditPaymentModePageModule() {
    }
    EditPaymentModePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_payment_mode__["a" /* EditPaymentModePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_payment_mode__["a" /* EditPaymentModePage */]),
            ],
        })
    ], EditPaymentModePageModule);
    return EditPaymentModePageModule;
}());

//# sourceMappingURL=edit-payment-mode.module.js.map

/***/ }),

/***/ 516:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManagePaymentModePageModule", function() { return ManagePaymentModePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_payment_mode__ = __webpack_require__(463);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_payment_mode_add_payment_mode_module__ = __webpack_require__(514);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__edit_payment_mode_edit_payment_mode_module__ = __webpack_require__(515);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManagePaymentModePageModule = /** @class */ (function () {
    function ManagePaymentModePageModule() {
    }
    ManagePaymentModePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_payment_mode__["a" /* ManagePaymentModePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_payment_mode__["a" /* ManagePaymentModePage */]),
                __WEBPACK_IMPORTED_MODULE_3__add_payment_mode_add_payment_mode_module__["AddPaymentModePageModule"],
                __WEBPACK_IMPORTED_MODULE_4__edit_payment_mode_edit_payment_mode_module__["EditPaymentModePageModule"]
            ],
        })
    ], ManagePaymentModePageModule);
    return ManagePaymentModePageModule;
}());

//# sourceMappingURL=manage-payment-mode.module.js.map

/***/ }),

/***/ 517:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddPaymentTypePageModule", function() { return AddPaymentTypePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_payment_type__ = __webpack_require__(461);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var AddPaymentTypePageModule = /** @class */ (function () {
    function AddPaymentTypePageModule() {
    }
    AddPaymentTypePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_payment_type__["a" /* AddPaymentTypePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_payment_type__["a" /* AddPaymentTypePage */]),
            ],
        })
    ], AddPaymentTypePageModule);
    return AddPaymentTypePageModule;
}());

//# sourceMappingURL=add-payment-type.module.js.map

/***/ }),

/***/ 518:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditPaymentTypePageModule", function() { return EditPaymentTypePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_payment_type__ = __webpack_require__(462);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var EditPaymentTypePageModule = /** @class */ (function () {
    function EditPaymentTypePageModule() {
    }
    EditPaymentTypePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_payment_type__["a" /* EditPaymentTypePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_payment_type__["a" /* EditPaymentTypePage */]),
            ],
        })
    ], EditPaymentTypePageModule);
    return EditPaymentTypePageModule;
}());

//# sourceMappingURL=edit-payment-type.module.js.map

/***/ }),

/***/ 519:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManagePaymentTypePageModule", function() { return ManagePaymentTypePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_payment_type__ = __webpack_require__(460);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_payment_type_add_payment_type_module__ = __webpack_require__(517);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__edit_payment_type_edit_payment_type_module__ = __webpack_require__(518);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManagePaymentTypePageModule = /** @class */ (function () {
    function ManagePaymentTypePageModule() {
    }
    ManagePaymentTypePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_payment_type__["a" /* ManagePaymentTypePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_payment_type__["a" /* ManagePaymentTypePage */]),
                __WEBPACK_IMPORTED_MODULE_3__add_payment_type_add_payment_type_module__["AddPaymentTypePageModule"],
                __WEBPACK_IMPORTED_MODULE_4__edit_payment_type_edit_payment_type_module__["EditPaymentTypePageModule"]
            ],
        })
    ], ManagePaymentTypePageModule);
    return ManagePaymentTypePageModule;
}());

//# sourceMappingURL=manage-payment-type.module.js.map

/***/ }),

/***/ 520:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageRewardsPageModule", function() { return ManageRewardsPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_rewards__ = __webpack_require__(480);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var ManageRewardsPageModule = /** @class */ (function () {
    function ManageRewardsPageModule() {
    }
    ManageRewardsPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_rewards__["a" /* ManageRewardsPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_rewards__["a" /* ManageRewardsPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
        })
    ], ManageRewardsPageModule);
    return ManageRewardsPageModule;
}());

//# sourceMappingURL=manage-rewards.module.js.map

/***/ }),

/***/ 521:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditRewardsRedemptionPageModule", function() { return EditRewardsRedemptionPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_rewards_redemption__ = __webpack_require__(481);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var EditRewardsRedemptionPageModule = /** @class */ (function () {
    function EditRewardsRedemptionPageModule() {
    }
    EditRewardsRedemptionPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_rewards_redemption__["a" /* EditRewardsRedemptionPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_rewards_redemption__["a" /* EditRewardsRedemptionPage */]),
            ],
        })
    ], EditRewardsRedemptionPageModule);
    return EditRewardsRedemptionPageModule;
}());

//# sourceMappingURL=edit-rewards-redemption.module.js.map

/***/ }),

/***/ 522:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageRewardsRedemptionPageModule", function() { return ManageRewardsRedemptionPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_rewards_redemption__ = __webpack_require__(112);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var ManageRewardsRedemptionPageModule = /** @class */ (function () {
    function ManageRewardsRedemptionPageModule() {
    }
    ManageRewardsRedemptionPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_rewards_redemption__["a" /* ManageRewardsRedemptionPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_rewards_redemption__["a" /* ManageRewardsRedemptionPage */]),
            ],
        })
    ], ManageRewardsRedemptionPageModule);
    return ManageRewardsRedemptionPageModule;
}());

//# sourceMappingURL=manage-rewards-redemption.module.js.map

/***/ }),

/***/ 523:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddDocumentsMasterPageModule", function() { return AddDocumentsMasterPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_documents_master__ = __webpack_require__(487);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var AddDocumentsMasterPageModule = /** @class */ (function () {
    function AddDocumentsMasterPageModule() {
    }
    AddDocumentsMasterPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_documents_master__["a" /* AddDocumentsMasterPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_documents_master__["a" /* AddDocumentsMasterPage */]),
            ],
        })
    ], AddDocumentsMasterPageModule);
    return AddDocumentsMasterPageModule;
}());

//# sourceMappingURL=add-documents-master.module.js.map

/***/ }),

/***/ 524:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AttachDocumentsPageModule", function() { return AttachDocumentsPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__attach_documents__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_documents_master_add_documents_master_module__ = __webpack_require__(523);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__edit_attach_documents_edit_attach_documents_module__ = __webpack_require__(525);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var AttachDocumentsPageModule = /** @class */ (function () {
    function AttachDocumentsPageModule() {
    }
    AttachDocumentsPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__attach_documents__["a" /* AttachDocumentsPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__attach_documents__["a" /* AttachDocumentsPage */]),
                __WEBPACK_IMPORTED_MODULE_3__add_documents_master_add_documents_master_module__["AddDocumentsMasterPageModule"],
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"],
                __WEBPACK_IMPORTED_MODULE_5__edit_attach_documents_edit_attach_documents_module__["EditAttachDocumentsPageModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AttachDocumentsPageModule);
    return AttachDocumentsPageModule;
}());

//# sourceMappingURL=attach-documents.module.js.map

/***/ }),

/***/ 525:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditAttachDocumentsPageModule", function() { return EditAttachDocumentsPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_attach_documents__ = __webpack_require__(488);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var EditAttachDocumentsPageModule = /** @class */ (function () {
    function EditAttachDocumentsPageModule() {
    }
    EditAttachDocumentsPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_attach_documents__["a" /* EditAttachDocumentsPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_attach_documents__["a" /* EditAttachDocumentsPage */]),
            ],
        })
    ], EditAttachDocumentsPageModule);
    return EditAttachDocumentsPageModule;
}());

//# sourceMappingURL=edit-attach-documents.module.js.map

/***/ }),

/***/ 526:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthLoginPageModule", function() { return AuthLoginPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__auth_login__ = __webpack_require__(527);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var AuthLoginPageModule = /** @class */ (function () {
    function AuthLoginPageModule() {
    }
    AuthLoginPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__auth_login__["a" /* AuthLoginPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__auth_login__["a" /* AuthLoginPage */]),
            ],
        })
    ], AuthLoginPageModule);
    return AuthLoginPageModule;
}());

//# sourceMappingURL=auth-login.module.js.map

/***/ }),

/***/ 527:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AuthLoginPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader__ = __webpack_require__(6);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the AuthLoginPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AuthLoginPage = /** @class */ (function () {
    function AuthLoginPage(navCtrl, navParams, fb, loader, toast, admin) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.fb = fb;
        this.loader = loader;
        this.toast = toast;
        this.admin = admin;
        this.loginForm = this.fb.group({
            user_name: [''],
            password: [''],
        });
    }
    AuthLoginPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AuthLoginPage');
    };
    AuthLoginPage.prototype.login = function () {
        var _this = this;
        var getFormData = this.loginForm.value;
        console.log("getFormData >>>>", getFormData);
        this.loader.show();
        this.admin.loginUser(getFormData).subscribe(function (res) {
            var data = res.json();
            console.log("data >>>>", data);
            _this.loader.hide();
            if (data.result) {
                // this.toast.show({ 'message': 'Done' });
                localStorage.setItem('login', 'true');
                localStorage.setItem('agency_name', data.result.agencies[0].name);
                localStorage.setItem('user_name', data.result.user_name);
                localStorage.setItem('user_id', data.result._id);
                _this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_2__home_home__["a" /* HomePage */]);
            }
            else {
                _this.toast.show({ 'message': 'Invalid User Name/Password....!' });
            }
        }, function (err) {
            console.log("err >>>", err);
        });
    };
    AuthLoginPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-auth-login',template:/*ion-inline-start:"D:\truck\src\pages\auth-login\auth-login.html"*/'<!--\n  Generated template for the AuthLoginPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n\n<ion-content color="primary" padding>\n  <form [formGroup]="loginForm">\n    <ion-grid>\n      <ion-row color="primary" justify-content-center>\n        <ion-col align-self-center size-md="6" size-lg="5" size-xs="12">\n          <div text-center>\n            <h3>Login</h3>\n          </div>\n          <div padding>\n            <div class="form-group">\n              <ion-item>\n                <ion-input name="text" type="text" formControlName="user_name" class="placeholder-text" placeholder="User Name" ngModel required></ion-input>\n              </ion-item>\n            </div>\n            <div class="form-group">\n              <ion-item>\n                <ion-input name="password" formControlName="password" type="password" class="placeholder-text" placeholder="Password" ngModel required></ion-input>\n              </ion-item>\n            </div>\n          </div>\n          <div padding>\n            <!-- <button ion-button size="large" type="submit" [disabled]="form.invalid" expand="block">Login</button> -->\n            <button ion-button block size="large" type="button" (click)="login()" expand="block">Login</button>\n          </div>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </form>\n</ion-content>'/*ion-inline-end:"D:\truck\src\pages\auth-login\auth-login.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_6__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */]])
    ], AuthLoginPage);
    return AuthLoginPage;
}());

//# sourceMappingURL=auth-login.js.map

/***/ }),

/***/ 528:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CallBookingRequestLoadPageModule", function() { return CallBookingRequestLoadPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__call_booking_request_load__ = __webpack_require__(1005);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var CallBookingRequestLoadPageModule = /** @class */ (function () {
    function CallBookingRequestLoadPageModule() {
    }
    CallBookingRequestLoadPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__call_booking_request_load__["a" /* CallBookingRequestLoadPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__call_booking_request_load__["a" /* CallBookingRequestLoadPage */]),
            ],
        })
    ], CallBookingRequestLoadPageModule);
    return CallBookingRequestLoadPageModule;
}());

//# sourceMappingURL=call-booking-request-load.module.js.map

/***/ }),

/***/ 529:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DealFinalDashboardPageModule", function() { return DealFinalDashboardPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__deal_final_dashboard__ = __webpack_require__(1006);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var DealFinalDashboardPageModule = /** @class */ (function () {
    function DealFinalDashboardPageModule() {
    }
    DealFinalDashboardPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__deal_final_dashboard__["a" /* DealFinalDashboardPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__deal_final_dashboard__["a" /* DealFinalDashboardPage */]),
            ],
        })
    ], DealFinalDashboardPageModule);
    return DealFinalDashboardPageModule;
}());

//# sourceMappingURL=deal-final-dashboard.module.js.map

/***/ }),

/***/ 530:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditEmployeePageModule", function() { return EditEmployeePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_employee__ = __webpack_require__(459);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var EditEmployeePageModule = /** @class */ (function () {
    function EditEmployeePageModule() {
    }
    EditEmployeePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_employee__["a" /* EditEmployeePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_employee__["a" /* EditEmployeePage */]),
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */],
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], EditEmployeePageModule);
    return EditEmployeePageModule;
}());

//# sourceMappingURL=edit-employee.module.js.map

/***/ }),

/***/ 531:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditRequestLoadPageModule", function() { return EditRequestLoadPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_request_load__ = __webpack_require__(448);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(7);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var EditRequestLoadPageModule = /** @class */ (function () {
    function EditRequestLoadPageModule() {
    }
    EditRequestLoadPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_request_load__["a" /* EditRequestLoadPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_request_load__["a" /* EditRequestLoadPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"],
                __WEBPACK_IMPORTED_MODULE_4__angular_forms__["ReactiveFormsModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], EditRequestLoadPageModule);
    return EditRequestLoadPageModule;
}());

//# sourceMappingURL=edit-request-load.module.js.map

/***/ }),

/***/ 532:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditUserPageModule", function() { return EditUserPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_user__ = __webpack_require__(458);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var EditUserPageModule = /** @class */ (function () {
    function EditUserPageModule() {
    }
    EditUserPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_user__["a" /* EditUserPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_user__["a" /* EditUserPage */]),
            ],
        })
    ], EditUserPageModule);
    return EditUserPageModule;
}());

//# sourceMappingURL=edit-user.module.js.map

/***/ }),

/***/ 533:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadsAvailabilityPageModule", function() { return LoadsAvailabilityPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__loads_availability__ = __webpack_require__(194);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var LoadsAvailabilityPageModule = /** @class */ (function () {
    function LoadsAvailabilityPageModule() {
    }
    LoadsAvailabilityPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__loads_availability__["a" /* LoadsAvailabilityPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__loads_availability__["a" /* LoadsAvailabilityPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], LoadsAvailabilityPageModule);
    return LoadsAvailabilityPageModule;
}());

//# sourceMappingURL=loads-availability.module.js.map

/***/ }),

/***/ 534:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageAccountsLedgerPageModule", function() { return ManageAccountsLedgerPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_accounts_ledger__ = __webpack_require__(477);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var ManageAccountsLedgerPageModule = /** @class */ (function () {
    function ManageAccountsLedgerPageModule() {
    }
    ManageAccountsLedgerPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_accounts_ledger__["a" /* ManageAccountsLedgerPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_accounts_ledger__["a" /* ManageAccountsLedgerPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], ManageAccountsLedgerPageModule);
    return ManageAccountsLedgerPageModule;
}());

//# sourceMappingURL=manage-accounts-ledger.module.js.map

/***/ }),

/***/ 535:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddAccountMasterPageModule", function() { return AddAccountMasterPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_account_master__ = __webpack_require__(475);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var AddAccountMasterPageModule = /** @class */ (function () {
    function AddAccountMasterPageModule() {
    }
    AddAccountMasterPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_account_master__["a" /* AddAccountMasterPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_account_master__["a" /* AddAccountMasterPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AddAccountMasterPageModule);
    return AddAccountMasterPageModule;
}());

//# sourceMappingURL=add-account-master.module.js.map

/***/ }),

/***/ 536:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditAccountMasterPageModule", function() { return EditAccountMasterPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_account_master__ = __webpack_require__(476);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var EditAccountMasterPageModule = /** @class */ (function () {
    function EditAccountMasterPageModule() {
    }
    EditAccountMasterPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_account_master__["a" /* EditAccountMasterPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_account_master__["a" /* EditAccountMasterPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], EditAccountMasterPageModule);
    return EditAccountMasterPageModule;
}());

//# sourceMappingURL=edit-account-master.module.js.map

/***/ }),

/***/ 537:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageAccountsMasterPageModule", function() { return ManageAccountsMasterPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_accounts_master__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_account_master_add_account_master_module__ = __webpack_require__(535);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__edit_account_master_edit_account_master_module__ = __webpack_require__(536);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManageAccountsMasterPageModule = /** @class */ (function () {
    function ManageAccountsMasterPageModule() {
    }
    ManageAccountsMasterPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_accounts_master__["a" /* ManageAccountsMasterPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_accounts_master__["a" /* ManageAccountsMasterPage */]),
                __WEBPACK_IMPORTED_MODULE_3__add_account_master_add_account_master_module__["AddAccountMasterPageModule"],
                __WEBPACK_IMPORTED_MODULE_4__edit_account_master_edit_account_master_module__["EditAccountMasterPageModule"]
            ],
        })
    ], ManageAccountsMasterPageModule);
    return ManageAccountsMasterPageModule;
}());

//# sourceMappingURL=manage-accounts-master.module.js.map

/***/ }),

/***/ 538:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditAdvanceAmountPageModule", function() { return EditAdvanceAmountPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_advance_amount__ = __webpack_require__(485);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var EditAdvanceAmountPageModule = /** @class */ (function () {
    function EditAdvanceAmountPageModule() {
    }
    EditAdvanceAmountPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_advance_amount__["a" /* EditAdvanceAmountPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_advance_amount__["a" /* EditAdvanceAmountPage */]),
            ],
        })
    ], EditAdvanceAmountPageModule);
    return EditAdvanceAmountPageModule;
}());

//# sourceMappingURL=edit-advance-amount.module.js.map

/***/ }),

/***/ 539:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageAdvanceAmountPageModule", function() { return ManageAdvanceAmountPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_advance_amount__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_advance_amount_add_advance_amount_module__ = __webpack_require__(200);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var ManageAdvanceAmountPageModule = /** @class */ (function () {
    function ManageAdvanceAmountPageModule() {
    }
    ManageAdvanceAmountPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_advance_amount__["a" /* ManageAdvanceAmountPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_advance_amount__["a" /* ManageAdvanceAmountPage */]),
                __WEBPACK_IMPORTED_MODULE_3__add_advance_amount_add_advance_amount_module__["AddAdvanceAmountPageModule"]
            ],
        })
    ], ManageAdvanceAmountPageModule);
    return ManageAdvanceAmountPageModule;
}());

//# sourceMappingURL=manage-advance-amount.module.js.map

/***/ }),

/***/ 540:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageAgenciesPageModule", function() { return ManageAgenciesPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_agencies__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManageAgenciesPageModule = /** @class */ (function () {
    function ManageAgenciesPageModule() {
    }
    ManageAgenciesPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_agencies__["a" /* ManageAgenciesPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_agencies__["a" /* ManageAgenciesPage */]),
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */],
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], ManageAgenciesPageModule);
    return ManageAgenciesPageModule;
}());

//# sourceMappingURL=manage-agencies.module.js.map

/***/ }),

/***/ 541:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageCompanyListPageModule", function() { return ManageCompanyListPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_company_list__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManageCompanyListPageModule = /** @class */ (function () {
    function ManageCompanyListPageModule() {
    }
    ManageCompanyListPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_company_list__["a" /* ManageCompanyListPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_company_list__["a" /* ManageCompanyListPage */]),
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */],
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            entryComponents: [],
            exports: [
                __WEBPACK_IMPORTED_MODULE_4_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], ManageCompanyListPageModule);
    return ManageCompanyListPageModule;
}());

//# sourceMappingURL=manage-company-list.module.js.map

/***/ }),

/***/ 542:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditDealFinalNewPageModule", function() { return EditDealFinalNewPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_deal_final_new__ = __webpack_require__(456);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var EditDealFinalNewPageModule = /** @class */ (function () {
    function EditDealFinalNewPageModule() {
    }
    EditDealFinalNewPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_deal_final_new__["a" /* EditDealFinalNewPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_deal_final_new__["a" /* EditDealFinalNewPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], EditDealFinalNewPageModule);
    return EditDealFinalNewPageModule;
}());

//# sourceMappingURL=edit-deal-final-new.module.js.map

/***/ }),

/***/ 543:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageDealFinalNewPageModule", function() { return ManageDealFinalNewPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_deal_final_new__ = __webpack_require__(109);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_deal_final_new_add_deal_final_new_module__ = __webpack_require__(201);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__edit_deal_final_new_edit_deal_final_new_module__ = __webpack_require__(542);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManageDealFinalNewPageModule = /** @class */ (function () {
    function ManageDealFinalNewPageModule() {
    }
    ManageDealFinalNewPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_deal_final_new__["a" /* ManageDealFinalNewPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_deal_final_new__["a" /* ManageDealFinalNewPage */]),
                __WEBPACK_IMPORTED_MODULE_3__add_deal_final_new_add_deal_final_new_module__["AddDealFinalNewPageModule"],
                __WEBPACK_IMPORTED_MODULE_4__edit_deal_final_new_edit_deal_final_new_module__["EditDealFinalNewPageModule"]
            ],
        })
    ], ManageDealFinalNewPageModule);
    return ManageDealFinalNewPageModule;
}());

//# sourceMappingURL=manage-deal-final-new.module.js.map

/***/ }),

/***/ 544:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageDealFinalPageModule", function() { return ManageDealFinalPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_deal_final__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__deal_final_deal_final_module__ = __webpack_require__(202);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__edit_deal_final_edit_deal_final_module__ = __webpack_require__(203);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManageDealFinalPageModule = /** @class */ (function () {
    function ManageDealFinalPageModule() {
    }
    ManageDealFinalPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_deal_final__["a" /* ManageDealFinalPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_deal_final__["a" /* ManageDealFinalPage */]),
                __WEBPACK_IMPORTED_MODULE_3__deal_final_deal_final_module__["DealFinalPageModule"],
                __WEBPACK_IMPORTED_MODULE_4__edit_deal_final_edit_deal_final_module__["EditDealFinalPageModule"]
            ],
        })
    ], ManageDealFinalPageModule);
    return ManageDealFinalPageModule;
}());

//# sourceMappingURL=manage-deal-final.module.js.map

/***/ }),

/***/ 545:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageDriverPageModule", function() { return ManageDriverPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_driver__ = __webpack_require__(184);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var ManageDriverPageModule = /** @class */ (function () {
    function ManageDriverPageModule() {
    }
    ManageDriverPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_driver__["a" /* ManageDriverPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_driver__["a" /* ManageDriverPage */]),
            ],
        })
    ], ManageDriverPageModule);
    return ManageDriverPageModule;
}());

//# sourceMappingURL=manage-driver.module.js.map

/***/ }),

/***/ 546:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageEmployeesPageModule", function() { return ManageEmployeesPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_employees__ = __webpack_require__(197);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var ManageEmployeesPageModule = /** @class */ (function () {
    function ManageEmployeesPageModule() {
    }
    ManageEmployeesPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_employees__["a" /* ManageEmployeesPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_employees__["a" /* ManageEmployeesPage */]),
            ],
        })
    ], ManageEmployeesPageModule);
    return ManageEmployeesPageModule;
}());

//# sourceMappingURL=manage-employees.module.js.map

/***/ }),

/***/ 547:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddPodPageModule", function() { return AddPodPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_pod__ = __webpack_require__(483);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var AddPodPageModule = /** @class */ (function () {
    function AddPodPageModule() {
    }
    AddPodPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_pod__["a" /* AddPodPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_pod__["a" /* AddPodPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AddPodPageModule);
    return AddPodPageModule;
}());

//# sourceMappingURL=add-pod.module.js.map

/***/ }),

/***/ 548:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditPodPageModule", function() { return EditPodPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_pod__ = __webpack_require__(484);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var EditPodPageModule = /** @class */ (function () {
    function EditPodPageModule() {
    }
    EditPodPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_pod__["a" /* EditPodPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_pod__["a" /* EditPodPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], EditPodPageModule);
    return EditPodPageModule;
}());

//# sourceMappingURL=edit-pod.module.js.map

/***/ }),

/***/ 549:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManagePodPageModule", function() { return ManagePodPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_pod__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_pod_add_pod_module__ = __webpack_require__(547);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__edit_pod_edit_pod_module__ = __webpack_require__(548);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManagePodPageModule = /** @class */ (function () {
    function ManagePodPageModule() {
    }
    ManagePodPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_pod__["a" /* ManagePodPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_pod__["a" /* ManagePodPage */]),
                __WEBPACK_IMPORTED_MODULE_3__add_pod_add_pod_module__["AddPodPageModule"],
                __WEBPACK_IMPORTED_MODULE_4__edit_pod_edit_pod_module__["EditPodPageModule"]
            ],
        })
    ], ManagePodPageModule);
    return ManagePodPageModule;
}());

//# sourceMappingURL=manage-pod.module.js.map

/***/ }),

/***/ 550:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddPostLoadPageModule", function() { return AddPostLoadPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__add_post_load__ = __webpack_require__(187);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var AddPostLoadPageModule = /** @class */ (function () {
    function AddPostLoadPageModule() {
    }
    AddPostLoadPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__add_post_load__["a" /* AddPostLoadPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__add_post_load__["a" /* AddPostLoadPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], AddPostLoadPageModule);
    return AddPostLoadPageModule;
}());

//# sourceMappingURL=add-post-load.module.js.map

/***/ }),

/***/ 551:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditPostLoadPageModule", function() { return EditPostLoadPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__edit_post_load__ = __webpack_require__(449);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var EditPostLoadPageModule = /** @class */ (function () {
    function EditPostLoadPageModule() {
    }
    EditPostLoadPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__edit_post_load__["a" /* EditPostLoadPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__edit_post_load__["a" /* EditPostLoadPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], EditPostLoadPageModule);
    return EditPostLoadPageModule;
}());

//# sourceMappingURL=edit-post-load.module.js.map

/***/ }),

/***/ 552:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManagePostLoadPageModule", function() { return ManagePostLoadPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_post_load__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__add_post_load_add_post_load_module__ = __webpack_require__(550);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__edit_post_load_edit_post_load_module__ = __webpack_require__(551);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var ManagePostLoadPageModule = /** @class */ (function () {
    function ManagePostLoadPageModule() {
    }
    ManagePostLoadPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_post_load__["a" /* ManagePostLoadPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_post_load__["a" /* ManagePostLoadPage */]),
                __WEBPACK_IMPORTED_MODULE_3__add_post_load_add_post_load_module__["AddPostLoadPageModule"],
                __WEBPACK_IMPORTED_MODULE_4__edit_post_load_edit_post_load_module__["EditPostLoadPageModule"]
            ],
        })
    ], ManagePostLoadPageModule);
    return ManagePostLoadPageModule;
}());

//# sourceMappingURL=manage-post-load.module.js.map

/***/ }),

/***/ 553:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageRequestLoadPageModule", function() { return ManageRequestLoadPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_request_load__ = __webpack_require__(186);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var ManageRequestLoadPageModule = /** @class */ (function () {
    function ManageRequestLoadPageModule() {
    }
    ManageRequestLoadPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_request_load__["a" /* ManageRequestLoadPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_request_load__["a" /* ManageRequestLoadPage */]),
            ],
        })
    ], ManageRequestLoadPageModule);
    return ManageRequestLoadPageModule;
}());

//# sourceMappingURL=manage-request-load.module.js.map

/***/ }),

/***/ 554:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageTransportPageModule", function() { return ManageTransportPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_transport__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






var ManageTransportPageModule = /** @class */ (function () {
    function ManageTransportPageModule() {
    }
    ManageTransportPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_transport__["a" /* ManageTransportPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_transport__["a" /* ManageTransportPage */]),
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */],
                __WEBPACK_IMPORTED_MODULE_4__agm_core__["a" /* AgmCoreModule */].forRoot({
                    apiKey: "AIzaSyDa-NnZ29t35WFyhKu5cy_bId3arSkb714",
                    libraries: ["places"]
                }),
                __WEBPACK_IMPORTED_MODULE_5_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_5_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], ManageTransportPageModule);
    return ManageTransportPageModule;
}());

//# sourceMappingURL=manage-transport.module.js.map

/***/ }),

/***/ 555:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageTruckListPageModule", function() { return ManageTruckListPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_truck_list__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var ManageTruckListPageModule = /** @class */ (function () {
    function ManageTruckListPageModule() {
    }
    ManageTruckListPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_truck_list__["a" /* ManageTruckListPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_truck_list__["a" /* ManageTruckListPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], ManageTruckListPageModule);
    return ManageTruckListPageModule;
}());

//# sourceMappingURL=manage-truck-list.module.js.map

/***/ }),

/***/ 556:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageUserPageModule", function() { return ManageUserPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_user__ = __webpack_require__(196);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var ManageUserPageModule = /** @class */ (function () {
    function ManageUserPageModule() {
    }
    ManageUserPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__manage_user__["a" /* ManageUserPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__manage_user__["a" /* ManageUserPage */]),
            ],
        })
    ], ManageUserPageModule);
    return ManageUserPageModule;
}());

//# sourceMappingURL=manage-user.module.js.map

/***/ }),

/***/ 557:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatchCompanyListPageModule", function() { return MatchCompanyListPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__match_company_list__ = __webpack_require__(446);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var MatchCompanyListPageModule = /** @class */ (function () {
    function MatchCompanyListPageModule() {
    }
    MatchCompanyListPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__match_company_list__["a" /* MatchCompanyListPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__match_company_list__["a" /* MatchCompanyListPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], MatchCompanyListPageModule);
    return MatchCompanyListPageModule;
}());

//# sourceMappingURL=match-company-list.module.js.map

/***/ }),

/***/ 558:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RewardsLedgerPageModule", function() { return RewardsLedgerPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__rewards_ledger__ = __webpack_require__(478);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var RewardsLedgerPageModule = /** @class */ (function () {
    function RewardsLedgerPageModule() {
    }
    RewardsLedgerPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__rewards_ledger__["a" /* RewardsLedgerPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__rewards_ledger__["a" /* RewardsLedgerPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ], exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], RewardsLedgerPageModule);
    return RewardsLedgerPageModule;
}());

//# sourceMappingURL=rewards-ledger.module.js.map

/***/ }),

/***/ 559:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RewardsTrialBalancePageModule", function() { return RewardsTrialBalancePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__rewards_trial_balance__ = __webpack_require__(482);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var RewardsTrialBalancePageModule = /** @class */ (function () {
    function RewardsTrialBalancePageModule() {
    }
    RewardsTrialBalancePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__rewards_trial_balance__["a" /* RewardsTrialBalancePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__rewards_trial_balance__["a" /* RewardsTrialBalancePage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ], exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], RewardsTrialBalancePageModule);
    return RewardsTrialBalancePageModule;
}());

//# sourceMappingURL=rewards-trial-balance.module.js.map

/***/ }),

/***/ 56:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Api; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_http__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__(106);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__app_app_settings__ = __webpack_require__(740);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__ = __webpack_require__(57);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_throw__ = __webpack_require__(741);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_throw___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_observable_throw__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_catch__ = __webpack_require__(742);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_catch__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__ionic_storage__ = __webpack_require__(306);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









/**
 * Api is a generic REST Api handler. Set your API url first.
 */
var Api = /** @class */ (function () {
    function Api(http, storage, events) {
        this.http = http;
        this.storage = storage;
        this.events = events;
        this.url = __WEBPACK_IMPORTED_MODULE_4__app_app_settings__["a" /* AppSettings */].API_ENDPOINT;
        this.token = null;
    }
    Api.prototype.get = function (endpoint, params, options) {
        if (!options) {
            options = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["RequestOptions"]();
        }
        // Support easy query params for GET requests
        if (params) {
            var p = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["URLSearchParams"]();
            for (var k in params) {
                p.set(k, params[k]);
            }
            // Set the search field if we have params and don't already have
            // a search field set in options.
            options.params = !options.params && p || options.params;
        }
        if (this.token) {
            options.headers = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["Headers"]({ 'X-auth': this.token });
        }
        return this.http.get(this.url + '/' + endpoint, options);
    };
    Api.prototype.post = function (endpoint, body, options) {
        if (!options) {
            options = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["RequestOptions"]();
        }
        if (this.token) {
            options.headers = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["Headers"]({ 'X-auth': this.token });
        }
        return this.http.post(this.url + '/' + endpoint, body, options);
    };
    Api.prototype.put = function (endpoint, body, options) {
        if (!options) {
            options = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["RequestOptions"]();
        }
        if (this.token) {
            options.headers = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["Headers"]({ 'X-auth': this.token });
        }
        return this.http.put(this.url + '/' + endpoint, body, options);
    };
    Api.prototype.delete = function (endpoint, options) {
        if (!options) {
            options = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["RequestOptions"]();
        }
        if (this.token) {
            options.headers = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["Headers"]({ 'X-auth': this.token });
        }
        return this.http.delete(this.url + '/' + endpoint, options);
    };
    Api.prototype.patch = function (endpoint, body, options) {
        if (!options) {
            options = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["RequestOptions"]();
        }
        if (this.token) {
            options.headers = new __WEBPACK_IMPORTED_MODULE_2__angular_http__["Headers"]({ 'X-auth': this.token });
        }
        return this.http.put(this.url + '/' + endpoint, body, options);
    };
    Api.prototype.catchErrors = function () {
        return function (res) {
            if (res.status === 401) {
                console.log("Error_Token_Expired: redirecting to login.");
            }
            return __WEBPACK_IMPORTED_MODULE_5_rxjs_Observable__["Observable"].throw(res);
        };
    };
    Api = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__angular_http__["Http"], __WEBPACK_IMPORTED_MODULE_8__ionic_storage__["b" /* Storage */], __WEBPACK_IMPORTED_MODULE_0_ionic_angular__["d" /* Events */]])
    ], Api);
    return Api;
}());

//# sourceMappingURL=api.js.map

/***/ }),

/***/ 560:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrafficOperationPageModule", function() { return TrafficOperationPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__traffic_operation__ = __webpack_require__(494);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var TrafficOperationPageModule = /** @class */ (function () {
    function TrafficOperationPageModule() {
    }
    TrafficOperationPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__traffic_operation__["a" /* TrafficOperationPage */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__traffic_operation__["a" /* TrafficOperationPage */]),
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */]
            ],
        })
    ], TrafficOperationPageModule);
    return TrafficOperationPageModule;
}());

//# sourceMappingURL=traffic-operation.module.js.map

/***/ }),

/***/ 561:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrafficOperationsPageModule", function() { return TrafficOperationsPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__traffic_operations__ = __webpack_require__(193);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var TrafficOperationsPageModule = /** @class */ (function () {
    function TrafficOperationsPageModule() {
    }
    TrafficOperationsPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__traffic_operations__["a" /* TrafficOperationsPage */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__traffic_operations__["a" /* TrafficOperationsPage */]),
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */]
            ],
        })
    ], TrafficOperationsPageModule);
    return TrafficOperationsPageModule;
}());

//# sourceMappingURL=traffic-operations.module.js.map

/***/ }),

/***/ 562:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrafficQualityControlPageModule", function() { return TrafficQualityControlPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__traffic_quality_control__ = __webpack_require__(489);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var TrafficQualityControlPageModule = /** @class */ (function () {
    function TrafficQualityControlPageModule() {
    }
    TrafficQualityControlPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__traffic_quality_control__["a" /* TrafficQualityControl */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__traffic_quality_control__["a" /* TrafficQualityControl */]),
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */]
            ],
        })
    ], TrafficQualityControlPageModule);
    return TrafficQualityControlPageModule;
}());

//# sourceMappingURL=traffic-quality-control.module.js.map

/***/ }),

/***/ 563:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrafficQualityEditModule", function() { return TrafficQualityEditModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__traffic_quality_edit__ = __webpack_require__(495);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_components_module__ = __webpack_require__(38);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var TrafficQualityEditModule = /** @class */ (function () {
    function TrafficQualityEditModule() {
    }
    TrafficQualityEditModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__traffic_quality_edit__["a" /* TrafficQualityEdit */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__traffic_quality_edit__["a" /* TrafficQualityEdit */]),
                __WEBPACK_IMPORTED_MODULE_3__components_components_module__["a" /* ComponentsModule */]
            ],
        })
    ], TrafficQualityEditModule);
    return TrafficQualityEditModule;
}());

//# sourceMappingURL=traffic-quality-edit.module.js.map

/***/ }),

/***/ 564:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrialBalancePageModule", function() { return TrialBalancePageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__trial_balance__ = __webpack_require__(479);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var TrialBalancePageModule = /** @class */ (function () {
    function TrialBalancePageModule() {
    }
    TrialBalancePageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__trial_balance__["a" /* TrialBalancePage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__trial_balance__["a" /* TrialBalancePage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ], exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], TrialBalancePageModule);
    return TrialBalancePageModule;
}());

//# sourceMappingURL=trial-balance.module.js.map

/***/ }),

/***/ 565:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrucksAvailabilityPageModule", function() { return TrucksAvailabilityPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__trucks_availability__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var TrucksAvailabilityPageModule = /** @class */ (function () {
    function TrucksAvailabilityPageModule() {
    }
    TrucksAvailabilityPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__trucks_availability__["a" /* TrucksAvailabilityPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__trucks_availability__["a" /* TrucksAvailabilityPage */]),
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_3_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ]
        })
    ], TrucksAvailabilityPageModule);
    return TrucksAvailabilityPageModule;
}());

//# sourceMappingURL=trucks-availability.module.js.map

/***/ }),

/***/ 6:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LoaderProvider; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var LoaderProvider = /** @class */ (function () {
    function LoaderProvider(loadingCtrl) {
        this.loadingCtrl = loadingCtrl;
    }
    LoaderProvider.prototype.show = function () {
        this.loading = this.loadingCtrl.create({
            content: 'Please wait...'
        });
        this.loading.present();
    };
    LoaderProvider.prototype.hide = function () {
        if (!this.loading)
            return;
        this.loading.dismiss();
    };
    LoaderProvider = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["i" /* LoadingController */]])
    ], LoaderProvider);
    return LoaderProvider;
}());

//# sourceMappingURL=loader.js.map

/***/ }),

/***/ 609:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__ = __webpack_require__(610);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__app_module__ = __webpack_require__(716);


Object(__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_1__app_module__["a" /* AppModule */]);
//# sourceMappingURL=main.js.map

/***/ }),

/***/ 716:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__ = __webpack_require__(61);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__app_component__ = __webpack_require__(1024);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__pages_list_list__ = __webpack_require__(1032);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__ionic_native_status_bar__ = __webpack_require__(605);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__ionic_native_splash_screen__ = __webpack_require__(608);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__node_modules_angular_http__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__ionic_storage__ = __webpack_require__(306);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__pages_auth_login_auth_login_module__ = __webpack_require__(526);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__pages_call_booking_request_load_call_booking_request_load_module__ = __webpack_require__(528);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__pages_admin_privileges_admin_privileges_module__ = __webpack_require__(503);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__providers_transporter__ = __webpack_require__(500);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__providers_api__ = __webpack_require__(56);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__pages_manage_company_list_manage_company_list_module__ = __webpack_require__(541);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__pages_manage_driver_manage_driver_module__ = __webpack_require__(545);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__pages_manage_transport_manage_transport_module__ = __webpack_require__(554);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__pages_manage_truck_list_manage_truck_list_module__ = __webpack_require__(555);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__pages_manage_request_load_manage_request_load_module__ = __webpack_require__(553);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__pages_match_company_list_match_company_list_module__ = __webpack_require__(557);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__pages_manage_agencies_manage_agencies_module__ = __webpack_require__(540);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__pages_edit_request_load_edit_request_load_module__ = __webpack_require__(531);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__pages_manage_user_manage_user_module__ = __webpack_require__(556);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__pages_edit_user_edit_user_module__ = __webpack_require__(532);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__pages_admin_privileges_add_employee_add_employee_module__ = __webpack_require__(498);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__pages_manage_employees_manage_employees_module__ = __webpack_require__(546);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__pages_edit_employee_edit_employee_module__ = __webpack_require__(530);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34_ng2_auto_complete__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34_ng2_auto_complete___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_34_ng2_auto_complete__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__pages_manage_post_load_manage_post_load_module__ = __webpack_require__(552);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__pages_loads_availability_loads_availability_module__ = __webpack_require__(533);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__pages_trucks_availability_trucks_availability_module__ = __webpack_require__(565);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__pages_manage_deal_final_deal_final_deal_final_module__ = __webpack_require__(202);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__pages_manage_deal_final_edit_deal_final_edit_deal_final_module__ = __webpack_require__(203);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__pages_manage_deal_final_manage_deal_final_module__ = __webpack_require__(544);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__pages_admin_privileges_manage_payment_mode_manage_payment_mode_module__ = __webpack_require__(516);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__pages_admin_privileges_manage_payment_type_manage_payment_type_module__ = __webpack_require__(519);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__pages_admin_privileges_manage_cancel_reasons_manage_cancel_reasons_module__ = __webpack_require__(513);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__pages_admin_privileges_manage_account_types_manage_account_types_module__ = __webpack_require__(510);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__pages_admin_privileges_manage_account_categories_manage_account_categories_module__ = __webpack_require__(507);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__pages_manage_accounts_master_manage_accounts_master_module__ = __webpack_require__(537);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__providers_accounts__ = __webpack_require__(34);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__pages_manage_accounts_ledger_manage_accounts_ledger_module__ = __webpack_require__(534);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__pages_admin_privileges_manage_rewards_redemption_add_rewards_redemption_manage_rewards_module__ = __webpack_require__(520);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__pages_rewards_ledger_rewards_ledger_module__ = __webpack_require__(558);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__pages_trial_balance_trial_balance_module__ = __webpack_require__(564);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__pages_admin_privileges_manage_rewards_redemption_manage_rewards_redemption_module__ = __webpack_require__(522);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__pages_admin_privileges_manage_rewards_redemption_edit_rewards_redemption_edit_rewards_redemption_module__ = __webpack_require__(521);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__pages_rewards_trial_balance_rewards_trial_balance_module__ = __webpack_require__(559);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__pages_accounts_transactions_accounts_transactions_module__ = __webpack_require__(302);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__pages_manage_pod_manage_pod_module__ = __webpack_require__(549);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__pages_manage_deal_final_new_manage_deal_final_new_module__ = __webpack_require__(543);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__pages_manage_deal_final_new_add_deal_final_new_add_deal_final_new_module__ = __webpack_require__(201);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__pages_manage_advance_amount_manage_advance_amount_module__ = __webpack_require__(539);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__pages_manage_advance_amount_add_advance_amount_add_advance_amount_module__ = __webpack_require__(200);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__pages_manage_advance_amount_edit_advance_amount_edit_advance_amount_module__ = __webpack_require__(538);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__providers_fleet_management__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__pages_attach_documents_attach_documents_module__ = __webpack_require__(524);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__pages_deal_final_dashboard_deal_final_dashboard_module__ = __webpack_require__(529);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__pages_traffic_operations_traffic_operations_module__ = __webpack_require__(561);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__pages_traffic_operation_traffic_operation_module__ = __webpack_require__(560);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__pages_traffic_quality_edit_traffic_quality_edit_module__ = __webpack_require__(563);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__pages_traffic_quality_control_traffic_quality_control_module__ = __webpack_require__(562);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__providers_traffic__ = __webpack_require__(92);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






































































var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_3__app_component__["a" /* MyApp */],
                __WEBPACK_IMPORTED_MODULE_4__pages_home_home__["a" /* HomePage */],
                __WEBPACK_IMPORTED_MODULE_5__pages_list_list__["a" /* ListPage */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__["a" /* BrowserModule */],
                __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["g" /* IonicModule */].forRoot(__WEBPACK_IMPORTED_MODULE_3__app_component__["a" /* MyApp */], {}, {
                    links: [
                        { loadChildren: '../pages/accounts-transactions/accounts-transactions.module#AccountsTransactionsPageModule', name: 'AccountsTransactionsPage', segment: 'accounts-transactions', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/accounts-transactions/edit-accounts-transactions/edit-accounts-transactions.module#EditAccountsTransactionsPageModule', name: 'EditAccountsTransactionsPage', segment: 'edit-accounts-transactions', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/add-agencies/add-agencies.module#AddAgenciesPageModule', name: 'AddAgenciesPage', segment: 'add-agencies', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/add-company/add-company.module#AddCompanyPageModule', name: 'AddCompanyPage', segment: 'add-company', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/add-driver/add-driver.module#AddDriverPageModule', name: 'AddDriverPage', segment: 'add-driver', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/add-employee/add-employee.module#AddEmployeePageModule', name: 'AddEmployeePage', segment: 'add-employee', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/add-transporter/add-transporter.module#AddTransporterPageModule', name: 'AddTransporterPage', segment: 'add-transporter', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/add-user/add-user.module#AddUserPageModule', name: 'AddUserPage', segment: 'add-user', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/admin-privileges-add-truck/admin-privileges-add-truck.module#AdminPrivilegesAddTruckPageModule', name: 'AdminPrivilegesAddTruckPage', segment: 'admin-privileges-add-truck', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/admin-privileges.module#AdminPrivilegesPageModule', name: 'AdminPrivilegesPage', segment: 'admin-privileges', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-account-categories/add-account-category/add-account-category.module#AddAccountCategoryPageModule', name: 'AddAccountCategoryPage', segment: 'add-account-category', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-account-categories/edit-account-category/edit-account-category.module#EditAccountCategoryPageModule', name: 'EditAccountCategoryPage', segment: 'edit-account-category', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-account-categories/manage-account-categories.module#ManageAccountCategoriesPageModule', name: 'ManageAccountCategoriesPage', segment: 'manage-account-categories', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-account-types/add-account-type/add-account-type.module#AddAccountTypePageModule', name: 'AddAccountTypePage', segment: 'add-account-type', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-account-types/edit-account-type/edit-account-type.module#EditAccountTypePageModule', name: 'EditAccountTypePage', segment: 'edit-account-type', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-account-types/manage-account-types.module#ManageAccountTypesPageModule', name: 'ManageAccountTypesPage', segment: 'manage-account-types', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-cancel-reasons/add-cancel-reasons/add-cancel-reasons.module#AddCancelReasonsPageModule', name: 'AddCancelReasonsPage', segment: 'add-cancel-reasons', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-cancel-reasons/edit-cancel-reasons/edit-cancel-reasons.module#EditCancelReasonsPageModule', name: 'EditCancelReasonsPage', segment: 'edit-cancel-reasons', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-cancel-reasons/manage-cancel-reasons.module#ManageCancelReasonsPageModule', name: 'ManageCancelReasonsPage', segment: 'manage-cancel-reasons', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-payment-mode/add-payment-mode/add-payment-mode.module#AddPaymentModePageModule', name: 'AddPaymentModePage', segment: 'add-payment-mode', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-payment-mode/edit-payment-mode/edit-payment-mode.module#EditPaymentModePageModule', name: 'EditPaymentModePage', segment: 'edit-payment-mode', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-payment-mode/manage-payment-mode.module#ManagePaymentModePageModule', name: 'ManagePaymentModePage', segment: 'manage-payment-mode', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-payment-type/add-payment-type/add-payment-type.module#AddPaymentTypePageModule', name: 'AddPaymentTypePage', segment: 'add-payment-type', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-payment-type/edit-payment-type/edit-payment-type.module#EditPaymentTypePageModule', name: 'EditPaymentTypePage', segment: 'edit-payment-type', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-payment-type/manage-payment-type.module#ManagePaymentTypePageModule', name: 'ManagePaymentTypePage', segment: 'manage-payment-type', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-rewards-redemption/add-rewards-redemption/manage-rewards.module#ManageRewardsPageModule', name: 'ManageRewardsPage', segment: 'manage-rewards', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-rewards-redemption/edit-rewards-redemption/edit-rewards-redemption.module#EditRewardsRedemptionPageModule', name: 'EditRewardsRedemptionPage', segment: 'edit-rewards-redemption', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/manage-rewards-redemption/manage-rewards-redemption.module#ManageRewardsRedemptionPageModule', name: 'ManageRewardsRedemptionPage', segment: 'manage-rewards-redemption', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/admin-privileges/request-load/request-load.module#RequestLoadPageModule', name: 'RequestLoadPage', segment: 'request-load', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/attach-documents/add-documents-master/add-documents-master.module#AddDocumentsMasterPageModule', name: 'AddDocumentsMasterPage', segment: 'add-documents-master', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/attach-documents/attach-documents.module#AttachDocumentsPageModule', name: 'AttachDocumentsPage', segment: 'attach-documents', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/attach-documents/edit-attach-documents/edit-attach-documents.module#EditAttachDocumentsPageModule', name: 'EditAttachDocumentsPage', segment: 'edit-attach-documents', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/auth-login/auth-login.module#AuthLoginPageModule', name: 'AuthLoginPage', segment: 'auth-login', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/call-booking-request-load/call-booking-request-load.module#CallBookingRequestLoadPageModule', name: 'CallBookingRequestLoadPage', segment: 'call-booking-request-load', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/deal-final-dashboard/deal-final-dashboard.module#DealFinalDashboardPageModule', name: 'DealFinalDashboardPage', segment: 'deal-final-dashboard', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/edit-agencies-details/edit-agencies-details.module#EditAgenciesDetailsPageModule', name: 'EditAgenciesDetailsPage', segment: 'edit-agencies-details', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/edit-company-details/edit-company-details.module#EditCompanyDetailsPageModule', name: 'EditCompanyDetailsPage', segment: 'edit-company-details', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/edit-company-requirements/edit-company-requirements.module#EditCompanyRequirementsPageModule', name: 'EditCompanyRequirementsPage', segment: 'edit-company-requirements', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/edit-driver-details/edit-driver-details.module#EditDriverDetailsPageModule', name: 'EditDriverDetailsPage', segment: 'edit-driver-details', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/edit-employee/edit-employee.module#EditEmployeePageModule', name: 'EditEmployeePage', segment: 'edit-employee', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/edit-request-load/edit-request-load.module#EditRequestLoadPageModule', name: 'EditRequestLoadPage', segment: 'edit-request-load', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/edit-transport-details/edit-transport-details.module#EditTransportDetailsPageModule', name: 'EditTransportDetailsPage', segment: 'edit-transport-details', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/edit-truck-details/edit-truck-details.module#EditTruckDetailsPageModule', name: 'EditTruckDetailsPage', segment: 'edit-truck-details', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/edit-user/edit-user.module#EditUserPageModule', name: 'EditUserPage', segment: 'edit-user', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/loads-availability/loads-availability.module#LoadsAvailabilityPageModule', name: 'LoadsAvailabilityPage', segment: 'loads-availability', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-accounts-ledger/manage-accounts-ledger.module#ManageAccountsLedgerPageModule', name: 'ManageAccountsLedgerPage', segment: 'manage-accounts-ledger', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-accounts-master/add-account-master/add-account-master.module#AddAccountMasterPageModule', name: 'AddAccountMasterPage', segment: 'add-account-master', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-accounts-master/edit-account-master/edit-account-master.module#EditAccountMasterPageModule', name: 'EditAccountMasterPage', segment: 'edit-account-master', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-accounts-master/manage-accounts-master.module#ManageAccountsMasterPageModule', name: 'ManageAccountsMasterPage', segment: 'manage-accounts-master', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-advance-amount/add-advance-amount/add-advance-amount.module#AddAdvanceAmountPageModule', name: 'AddAdvanceAmountPage', segment: 'add-advance-amount', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-advance-amount/edit-advance-amount/edit-advance-amount.module#EditAdvanceAmountPageModule', name: 'EditAdvanceAmountPage', segment: 'edit-advance-amount', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-advance-amount/manage-advance-amount.module#ManageAdvanceAmountPageModule', name: 'ManageAdvanceAmountPage', segment: 'manage-advance-amount', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-agencies/manage-agencies.module#ManageAgenciesPageModule', name: 'ManageAgenciesPage', segment: 'manage-agencies', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-company-list/manage-company-list.module#ManageCompanyListPageModule', name: 'ManageCompanyListPage', segment: 'manage-company-list', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-deal-final-new/add-deal-final-new/add-deal-final-new.module#AddDealFinalNewPageModule', name: 'AddDealFinalNewPage', segment: 'add-deal-final-new', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-deal-final-new/edit-deal-final-new/edit-deal-final-new.module#EditDealFinalNewPageModule', name: 'EditDealFinalNewPage', segment: 'edit-deal-final-new', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-deal-final-new/manage-deal-final-new.module#ManageDealFinalNewPageModule', name: 'ManageDealFinalNewPage', segment: 'manage-deal-final-new', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-deal-final/deal-final/deal-final.module#DealFinalPageModule', name: 'DealFinalPage', segment: 'deal-final', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-deal-final/edit-deal-final/edit-deal-final.module#EditDealFinalPageModule', name: 'EditDealFinalPage', segment: 'edit-deal-final', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-deal-final/manage-deal-final.module#ManageDealFinalPageModule', name: 'ManageDealFinalPage', segment: 'manage-deal-final', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-driver/manage-driver.module#ManageDriverPageModule', name: 'ManageDriverPage', segment: 'manage-driver', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-employees/manage-employees.module#ManageEmployeesPageModule', name: 'ManageEmployeesPage', segment: 'manage-employees', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-pod/add-pod/add-pod.module#AddPodPageModule', name: 'AddPodPage', segment: 'add-pod', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-pod/edit-pod/edit-pod.module#EditPodPageModule', name: 'EditPodPage', segment: 'edit-pod', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-pod/manage-pod.module#ManagePodPageModule', name: 'ManagePodPage', segment: 'manage-pod', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-post-load/add-post-load/add-post-load.module#AddPostLoadPageModule', name: 'AddPostLoadPage', segment: 'add-post-load', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-post-load/edit-post-load/edit-post-load.module#EditPostLoadPageModule', name: 'EditPostLoadPage', segment: 'edit-post-load', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-post-load/manage-post-load.module#ManagePostLoadPageModule', name: 'ManagePostLoadPage', segment: 'manage-post-load', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-request-load/manage-request-load.module#ManageRequestLoadPageModule', name: 'ManageRequestLoadPage', segment: 'manage-request-load', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-transport/manage-transport.module#ManageTransportPageModule', name: 'ManageTransportPage', segment: 'manage-transport', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-truck-list/manage-truck-list.module#ManageTruckListPageModule', name: 'ManageTruckListPage', segment: 'manage-truck-list', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/manage-user/manage-user.module#ManageUserPageModule', name: 'ManageUserPage', segment: 'manage-user', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/match-company-list/match-company-list.module#MatchCompanyListPageModule', name: 'MatchCompanyListPage', segment: 'match-company-list', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/rewards-ledger/rewards-ledger.module#RewardsLedgerPageModule', name: 'RewardsLedgerPage', segment: 'rewards-ledger', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/rewards-trial-balance/rewards-trial-balance.module#RewardsTrialBalancePageModule', name: 'RewardsTrialBalancePage', segment: 'rewards-trial-balance', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/setting/setting.module#SettingPageModule', name: 'SettingPage', segment: 'setting', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/traffic-operation/traffic-operation.module#TrafficOperationPageModule', name: 'TrafficOperationPage', segment: 'traffic-operation', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/traffic-operations/traffic-operations.module#TrafficOperationsPageModule', name: 'TrafficOperationsPage', segment: 'traffic-operations', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/traffic-quality-control/traffic-quality-control.module#TrafficQualityControlPageModule', name: 'TrafficQualityControl', segment: 'traffic-quality-control', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/traffic-quality-edit/traffic-quality-edit.module#TrafficQualityEditModule', name: 'TrafficQualityEdit', segment: 'traffic-quality-edit', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/trial-balance/trial-balance.module#TrialBalancePageModule', name: 'TrialBalancePage', segment: 'trial-balance', priority: 'low', defaultHistory: [] },
                        { loadChildren: '../pages/trucks-availability/trucks-availability.module#TrucksAvailabilityPageModule', name: 'TrucksAvailabilityPage', segment: 'trucks-availability', priority: 'low', defaultHistory: [] }
                    ]
                }),
                __WEBPACK_IMPORTED_MODULE_10__pages_auth_login_auth_login_module__["AuthLoginPageModule"],
                __WEBPACK_IMPORTED_MODULE_11__pages_call_booking_request_load_call_booking_request_load_module__["CallBookingRequestLoadPageModule"],
                __WEBPACK_IMPORTED_MODULE_12__pages_admin_privileges_admin_privileges_module__["AdminPrivilegesPageModule"],
                __WEBPACK_IMPORTED_MODULE_8__node_modules_angular_http__["HttpModule"],
                __WEBPACK_IMPORTED_MODULE_9__ionic_storage__["a" /* IonicStorageModule */].forRoot(),
                __WEBPACK_IMPORTED_MODULE_17__pages_manage_company_list_manage_company_list_module__["ManageCompanyListPageModule"],
                __WEBPACK_IMPORTED_MODULE_18__pages_manage_driver_manage_driver_module__["ManageDriverPageModule"],
                __WEBPACK_IMPORTED_MODULE_19__pages_manage_transport_manage_transport_module__["ManageTransportPageModule"],
                __WEBPACK_IMPORTED_MODULE_20__pages_manage_truck_list_manage_truck_list_module__["ManageTruckListPageModule"],
                __WEBPACK_IMPORTED_MODULE_21__pages_manage_request_load_manage_request_load_module__["ManageRequestLoadPageModule"],
                __WEBPACK_IMPORTED_MODULE_22__pages_match_company_list_match_company_list_module__["MatchCompanyListPageModule"],
                __WEBPACK_IMPORTED_MODULE_24__pages_manage_agencies_manage_agencies_module__["ManageAgenciesPageModule"],
                __WEBPACK_IMPORTED_MODULE_27__pages_edit_request_load_edit_request_load_module__["EditRequestLoadPageModule"],
                __WEBPACK_IMPORTED_MODULE_29__pages_manage_user_manage_user_module__["ManageUserPageModule"],
                __WEBPACK_IMPORTED_MODULE_30__pages_edit_user_edit_user_module__["EditUserPageModule"],
                __WEBPACK_IMPORTED_MODULE_31__pages_admin_privileges_add_employee_add_employee_module__["AddEmployeePageModule"],
                __WEBPACK_IMPORTED_MODULE_32__pages_manage_employees_manage_employees_module__["ManageEmployeesPageModule"],
                __WEBPACK_IMPORTED_MODULE_33__pages_edit_employee_edit_employee_module__["EditEmployeePageModule"],
                __WEBPACK_IMPORTED_MODULE_34_ng2_auto_complete__["Ng2AutoCompleteModule"],
                __WEBPACK_IMPORTED_MODULE_35__pages_manage_post_load_manage_post_load_module__["ManagePostLoadPageModule"],
                __WEBPACK_IMPORTED_MODULE_36__pages_loads_availability_loads_availability_module__["LoadsAvailabilityPageModule"],
                __WEBPACK_IMPORTED_MODULE_37__pages_trucks_availability_trucks_availability_module__["TrucksAvailabilityPageModule"],
                __WEBPACK_IMPORTED_MODULE_38__pages_manage_deal_final_deal_final_deal_final_module__["DealFinalPageModule"],
                __WEBPACK_IMPORTED_MODULE_39__pages_manage_deal_final_edit_deal_final_edit_deal_final_module__["EditDealFinalPageModule"],
                __WEBPACK_IMPORTED_MODULE_40__pages_manage_deal_final_manage_deal_final_module__["ManageDealFinalPageModule"],
                __WEBPACK_IMPORTED_MODULE_41__pages_admin_privileges_manage_payment_mode_manage_payment_mode_module__["ManagePaymentModePageModule"],
                __WEBPACK_IMPORTED_MODULE_42__pages_admin_privileges_manage_payment_type_manage_payment_type_module__["ManagePaymentTypePageModule"],
                __WEBPACK_IMPORTED_MODULE_43__pages_admin_privileges_manage_cancel_reasons_manage_cancel_reasons_module__["ManageCancelReasonsPageModule"],
                __WEBPACK_IMPORTED_MODULE_45__pages_admin_privileges_manage_account_categories_manage_account_categories_module__["ManageAccountCategoriesPageModule"],
                __WEBPACK_IMPORTED_MODULE_44__pages_admin_privileges_manage_account_types_manage_account_types_module__["ManageAccountTypesPageModule"],
                __WEBPACK_IMPORTED_MODULE_46__pages_manage_accounts_master_manage_accounts_master_module__["ManageAccountsMasterPageModule"],
                __WEBPACK_IMPORTED_MODULE_48__pages_manage_accounts_ledger_manage_accounts_ledger_module__["ManageAccountsLedgerPageModule"],
                __WEBPACK_IMPORTED_MODULE_49__pages_admin_privileges_manage_rewards_redemption_add_rewards_redemption_manage_rewards_module__["ManageRewardsPageModule"],
                __WEBPACK_IMPORTED_MODULE_50__pages_rewards_ledger_rewards_ledger_module__["RewardsLedgerPageModule"],
                __WEBPACK_IMPORTED_MODULE_51__pages_trial_balance_trial_balance_module__["TrialBalancePageModule"],
                __WEBPACK_IMPORTED_MODULE_52__pages_admin_privileges_manage_rewards_redemption_manage_rewards_redemption_module__["ManageRewardsRedemptionPageModule"],
                __WEBPACK_IMPORTED_MODULE_53__pages_admin_privileges_manage_rewards_redemption_edit_rewards_redemption_edit_rewards_redemption_module__["EditRewardsRedemptionPageModule"],
                __WEBPACK_IMPORTED_MODULE_54__pages_rewards_trial_balance_rewards_trial_balance_module__["RewardsTrialBalancePageModule"],
                __WEBPACK_IMPORTED_MODULE_55__pages_accounts_transactions_accounts_transactions_module__["AccountsTransactionsPageModule"],
                __WEBPACK_IMPORTED_MODULE_56__pages_manage_pod_manage_pod_module__["ManagePodPageModule"],
                __WEBPACK_IMPORTED_MODULE_57__pages_manage_deal_final_new_manage_deal_final_new_module__["ManageDealFinalNewPageModule"],
                __WEBPACK_IMPORTED_MODULE_58__pages_manage_deal_final_new_add_deal_final_new_add_deal_final_new_module__["AddDealFinalNewPageModule"],
                __WEBPACK_IMPORTED_MODULE_59__pages_manage_advance_amount_manage_advance_amount_module__["ManageAdvanceAmountPageModule"],
                __WEBPACK_IMPORTED_MODULE_60__pages_manage_advance_amount_add_advance_amount_add_advance_amount_module__["AddAdvanceAmountPageModule"],
                __WEBPACK_IMPORTED_MODULE_61__pages_manage_advance_amount_edit_advance_amount_edit_advance_amount_module__["EditAdvanceAmountPageModule"],
                __WEBPACK_IMPORTED_MODULE_63__pages_attach_documents_attach_documents_module__["AttachDocumentsPageModule"],
                __WEBPACK_IMPORTED_MODULE_64__pages_deal_final_dashboard_deal_final_dashboard_module__["DealFinalDashboardPageModule"],
                __WEBPACK_IMPORTED_MODULE_65__pages_traffic_operations_traffic_operations_module__["TrafficOperationsPageModule"],
                __WEBPACK_IMPORTED_MODULE_66__pages_traffic_operation_traffic_operation_module__["TrafficOperationPageModule"],
                __WEBPACK_IMPORTED_MODULE_68__pages_traffic_quality_control_traffic_quality_control_module__["TrafficQualityControlPageModule"],
                __WEBPACK_IMPORTED_MODULE_67__pages_traffic_quality_edit_traffic_quality_edit_module__["TrafficQualityEditModule"]
            ],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_2_ionic_angular__["e" /* IonicApp */]],
            entryComponents: [
                __WEBPACK_IMPORTED_MODULE_3__app_component__["a" /* MyApp */],
                __WEBPACK_IMPORTED_MODULE_4__pages_home_home__["a" /* HomePage */],
                __WEBPACK_IMPORTED_MODULE_5__pages_list_list__["a" /* ListPage */]
            ],
            exports: [
                __WEBPACK_IMPORTED_MODULE_34_ng2_auto_complete__["Ng2AutoCompleteModule"]
            ],
            providers: [
                __WEBPACK_IMPORTED_MODULE_6__ionic_native_status_bar__["a" /* StatusBar */],
                __WEBPACK_IMPORTED_MODULE_7__ionic_native_splash_screen__["a" /* SplashScreen */],
                { provide: __WEBPACK_IMPORTED_MODULE_1__angular_core__["ErrorHandler"], useClass: __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["f" /* IonicErrorHandler */] },
                __WEBPACK_IMPORTED_MODULE_14__providers_api__["a" /* Api */],
                __WEBPACK_IMPORTED_MODULE_13__providers_transporter__["a" /* Transporter */],
                __WEBPACK_IMPORTED_MODULE_15__providers_truck__["a" /* Trucks */],
                __WEBPACK_IMPORTED_MODULE_16__providers_request_load__["a" /* RequestLoad */],
                __WEBPACK_IMPORTED_MODULE_23__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
                __WEBPACK_IMPORTED_MODULE_25__providers_loader__["a" /* LoaderProvider */],
                __WEBPACK_IMPORTED_MODULE_26__providers_toast__["a" /* ToastProvider */],
                __WEBPACK_IMPORTED_MODULE_28__providers_event_service__["a" /* EventsService */],
                __WEBPACK_IMPORTED_MODULE_47__providers_accounts__["a" /* Accounts */],
                __WEBPACK_IMPORTED_MODULE_62__providers_fleet_management__["a" /* FleetManagement */],
                __WEBPACK_IMPORTED_MODULE_69__providers_traffic__["a" /* Traffic */]
            ]
        })
    ], AppModule);
    return AppModule;
}());

//# sourceMappingURL=app.module.js.map

/***/ }),

/***/ 72:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FleetManagement; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__api__ = __webpack_require__(56);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

// import { Http } from '@angular/http';

var FleetManagement = /** @class */ (function () {
    function FleetManagement(api) {
        this.api = api;
    }
    FleetManagement.prototype.addDocumentsMaster = function (data) {
        return this.api.post('attach_documents/add_document_master', data);
    };
    FleetManagement.prototype.listDocumentsMaster = function () {
        return this.api.get('attach_documents/list_document_master');
    };
    FleetManagement.prototype.updateDocumentsMaster = function (id, data) {
        return this.api.put('attach_documents/update_document_master?id=' + id, data);
    };
    FleetManagement.prototype.deleteDocumentsMaster = function (id) {
        return this.api.delete('attach_documents/delete_document_master?id=' + id);
    };
    FleetManagement.prototype.getfilesList = function (truck_no) {
        return this.api.get('attach_documents/list_files?truck_no=' + truck_no);
    };
    FleetManagement.prototype.addAttachDocuments = function (data) {
        return this.api.post('attach_documents/add', data);
    };
    FleetManagement.prototype.deleteDocument = function (data) {
        return this.api.put('attach_documents/delete_document', data);
    };
    FleetManagement.prototype.updateDocumentData = function (data) {
        return this.api.put('attach_documents/update_file_date', data);
    };
    FleetManagement.prototype.getPaymentMode = function () {
        return this.api.get('meta/get_payment_mode');
    };
    FleetManagement.prototype.getPaymentType = function () {
        return this.api.get('meta/get_payment_type');
    };
    FleetManagement = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__api__["a" /* Api */]])
    ], FleetManagement);
    return FleetManagement;
}());

//# sourceMappingURL=fleet_management.js.map

/***/ }),

/***/ 740:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppSettings; });
var AppSettings = /** @class */ (function () {
    function AppSettings() {
    }
    AppSettings.API_ENDPOINT = 'http://142.93.181.214:8081/api';
    // public static API_ENDPOINT = 'http://localhost:3000/api';
    AppSettings.APP_VERSION = '1.0';
    return AppSettings;
}());

//# sourceMappingURL=app.settings.js.map

/***/ }),

/***/ 750:
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 319,
	"./af.js": 319,
	"./ar": 320,
	"./ar-dz": 321,
	"./ar-dz.js": 321,
	"./ar-kw": 322,
	"./ar-kw.js": 322,
	"./ar-ly": 323,
	"./ar-ly.js": 323,
	"./ar-ma": 324,
	"./ar-ma.js": 324,
	"./ar-sa": 325,
	"./ar-sa.js": 325,
	"./ar-tn": 326,
	"./ar-tn.js": 326,
	"./ar.js": 320,
	"./az": 327,
	"./az.js": 327,
	"./be": 328,
	"./be.js": 328,
	"./bg": 329,
	"./bg.js": 329,
	"./bm": 330,
	"./bm.js": 330,
	"./bn": 331,
	"./bn.js": 331,
	"./bo": 332,
	"./bo.js": 332,
	"./br": 333,
	"./br.js": 333,
	"./bs": 334,
	"./bs.js": 334,
	"./ca": 335,
	"./ca.js": 335,
	"./cs": 336,
	"./cs.js": 336,
	"./cv": 337,
	"./cv.js": 337,
	"./cy": 338,
	"./cy.js": 338,
	"./da": 339,
	"./da.js": 339,
	"./de": 340,
	"./de-at": 341,
	"./de-at.js": 341,
	"./de-ch": 342,
	"./de-ch.js": 342,
	"./de.js": 340,
	"./dv": 343,
	"./dv.js": 343,
	"./el": 344,
	"./el.js": 344,
	"./en-SG": 345,
	"./en-SG.js": 345,
	"./en-au": 346,
	"./en-au.js": 346,
	"./en-ca": 347,
	"./en-ca.js": 347,
	"./en-gb": 348,
	"./en-gb.js": 348,
	"./en-ie": 349,
	"./en-ie.js": 349,
	"./en-il": 350,
	"./en-il.js": 350,
	"./en-nz": 351,
	"./en-nz.js": 351,
	"./eo": 352,
	"./eo.js": 352,
	"./es": 353,
	"./es-do": 354,
	"./es-do.js": 354,
	"./es-us": 355,
	"./es-us.js": 355,
	"./es.js": 353,
	"./et": 356,
	"./et.js": 356,
	"./eu": 357,
	"./eu.js": 357,
	"./fa": 358,
	"./fa.js": 358,
	"./fi": 359,
	"./fi.js": 359,
	"./fo": 360,
	"./fo.js": 360,
	"./fr": 361,
	"./fr-ca": 362,
	"./fr-ca.js": 362,
	"./fr-ch": 363,
	"./fr-ch.js": 363,
	"./fr.js": 361,
	"./fy": 364,
	"./fy.js": 364,
	"./ga": 365,
	"./ga.js": 365,
	"./gd": 366,
	"./gd.js": 366,
	"./gl": 367,
	"./gl.js": 367,
	"./gom-latn": 368,
	"./gom-latn.js": 368,
	"./gu": 369,
	"./gu.js": 369,
	"./he": 370,
	"./he.js": 370,
	"./hi": 371,
	"./hi.js": 371,
	"./hr": 372,
	"./hr.js": 372,
	"./hu": 373,
	"./hu.js": 373,
	"./hy-am": 374,
	"./hy-am.js": 374,
	"./id": 375,
	"./id.js": 375,
	"./is": 376,
	"./is.js": 376,
	"./it": 377,
	"./it-ch": 378,
	"./it-ch.js": 378,
	"./it.js": 377,
	"./ja": 379,
	"./ja.js": 379,
	"./jv": 380,
	"./jv.js": 380,
	"./ka": 381,
	"./ka.js": 381,
	"./kk": 382,
	"./kk.js": 382,
	"./km": 383,
	"./km.js": 383,
	"./kn": 384,
	"./kn.js": 384,
	"./ko": 385,
	"./ko.js": 385,
	"./ku": 386,
	"./ku.js": 386,
	"./ky": 387,
	"./ky.js": 387,
	"./lb": 388,
	"./lb.js": 388,
	"./lo": 389,
	"./lo.js": 389,
	"./lt": 390,
	"./lt.js": 390,
	"./lv": 391,
	"./lv.js": 391,
	"./me": 392,
	"./me.js": 392,
	"./mi": 393,
	"./mi.js": 393,
	"./mk": 394,
	"./mk.js": 394,
	"./ml": 395,
	"./ml.js": 395,
	"./mn": 396,
	"./mn.js": 396,
	"./mr": 397,
	"./mr.js": 397,
	"./ms": 398,
	"./ms-my": 399,
	"./ms-my.js": 399,
	"./ms.js": 398,
	"./mt": 400,
	"./mt.js": 400,
	"./my": 401,
	"./my.js": 401,
	"./nb": 402,
	"./nb.js": 402,
	"./ne": 403,
	"./ne.js": 403,
	"./nl": 404,
	"./nl-be": 405,
	"./nl-be.js": 405,
	"./nl.js": 404,
	"./nn": 406,
	"./nn.js": 406,
	"./pa-in": 407,
	"./pa-in.js": 407,
	"./pl": 408,
	"./pl.js": 408,
	"./pt": 409,
	"./pt-br": 410,
	"./pt-br.js": 410,
	"./pt.js": 409,
	"./ro": 411,
	"./ro.js": 411,
	"./ru": 412,
	"./ru.js": 412,
	"./sd": 413,
	"./sd.js": 413,
	"./se": 414,
	"./se.js": 414,
	"./si": 415,
	"./si.js": 415,
	"./sk": 416,
	"./sk.js": 416,
	"./sl": 417,
	"./sl.js": 417,
	"./sq": 418,
	"./sq.js": 418,
	"./sr": 419,
	"./sr-cyrl": 420,
	"./sr-cyrl.js": 420,
	"./sr.js": 419,
	"./ss": 421,
	"./ss.js": 421,
	"./sv": 422,
	"./sv.js": 422,
	"./sw": 423,
	"./sw.js": 423,
	"./ta": 424,
	"./ta.js": 424,
	"./te": 425,
	"./te.js": 425,
	"./tet": 426,
	"./tet.js": 426,
	"./tg": 427,
	"./tg.js": 427,
	"./th": 428,
	"./th.js": 428,
	"./tl-ph": 429,
	"./tl-ph.js": 429,
	"./tlh": 430,
	"./tlh.js": 430,
	"./tr": 431,
	"./tr.js": 431,
	"./tzl": 432,
	"./tzl.js": 432,
	"./tzm": 433,
	"./tzm-latn": 434,
	"./tzm-latn.js": 434,
	"./tzm.js": 433,
	"./ug-cn": 435,
	"./ug-cn.js": 435,
	"./uk": 436,
	"./uk.js": 436,
	"./ur": 437,
	"./ur.js": 437,
	"./uz": 438,
	"./uz-latn": 439,
	"./uz-latn.js": 439,
	"./uz.js": 438,
	"./vi": 440,
	"./vi.js": 440,
	"./x-pseudo": 441,
	"./x-pseudo.js": 441,
	"./yo": 442,
	"./yo.js": 442,
	"./zh-cn": 443,
	"./zh-cn.js": 443,
	"./zh-hk": 444,
	"./zh-hk.js": 444,
	"./zh-tw": 445,
	"./zh-tw.js": 445
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 750;

/***/ }),

/***/ 9:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HomePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__manage_transport_manage_transport__ = __webpack_require__(171);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__manage_company_list_manage_company_list__ = __webpack_require__(182);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__manage_truck_list_manage_truck_list__ = __webpack_require__(183);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__manage_driver_manage_driver__ = __webpack_require__(184);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__manage_agencies_manage_agencies__ = __webpack_require__(185);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__manage_request_load_manage_request_load__ = __webpack_require__(186);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__manage_user_manage_user__ = __webpack_require__(196);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__manage_employees_manage_employees__ = __webpack_require__(197);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__manage_post_load_manage_post_load__ = __webpack_require__(91);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__loads_availability_loads_availability__ = __webpack_require__(194);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__trucks_availability_trucks_availability__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__manage_deal_final_manage_deal_final__ = __webpack_require__(110);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__admin_privileges_manage_payment_type_manage_payment_type__ = __webpack_require__(460);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__admin_privileges_manage_payment_mode_manage_payment_mode__ = __webpack_require__(463);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__admin_privileges_manage_cancel_reasons_manage_cancel_reasons__ = __webpack_require__(466);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__admin_privileges_manage_account_types_manage_account_types__ = __webpack_require__(469);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__admin_privileges_manage_account_categories_manage_account_categories__ = __webpack_require__(472);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__manage_accounts_master_manage_accounts_master__ = __webpack_require__(111);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__manage_accounts_ledger_manage_accounts_ledger__ = __webpack_require__(477);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__rewards_ledger_rewards_ledger__ = __webpack_require__(478);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__trial_balance_trial_balance__ = __webpack_require__(479);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__admin_privileges_manage_rewards_redemption_manage_rewards_redemption__ = __webpack_require__(112);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__rewards_trial_balance_rewards_trial_balance__ = __webpack_require__(482);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__accounts_transactions_accounts_transactions__ = __webpack_require__(170);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__manage_pod_manage_pod__ = __webpack_require__(113);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__manage_deal_final_new_manage_deal_final_new__ = __webpack_require__(109);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__manage_advance_amount_manage_advance_amount__ = __webpack_require__(114);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__attach_documents_attach_documents__ = __webpack_require__(115);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__traffic_operations_traffic_operations__ = __webpack_require__(193);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__traffic_quality_control_traffic_quality_control__ = __webpack_require__(489);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
































var HomePage = /** @class */ (function () {
    function HomePage(navCtrl) {
        this.navCtrl = navCtrl;
        this.main = true;
        this.load = false;
        this.postload = false;
        this.account = false;
        this.marketing = false;
        this.report = false;
        this.fleet = false;
        this.admin = false;
        this.marketingSub = false;
    }
    HomePage_1 = HomePage;
    HomePage.prototype.Home = function () {
        this.navCtrl.setRoot(HomePage_1);
    };
    HomePage.prototype.onTrafficControl = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_31__traffic_quality_control_traffic_quality_control__["a" /* TrafficQualityControl */]);
    };
    HomePage.prototype.onManagePostLoad = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_10__manage_post_load_manage_post_load__["a" /* ManagePostLoadPage */]);
    };
    HomePage.prototype.onManageTransports = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__manage_transport_manage_transport__["a" /* ManageTransportPage */]);
    };
    HomePage.prototype.onManageCompanies = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__manage_company_list_manage_company_list__["a" /* ManageCompanyListPage */]);
    };
    HomePage.prototype.onManageTrucks = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__manage_truck_list_manage_truck_list__["a" /* ManageTruckListPage */]);
    };
    HomePage.prototype.onManageDrivers = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__manage_driver_manage_driver__["a" /* ManageDriverPage */]);
    };
    HomePage.prototype.onManageAgencies = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__manage_agencies_manage_agencies__["a" /* ManageAgenciesPage */]);
    };
    HomePage.prototype.onManageRequests = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_7__manage_request_load_manage_request_load__["a" /* ManageRequestLoadPage */]);
    };
    HomePage.prototype.onUser = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__manage_user_manage_user__["a" /* ManageUserPage */]);
    };
    HomePage.prototype.onAddCompany = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__manage_company_list_manage_company_list__["a" /* ManageCompanyListPage */]);
    };
    HomePage.prototype.onAddTransporter = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_2__manage_transport_manage_transport__["a" /* ManageTransportPage */]);
    };
    HomePage.prototype.onAddEmployee = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_9__manage_employees_manage_employees__["a" /* ManageEmployeesPage */]);
    };
    HomePage.prototype.onAddTrucks = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__manage_truck_list_manage_truck_list__["a" /* ManageTruckListPage */]);
    };
    HomePage.prototype.onAddDrivers = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__manage_driver_manage_driver__["a" /* ManageDriverPage */]);
    };
    HomePage.prototype.onAddAgency = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__manage_agencies_manage_agencies__["a" /* ManageAgenciesPage */]);
    };
    HomePage.prototype.onAddUser = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__manage_user_manage_user__["a" /* ManageUserPage */]);
    };
    HomePage.prototype.onEmployee = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_9__manage_employees_manage_employees__["a" /* ManageEmployeesPage */]);
    };
    HomePage.prototype.onLoadsAvailability = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_11__loads_availability_loads_availability__["a" /* LoadsAvailabilityPage */]);
    };
    HomePage.prototype.onTrucksAvailability = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_12__trucks_availability_trucks_availability__["a" /* TrucksAvailabilityPage */]);
    };
    HomePage.prototype.onDealFinal = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_13__manage_deal_final_manage_deal_final__["a" /* ManageDealFinalPage */]);
        // this.navCtrl.push(DealFinalPage);
    };
    HomePage.prototype.onDealFinalNew = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_27__manage_deal_final_new_manage_deal_final_new__["a" /* ManageDealFinalNewPage */]);
    };
    HomePage.prototype.onPaymentMode = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_15__admin_privileges_manage_payment_mode_manage_payment_mode__["a" /* ManagePaymentModePage */]);
    };
    HomePage.prototype.onPaymentType = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_14__admin_privileges_manage_payment_type_manage_payment_type__["a" /* ManagePaymentTypePage */]);
    };
    HomePage.prototype.onRequstLoadCancel = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_16__admin_privileges_manage_cancel_reasons_manage_cancel_reasons__["a" /* ManageCancelReasonsPage */], { name: 'Request Load' });
    };
    HomePage.prototype.onPostLoadCancel = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_16__admin_privileges_manage_cancel_reasons_manage_cancel_reasons__["a" /* ManageCancelReasonsPage */], { name: 'Post Load' });
    };
    HomePage.prototype.onDealFinalCancel = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_16__admin_privileges_manage_cancel_reasons_manage_cancel_reasons__["a" /* ManageCancelReasonsPage */], { name: 'Deal Final' });
    };
    HomePage.prototype.onAccountTypes = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_17__admin_privileges_manage_account_types_manage_account_types__["a" /* ManageAccountTypesPage */]);
    };
    HomePage.prototype.onAccountCategories = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_18__admin_privileges_manage_account_categories_manage_account_categories__["a" /* ManageAccountCategoriesPage */]);
    };
    HomePage.prototype.onAccountMaster = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_19__manage_accounts_master_manage_accounts_master__["a" /* ManageAccountsMasterPage */]);
    };
    HomePage.prototype.onAccountsLedger = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_20__manage_accounts_ledger_manage_accounts_ledger__["a" /* ManageAccountsLedgerPage */]);
    };
    HomePage.prototype.onRewards = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_23__admin_privileges_manage_rewards_redemption_manage_rewards_redemption__["a" /* ManageRewardsRedemptionPage */]);
    };
    HomePage.prototype.onRewardsLedger = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_21__rewards_ledger_rewards_ledger__["a" /* RewardsLedgerPage */]);
    };
    HomePage.prototype.onTrialBalance = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_22__trial_balance_trial_balance__["a" /* TrialBalancePage */]);
    };
    HomePage.prototype.onRewardsTrialBalance = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_24__rewards_trial_balance_rewards_trial_balance__["a" /* RewardsTrialBalancePage */]);
    };
    HomePage.prototype.onAccountsTransactions = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_25__accounts_transactions_accounts_transactions__["a" /* AccountsTransactionsPage */]);
    };
    HomePage.prototype.onPOD = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_26__manage_pod_manage_pod__["a" /* ManagePodPage */]);
    };
    HomePage.prototype.onAdvanceAmount = function () {
        // this.navCtrl.push(AddAdvanceAmountPage);
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_28__manage_advance_amount_manage_advance_amount__["a" /* ManageAdvanceAmountPage */]);
    };
    HomePage.prototype.onAttachDocuments = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_29__attach_documents_attach_documents__["a" /* AttachDocumentsPage */]);
    };
    HomePage.prototype.onDealFinalDashboard = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_30__traffic_operations_traffic_operations__["a" /* TrafficOperationsPage */]);
    };
    HomePage.prototype.showPostLoad = function () {
        this.main = false;
        this.postload = true;
        this.load = false;
        this.account = false;
        this.marketing = false;
        this.report = false;
        this.fleet = false;
        this.admin = false;
    };
    HomePage.prototype.showLoad = function () {
        this.main = false;
        this.postload = false;
        this.load = true;
        this.account = false;
        this.marketing = false;
        this.report = false;
        this.fleet = false;
        this.admin = false;
    };
    HomePage.prototype.showAccount = function () {
        this.main = false;
        this.postload = false;
        this.load = false;
        this.account = true;
        this.marketing = false;
        this.report = false;
        this.fleet = false;
        this.admin = false;
    };
    HomePage.prototype.showMarket = function () {
        this.main = false;
        this.postload = false;
        this.load = false;
        this.account = false;
        this.marketing = true;
        this.report = false;
        this.fleet = false;
        this.admin = false;
    };
    HomePage.prototype.showMarketSub = function () {
        this.marketingSub = true;
        this.marketing = false;
    };
    HomePage.prototype.showReport = function () {
        this.main = false;
        this.postload = false;
        this.load = false;
        this.account = false;
        this.marketing = false;
        this.report = true;
        this.fleet = false;
        this.admin = false;
    };
    HomePage.prototype.showFleet = function () {
        this.main = false;
        this.postload = false;
        this.load = false;
        this.account = false;
        this.marketing = false;
        this.report = false;
        this.fleet = true;
        this.admin = false;
    };
    HomePage.prototype.showAdmin = function () {
        this.main = false;
        this.postload = false;
        this.load = false;
        this.account = false;
        this.marketing = false;
        this.report = false;
        this.fleet = false;
        this.admin = true;
    };
    HomePage = HomePage_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-home',template:/*ion-inline-start:"D:\truck\src\pages\home\home.html"*/'<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n        <button ion-button menuToggle>\n            <ion-icon name="menu"></ion-icon>\n        </button>\n        <ion-title>Indiana Trucking Backoffice</ion-title>\n        <ion-buttons end>\n            <button ion-button icon-only (click)="Home()" >\n                <ion-icon name="home" ></ion-icon>\n            </button>\n        </ion-buttons>\n    </ion-toolbar>\n    \n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n    <div *ngIf="main">\n        <div class="nav-item" (click)="showPostLoad()">\n        <span class="icon-container"><i class="fa fa-cube menu-icon"></i></span>\n        <span class="text">Post Load</span>\n        </div>\n        <div class="nav-item" (click)="showLoad()">\n            <span class="icon-container"><i class="fa fa-cubes menu-icon"></i></span>\n            <span class="text">Loads</span>\n        </div>\n        <div class="nav-item" (click)="showAccount()">\n            <span class="icon-container"><ion-icon name="folder" class="menu-icon"></ion-icon></span>\n            <span class="text">Accounts</span>\n        </div>\n        <div class="nav-item" (click)="showMarket()">\n            <span class="icon-container"><i class="fa fa-group menu-icon"></i></span>\n            <span class="text">Marketing</span>\n        </div>\n\n        <div class="clearfix"></div>\n\n        <div class="nav-item">\n            <span class="icon-container"><i class="fa fa-building menu-icon"></i></span>\n\n            <span class="text">Company Bidding</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"><i class="fa fa-truck menu-icon"></i></span>\n            <span class="text">Truck Bidding</span>\n        </div>\n        <div class="nav-item" (click)="showReport()">\n            <span class="icon-container"><i class="fa fa-file menu-icon"></i></span>\n            <span class="text">Fin.Reports</span>\n        </div>\n        <div class="nav-item" (click)="showFleet()">\n            <span class="icon-container"><ion-icon name="list-box" class="menu-icon"></ion-icon></span>\n            <span class="text">Fleet Management</span>\n        </div>\n\n        <div class="clearfix"></div>\n\n        <div class="nav-item" (click)="showAdmin()">\n            <span class="icon-container"><ion-icon name="contact" class="menu-icon"></ion-icon></span>\n            <span class="text">Admin Priviliges</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"><i class="fa fa-hdd-o menu-icon"></i></span> \n            <span class="text">Driver App</span>\n        </div>\n        <!-- <div class="nav-item" (click)="onDealFinal()">\n            <span class="icon-container"> <i class="fa fa-handshake-o menu-icon"></i></span>\n            <span class="text">Deal Final</span>\n        </div> -->\n\n        <div class="nav-item" (click)="onDealFinalNew()">\n            <span class="icon-container"> <i class="fa fa-handshake-o menu-icon"></i></span>\n            <span class="text">Deal Final</span>\n        </div>\n\n        <div class="nav-item" (click)="onDealFinalDashboard()">\n            <span class="icon-container"> <ion-icon name="home" class="menu-icon"></ion-icon></span>\n            <span class="text">Deal Final Dashboard</span>\n        </div>\n\n        <div class="nav-item" (click)="onTrafficControl()">\n            <span class="icon-container"> <ion-icon name="home" class="menu-icon"></ion-icon></span>\n            <span class="text">Traffic Quality Control</span>\n        </div>\n\n        \n    </div>\n\n    \n\n    <div *ngIf="postload">\n        <div class="nav-item" (click)="onManagePostLoad()">\n            <span class="icon-container"><ion-icon name="logo-codepen" class="menu-icon"></ion-icon></span>\n            <span class="text">Post Load</span>\n        </div>\n        <div class="nav-item" (click)="onTrucksAvailability()">\n            <span class="icon-container"><i class="fa fa-truck menu-icon"></i></span>\n            <span class="text">Trucks Availability</span>\n        </div>\n    </div>\n\n    <div *ngIf="load">\n        <div class="nav-item" (click)="onManageRequests()">\n            <span class="icon-container"><ion-icon name="logo-codepen" class="menu-icon"></ion-icon></span>\n            <span class="text">Request Load</span>\n        </div>\n        <div class="nav-item" (click)="onLoadsAvailability()">\n            <span class="icon-container"> <ion-icon name="clipboard" class="menu-icon"></ion-icon></span>\n            <span class="text">Loads Availability</span>\n        </div>\n    </div>\n\n    <div *ngIf="account">\n        <div class="nav-item" (click)="onAccountsLedger()">\n            <span class="icon-container"><ion-icon name="book" class="menu-icon"></ion-icon></span>\n            <span class="text">Accounts Ledger</span>\n        </div>\n\n        <div class="nav-item" (click)="onRewardsLedger()">\n            <span class="icon-container"><i class="fa fa-trophy menu-icon"></i></span>\n            <span class="text">Rewards Ledger</span>\n        </div>\n        <!-- <i class="far fa-award"></i> -->\n        <div class="nav-item" (click)="onPOD()">\n            <span class="icon-container"> <ion-icon name="bookmarks" class="menu-icon"></ion-icon></span>\n            <span class="text">POD</span>\n        </div>\n\n        <div class="nav-item" (click)="onTrialBalance()">\n            <span class="icon-container"> <ion-icon name="bookmarks" class="menu-icon"></ion-icon></span>\n            <span class="text">Accounts Trial Balance</span>\n        </div>\n\n        <div class="clearfix"></div>\n\n        <div class="nav-item" (click)="onRewardsTrialBalance()">\n            <span class="icon-container"> <ion-icon name="bookmarks" class="menu-icon"></ion-icon></span>\n            <span class="text">Rewards Trial Balance</span>\n        </div>\n\n        <div class="nav-item" (click)="onAccountsTransactions()">\n            <span class="icon-container"> <ion-icon name="book" class="menu-icon"></ion-icon> </span>\n            <span class="text"> Accounts Transactions</span>\n        </div>\n        \n        <div class="nav-item" (click)="onAdvanceAmount()">\n            <span class="icon-container"> <ion-icon name="cash" class="menu-icon"></ion-icon> </span>\n            <span class="text"> DF Receipt & Payment</span>\n        </div>\n       \n\n        \n\n        \n    </div>\n\n    <div *ngIf="marketing">\n        <div class="nav-item" (click)="onAddCompany()">\n            <span class="icon-container"><i class="fa fa-building menu-icon"></i></span>\n            <span class="text">Add Company</span>\n        </div>\n        <div class="nav-item" (click)="onAddTransporter()">\n            <span class="icon-container"> <i class="fa fa-road menu-icon"></i></span>\n            <span class="text">Add Transporter</span>\n        </div>\n        <div class="nav-item" (click)="onAddEmployee()">\n            <span class="icon-container"><ion-icon name="man" class="menu-icon"></ion-icon></span>\n            <span class="text">Add Employee</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"> <ion-icon name="contacts" class="menu-icon"></ion-icon></span>\n            <span class="text">Post Driver Vacancy</span>\n        </div>\n\n        <div class="clearfix"></div>\n\n        <div class="nav-item">\n            <span class="icon-container"><ion-icon name="contact" class="menu-icon"></ion-icon></span>\n            <span class="text">Employee Target</span>\n        </div>\n        <div class="nav-item" (click)="showMarketSub()">\n            <span class="icon-container"> <ion-icon name="paper" class="menu-icon"></ion-icon></span>\n            <span class="text">Mkt.Reports</span>\n        </div>\n    </div>\n\n    <div *ngIf="marketingSub">\n        <div class="nav-item">\n            <span class="icon-container"><ion-icon name="document" class="menu-icon"></ion-icon></span>\n            <span class="text">Employee Performance</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"> <ion-icon name="clipboard" class="menu-icon"></ion-icon></span>\n            <span class="text">Employee Tracking</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"><ion-icon name="globe" class="menu-icon"></ion-icon></span>\n            <span class="text">State Wise Business</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"> <ion-icon name="logo-buffer" class="menu-icon"></ion-icon></span>\n            <span class="text">Inventory</span>\n        </div>\n    </div>\n\n    <div *ngIf="report">\n        <div class="nav-item">\n            <span class="icon-container"><ion-icon name="logo-usd" class="menu-icon"></ion-icon></span>\n            <span class="text">Rate of Return</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"> <ion-icon name="logo-yen" class="menu-icon"></ion-icon></span>\n            <span class="text">Yield</span>\n        </div>\n    </div>\n\n    <div *ngIf="fleet">\n        <div class="nav-item" (click)="onAddTrucks()">\n            <span class="icon-container"><i class="fa fa-truck menu-icon"></i></span>\n            <span class="text">Add Trucks</span>\n        </div>\n        <div class="nav-item" (click)="onAddDrivers()">\n            <span class="icon-container"> <ion-icon name="contacts" class="menu-icon"></ion-icon></span>\n            <span class="text">Add Drivers</span>\n        </div>\n        <div class="nav-item" (click)="onAttachDocuments()">\n            <span class="icon-container"><ion-icon name="document" class="menu-icon"></ion-icon></span>\n            <span class="text">Attach Documents</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"> <ion-icon name="logo-buffer" class="menu-icon"></ion-icon></span>\n            <span class="text">Document Expiry / Reminder</span>\n        </div>\n\n        <div class="clearfix"></div>\n\n        <div class="nav-item">\n            <span class="icon-container"><ion-icon name="checkbox" class="menu-icon"></ion-icon></span>\n            <span class="text">Truck Verification</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"> <ion-icon name="browsers" class="menu-icon"></ion-icon></span>\n            <span class="text">Drivers Availability</span>\n        </div>\n    </div>\n\n    <div *ngIf="admin">\n        <div class="nav-item" (click)="onAddAgency()">\n            <span class="icon-container"><i class="fa fa-group menu-icon"></i></span>\n            <span class="text">Add Agencies</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"> <ion-icon name="globe" class="menu-icon"></ion-icon></span>\n            <span class="text">Digital Marketing</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"><ion-icon name="eye" class="menu-icon"></ion-icon></span>\n            <span class="text">Vision Target</span>\n        </div>\n        <div class="nav-item">\n            <span class="icon-container"> <ion-icon name="wifi" class="menu-icon"></ion-icon></span>\n            <span class="text">Fastag</span>\n        </div>\n\n        <div class="clearfix"></div>\n\n        <div class="nav-item" (click)="onAddUser()">\n            <span class="icon-container"><ion-icon name="contact" class="menu-icon"></ion-icon></span>\n            <span class="text">User Creation</span>\n        </div>\n\n        <div class="nav-item" (click)="onPaymentMode()">\n            <span class="icon-container"><ion-icon name="card" class="menu-icon"></ion-icon></span>\n            <span class="text">Payment Mode</span>\n        </div>\n \n        <div class="nav-item" (click)="onPaymentType()">\n            <span class="icon-container"><ion-icon name="cash" class="menu-icon"></ion-icon></span>\n            <span class="text">Payment Type</span>\n        </div>\n\n        <div class="nav-item" (click)="onRequstLoadCancel()">\n            <span class="icon-container"><ion-icon name="close" class="menu-icon"></ion-icon></span>\n            <span class="text">Request Load Cancel Reasons</span>\n        </div>\n\n        <div class="clearfix"></div>\n \n        <div class="nav-item" (click)="onPostLoadCancel()">\n            <span class="icon-container"><ion-icon name="close-circle" class="menu-icon"></ion-icon></span>\n            <span class="text">Post Load Cancel Reasons</span>\n        </div>\n\n        <div class="nav-item" (click)="onDealFinalCancel()">\n            <span class="icon-container"><ion-icon name="close" class="menu-icon"></ion-icon></span>\n            <span class="text">Deal Final Cancel Reasons</span>\n        </div>\n\n        <div class="nav-item" (click)="onAccountTypes()">\n            <span class="icon-container"><ion-icon name="funnel" class="menu-icon"></ion-icon></span>\n            <span class="text">Accounts Types</span>\n        </div>\n        <div class="nav-item" (click)="onAccountMaster()">\n            <span class="icon-container"><ion-icon name="folder" class="menu-icon"></ion-icon></span>\n            <span class="text">Accounts Master</span>\n        </div>\n\n        <div class="clearfix"></div>\n\n        <div class="nav-item" (click)="onAccountCategories()">\n            <span class="icon-container"><ion-icon name="list" class="menu-icon"></ion-icon></span>\n            <span class="text">Accounts Categories</span>\n        </div>\n\n        <div class="nav-item" (click)="onRewards()">\n            <span class="icon-container"><ion-icon name="list" class="menu-icon"></ion-icon></span>\n            <span class="text">Rewards Redemption</span>\n        </div>\n    \n    </div>\n\n</ion-content>'/*ion-inline-end:"D:\truck\src\pages\home\home.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */]])
    ], HomePage);
    return HomePage;
    var HomePage_1;
}());

//# sourceMappingURL=home.js.map

/***/ }),

/***/ 91:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ManagePostLoadPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_request_load__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__add_post_load_add_post_load__ = __webpack_require__(187);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__edit_post_load_edit_post_load__ = __webpack_require__(449);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__trucks_availability_trucks_availability__ = __webpack_require__(188);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__manage_deal_final_new_add_deal_final_new_add_deal_final_new__ = __webpack_require__(189);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};










/**
 * Generated class for the ManagePostLoadPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var ManagePostLoadPage = /** @class */ (function () {
    function ManagePostLoadPage(navCtrl, navParams, requestLoad, actionSheetController, admin, loader) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.requestLoad = requestLoad;
        this.actionSheetController = actionSheetController;
        this.admin = admin;
        this.loader = loader;
        this.dataList = [];
        this.getPostLoadList();
    }
    ManagePostLoadPage_1 = ManagePostLoadPage;
    ManagePostLoadPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad ManagePostLoadPage');
    };
    ManagePostLoadPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_7__home_home__["a" /* HomePage */]);
    };
    ManagePostLoadPage.prototype.addActionSheet = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.actionSheetController.create({
                            title: 'Actions',
                            buttons: [{
                                    text: 'Add Post Load',
                                    icon: 'add',
                                    handler: function () {
                                        _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__add_post_load_add_post_load__["a" /* AddPostLoadPage */]);
                                    }
                                }]
                        })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManagePostLoadPage.prototype.gotoAdd = function () {
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_5__add_post_load_add_post_load__["a" /* AddPostLoadPage */]);
    };
    ManagePostLoadPage.prototype.presentActionSheet = function (data, e) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.actionSheetController.create({
                                title: 'Actions',
                                buttons: [{
                                        text: 'Trucks Available',
                                        icon: 'cube',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_8__trucks_availability_trucks_availability__["a" /* TrucksAvailabilityPage */]);
                                        }
                                    }, {
                                        text: 'Edit Post Load',
                                        icon: 'ios-create',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_6__edit_post_load_edit_post_load__["a" /* EditPostLoadPage */], { "data": data });
                                        }
                                        // }, {
                                        //   text: 'Deal Final',
                                        //   icon: 'checkmark',
                                        //   handler: () => {
                                        //     this.navCtrl.push(DealFinalPage, {"postData": data });
                                        //   }
                                    }, {
                                        text: 'Deal Final',
                                        icon: 'checkmark',
                                        handler: function () {
                                            _this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_9__manage_deal_final_new_add_deal_final_new_add_deal_final_new__["a" /* AddDealFinalNewPage */], { "postData": data });
                                        }
                                    }, {
                                        text: 'Remove',
                                        icon: 'ios-trash',
                                        handler: function () {
                                            _this.deleteApi(data);
                                        }
                                    }]
                            })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ManagePostLoadPage.prototype.getPostLoadList = function () {
        var _this = this;
        this.loader.show();
        this.requestLoad.getPostLoadList().subscribe(function (res) {
            _this.loader.hide();
            var data = res.json();
            _this.dataList = data.results;
            _this.dataList.forEach(function (r) {
                var destinationsArray = [];
                r.destinations.forEach(function (d) {
                    destinationsArray.push(d.to);
                });
                r.destArray = destinationsArray;
                r.status = r.status ? r.status : "Pending";
            });
            console.log('Data >>>>>>>', _this.dataList);
        }, function (err) {
            _this.loader.hide();
            console.log(">>>>error", err);
        });
    };
    ManagePostLoadPage.prototype.deleteApi = function (id) {
        var _this = this;
        var load_id = id._id;
        console.log("id  >>>", load_id);
        this.requestLoad.deletePostLoadList(load_id).subscribe(function (res) {
            _this.navCtrl.push(ManagePostLoadPage_1);
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
    };
    ManagePostLoadPage = ManagePostLoadPage_1 = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-manage-post-load',template:/*ion-inline-start:"D:\truck\src\pages\manage-post-load\manage-post-load.html"*/'<!--\n  Generated template for the ManagePostLoadPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Post Load</ion-title>\n      <ion-buttons end>\n\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n\n        <button ion-button icon-only (click)="gotoAdd()" >\n            <ion-icon name="add"></ion-icon>\n        </button>\n\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <ion-card *ngFor="let rl of dataList">\n    <ion-icon name="more" class="more fright" (click)="presentActionSheet(rl, $event)"></ion-icon>\n    <!-- <ion-card-content (click)="edit(rl)"> -->\n    <ion-card-content>\n      <p class="card-header">\n        <span class="sr-no"><ion-icon name="cube"></ion-icon> #{{ rl.ticket_no }} {{ rl.company_name }}</span><br>\n        <!-- <span class="agency-name">Agency: {{ rl.agency_name }}</span><br> -->\n      </p>\n\n        \n      <div padding>\n          <div class="width-full bottom-border loadingplace">\n              <p class="left">\n               <span>{{ rl.from }}</span> <br>\n               <!-- <span>({{ rl.loading_place }})</span> -->\n              </p>\n              <p class="right">\n                <span *ngIf="rl.destinations[0]">{{ rl.destinations[0].to ? rl.destinations[0].to: "" }}</span><br>\n                <span *ngIf="rl.destinations[0]" class="fright">({{ rl.destinations[0].unloading_place ? rl.destinations[0].unloading_place: "" }})</span>\n              </p>\n          </div>\n          <div class="width-full bottom-border loading-div">\n            <div>\n              <span><b>Truck Type:</b> <br>{{ rl.truck_type }}</span>\n              <span><b>Capacity:</b><br> {{ rl.capacity }} Ton</span>\n              <span><b>Payment Type:</b><br> {{ rl.payment_mode }}</span>\n              <span><b>Status:</b><br> {{ rl.status }}</span>\n            </div>\n          </div>\n          <div class="width-full bottom-border rating">\n              <span>{{ rl.ton }} ton * {{ rl.rate }} rates</span>\n            </div>\n        </div>\n\n\n\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\manage-post-load\manage-post-load.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_4__providers_request_load__["a" /* RequestLoad */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_3__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_2__providers_loader__["a" /* LoaderProvider */]])
    ], ManagePostLoadPage);
    return ManagePostLoadPage;
    var ManagePostLoadPage_1;
}());

//# sourceMappingURL=manage-post-load.js.map

/***/ }),

/***/ 92:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Traffic; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__(88);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__api__ = __webpack_require__(56);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var Traffic = /** @class */ (function () {
    function Traffic(http, api) {
        this.http = http;
        this.api = api;
    }
    Traffic.prototype.updateDocumentType = function (id, data) {
        return this.api.put('deal_final_new/update_document_verification?id=' + id, data);
    };
    Traffic.prototype.updateBankDetails = function (id, data) {
        return this.api.put('deal_final_new/update_bank_details?id=' + id, data);
    };
    Traffic.prototype.updateReceivableCash = function (id, data) {
        return this.api.put('deal_final_new/update_receivable_cash?id=' + id, data);
    };
    Traffic.prototype.upadtePOD = function (id, data) {
        return this.api.put('deal_final_new/update_pod?id=' + id, data);
    };
    Traffic = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["Http"],
            __WEBPACK_IMPORTED_MODULE_2__api__["a" /* Api */]])
    ], Traffic);
    return Traffic;
}());

//# sourceMappingURL=traffic.js.map

/***/ }),

/***/ 980:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddAgenciesPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__helpers_common__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











/**
 * Generated class for the AddAgenciesPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddAgenciesPage = /** @class */ (function () {
    function AddAgenciesPage(navCtrl, navParams, trucks, loader, toast, fb, events, admin, mapsAPILoader, 
        // private mapsAPILoader2: MapsAPILoader,
        ngZone) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.trucks = trucks;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.events = events;
        this.admin = admin;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.agencyFlag = true;
        this.bankFlag = false;
        this.addressFlag = false;
        this.locationFlag = false;
        // routeFlag = false;
        this.acountNo = false;
        this.obj = {
            agency_name: '',
            owner_name: '',
            location: '',
            omobile_no_1: '',
            omobile_no_2: '',
            contact_person: '',
            cmobile_no_1: '',
            cmobile_no_2: '',
            account_holder_name: '',
            account_number: '',
            confirm_account_number: '',
            ifsc: '',
            address: []
        };
        this.address_location = {
            type: "Point",
            coordinates: []
        };
        this.mainAccoutsList = [];
        this.submitted = false;
        this.addForm = this.fb.group({
            agency_name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            owner_name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            location: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            omobile_no_1: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(10)])],
            omobile_no_2: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(10)])],
            contact_person: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            cmobile_no_1: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(10)])],
            cmobile_no_2: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(10)])],
            account_holder_name: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(25)])],
            account_number: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(16)])],
            confirm_account_number: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(16)])],
            ifsc: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(11), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(11)])],
            location_allotment: [''],
            location_restriction: [''],
            latitude: [''],
            longitude: [''],
            address: this.fb.array([this.createAddressForm()]),
            investor_name: [''],
            investor_percentage: [''],
            indiana_trucking_percentage: [''],
            agency_percentage: [''],
        });
        this.getAccountsMasterList();
    }
    AddAgenciesPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddAgenciesPage');
    };
    AddAgenciesPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_8__home_home__["a" /* HomePage */]);
    };
    AddAgenciesPage.prototype.ngOnInit = function () {
        //Called after the constructor, initializing input properties, and the first call to ngOnChanges.
        //Add 'implements OnInit' to the class.
    };
    AddAgenciesPage.prototype.getLocation = function (e) {
        e.preventDefault();
        this.events.broadcast('location');
    };
    AddAgenciesPage.prototype.createAddressForm = function () {
        return this.fb.group({
            address_line_1: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            address_line_2: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            city: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            state: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(2)])],
            pincode: ['', __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].minLength(6), __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].maxLength(6)])]
        });
    };
    AddAgenciesPage.prototype.confirmAccount = function () {
        if (this.addForm.value.account_number == this.addForm.value.confirm_account_number) {
            console.log("Same");
            this.acountNo = false;
        }
        else {
            console.log("Not Same");
            this.acountNo = true;
        }
    };
    Object.defineProperty(AddAgenciesPage.prototype, "addressForm", {
        // Get controls for form array for address
        get: function () {
            return this.addForm.get('address')['controls'][0].controls;
        },
        enumerable: true,
        configurable: true
    });
    AddAgenciesPage.prototype.addressData = function (e) {
        // this.formValues = this.addForm.value;
        // this.addressForm['address_line_1'].setValue(e.address_line1);
        // this.addressForm['address_line_2'].setValue(e.address_line2);
        // this.addressForm['city'].setValue(e.city);
        // this.addressForm['state'].setValue(e.state);
        // this.addressForm['pincode'].setValue(e.pincode);
        // this.address_location.coordinates = [];
        // this.address_location.coordinates.push(e.lng);
        // this.address_location.coordinates.push(e.lat);
        // this.formValues.address[0].address_location = this.address_location;
    };
    AddAgenciesPage.prototype.save = function (isValid, value) {
        var _this = this;
        this.submitted = true;
        console.log(">>>>>>>>>FormValue", isValid);
        if (isValid) {
            this.formValues = value;
            this.formValues.address[0].address_location = this.address_location;
            console.log(">>>>>>>>>FormValue", this.formValues);
            this.loader.show();
            this.trucks.addAgency(this.formValues).subscribe(function (res) {
                _this.loader.hide();
                console.log("res >>>>>", res);
                _this.addForm.reset();
                _this.toast.show({ 'message': 'Added successfully.' });
                _this.navCtrl.setRoot('ManageAgenciesPage');
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }
    };
    AddAgenciesPage.prototype.preAgency = function () {
        this.agencyFlag = true;
        this.bankFlag = false;
        this.addressFlag = false;
        this.locationFlag = false;
        // this.routeFlag = false;
    };
    AddAgenciesPage.prototype.nextBank = function () {
        this.agencyFlag = false;
        this.bankFlag = true;
        this.addressFlag = false;
        this.locationFlag = false;
        // this.routeFlag = false;
    };
    AddAgenciesPage.prototype.nextAddress = function () {
        var _this = this;
        this.agencyFlag = false;
        this.bankFlag = false;
        this.addressFlag = true;
        this.locationFlag = false;
        // this.routeFlag = false;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                console.log("searchElementRef2   >>>>>>", _this.searchElementRef2);
                var presentCity = new google.maps.places.Autocomplete(_this.searchElementRef2.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentCity.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_9__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_9__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        document.getElementById('City').value = pre_city;
                        var addr = _this.addForm.get('address');
                        var first = addr.at(0);
                        __WEBPACK_IMPORTED_MODULE_9__helpers_common__["a" /* CommonHelper */];
                        first.get('city').setValue(pre_city);
                    });
                });
                var presentState = new google.maps.places.Autocomplete(_this.searchElementRefState.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentState.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentState.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_9__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        console.log(components, place);
                        document.getElementById('State').value = components.administrative_area_level_1;
                        // this.createAddressForm['state'].setValue(components.administrative_area_level_1);
                        var addr = _this.addForm.get('address');
                        var first = addr.at(0);
                        first.get('state').setValue(components.administrative_area_level_1);
                    });
                });
            });
        }, 2000);
    };
    AddAgenciesPage.prototype.nextLocation = function () {
        var _this = this;
        this.agencyFlag = false;
        this.bankFlag = false;
        this.addressFlag = false;
        this.locationFlag = true;
        // this.routeFlag = false;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var Location = new google.maps.places.Autocomplete(_this.searchElementRef.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                Location.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = Location.getPlace();
                        var lat = place.geometry.location.lat();
                        var lng = place.geometry.location.lng();
                        localStorage.setItem('latlng', JSON.stringify({
                            lat: lat,
                            lng: lng
                        }));
                        _this.events.broadcast('location');
                        console.log("place   >>>>>>", place.address_components);
                        _this.addForm.controls['latitude'].setValue(lat);
                        _this.addForm.controls['longitude'].setValue(lng);
                        console.log("vicinity   >>>>>>", place.vicinity);
                        var components = __WEBPACK_IMPORTED_MODULE_9__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_9__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        document.getElementById('Location').value = pre_city;
                        _this.addForm.controls['location'].setValue(pre_city);
                        // this.addForm['location_allotment'].setValue(place.vicinity);
                        // //verify result
                        // if (place.geometry === undefined || place.geometry === null) {
                        //   return;
                        // }
                    });
                });
            });
        }, 4000);
    };
    // nextRoute() {
    //   this.agencyFlag = false;
    //   this.bankFlag = false;
    //   this.addressFlag = false;
    //   this.locationFlag = false;
    //   // this.routeFlag = true;
    // }
    AddAgenciesPage.prototype.getAccountsMasterList = function () {
        var _this = this;
        var agency_name = localStorage.getItem('agency_name');
        console.log("agency_name >>>>", agency_name);
        this.admin.getAccountsMasterList().subscribe(function (res) {
            var data = res.json();
            var dataList = data.results;
            dataList.forEach(function (element) {
                _this.mainAccoutsList.push(element.account_name);
            });
            console.log("mainAccoutsList >>>>", _this.mainAccoutsList);
        }, function (err) {
            console.log(">>>>error", err);
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddAgenciesPage.prototype, "searchElementRef", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search2"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddAgenciesPage.prototype, "searchElementRef2", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search3"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddAgenciesPage.prototype, "searchElementRefState", void 0);
    AddAgenciesPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-agencies',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\add-agencies\add-agencies.html"*/'<!--\n  Generated template for the AddAgenciesPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add Agency</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="addForm" (ngSubmit)="save(addForm.valid, addForm.value)" novalidate>\n    \n    <!---------  Agency Flag  --------->\n    <div *ngIf="agencyFlag">\n      <div class="width-full">\n      <label class="fonts-size">Agency Details</label>\n      </div>\n      <div class="form-group">\n        <label class=" label">Agency name <span style="color:red">*</span> </label> \n        <input name="agency_name" type="text" formControlName="agency_name" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.agency_name.invalid && (addForm.controls.agency_name.dirty || addForm.controls.agency_name.touched))">\n        <div *ngIf="addForm.controls[\'agency_name\'].hasError(\'required\')">\n          <label>Agency name is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'agency_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'agency_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n\n      <!-- <div class="form-group">\n        <label class=" label">Location <span style="color:red">*</span></label>\n        <input name="location" type="text" formControlName="location" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.location.invalid && (addForm.controls.location.dirty || addForm.controls.location.touched))">\n        <div *ngIf="addForm.controls[\'location\'].hasError(\'required\')">\n          <label>Location is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'location\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n      </div> -->\n        \n      <div class="form-group">\n        <label class=" label">Owner name <span style="color:red">*</span> </label>\n        <input name="owner_name"  type="text" formControlName="owner_name" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.owner_name.invalid && (addForm.controls.owner_name.dirty || addForm.controls.owner_name.touched))">\n        <div *ngIf="addForm.controls[\'owner_name\'].hasError(\'required\')">\n          <label>Owner name is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'owner_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'owner_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n      \n      <div class="form-group">\n        <label class=" label">Mobile no 1  <span style="color:red">*</span></label>\n        <input name="omobile_no_1" type="text" autocomplete="off" OnlyNumber="true" placeholder="" formControlName="omobile_no_1" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.omobile_no_1.invalid && (addForm.controls.omobile_no_1.dirty || addForm.controls.omobile_no_1.touched))">\n        <div *ngIf="addForm.controls[\'omobile_no_1\'].hasError(\'required\')">\n          <label>Mobile number is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'omobile_no_1\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'omobile_no_1\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile no 2 </label>\n        <input name="omobile_no_2" type="text" autocomplete="off" OnlyNumber="true" placeholder="" formControlName="omobile_no_2" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.omobile_no_2.invalid && (addForm.controls.omobile_no_2.dirty || addForm.controls.omobile_no_2.touched))">\n        <div *ngIf="addForm.controls[\'omobile_no_2\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'omobile_no_2\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Contact person name <span style="color:red">*</span> </label>\n        <input name="contact_person" type="text" autocomplete="off" placeholder="" formControlName="contact_person" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.contact_person.invalid && (addForm.controls.contact_person.dirty || addForm.controls.contact_person.touched))">\n        <div *ngIf="addForm.controls[\'contact_person\'].hasError(\'required\')">\n          <label>Contact person name is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'contact_person\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'contact_person\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Contact Mobile no 1 <span style="color:red">*</span> </label>\n        <input name="cmobile_no_1" type="text" autocomplete="off" OnlyNumber="true" placeholder="" formControlName="cmobile_no_1" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.cmobile_no_1.invalid && (addForm.controls.cmobile_no_1.dirty || addForm.controls.cmobile_no_1.touched))">\n        <div *ngIf="addForm.controls[\'cmobile_no_1\'].hasError(\'required\')">\n          <label>Contact person mobile number is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'cmobile_no_1\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'cmobile_no_1\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>  \n\n      <div class="form-group">\n        <label class=" label">Contact Mobile no 2 </label>\n        <input name="cmobile_no_2" type="text" autocomplete="off" OnlyNumber="true" placeholder="" formControlName="cmobile_no_2" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.cmobile_no_2.invalid && (addForm.controls.cmobile_no_2.dirty || addForm.controls.cmobile_no_2.touched))">\n        <div *ngIf="addForm.controls[\'cmobile_no_2\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'cmobile_no_2\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Investor Name  </label>\n        <!-- <input name="investor_name" type="text" autocomplete="off" placeholder="" formControlName="investor_name" class="form-control">  -->\n        <select class="form-control drop-down" name="investor_name" formControlName="investor_name" >\n          <option value="">Select Investor Name</option>\n          <option *ngFor="let mal of mainAccoutsList" [ngValue]="mal">{{mal}}</option>\n        </select>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Investor (%)</label>\n        <input name="investor_percentage" type="number" autocomplete="off" placeholder="" formControlName="investor_percentage" class="form-control"> \n      </div>\n\n      <div class="form-group">\n        <label class=" label">Indiana Trucking (%)</label>\n        <input name="indiana_trucking_percentage" type="number" autocomplete="off" placeholder="" formControlName="indiana_trucking_percentage" class="form-control"> \n      </div>\n\n      <div class="form-group">\n        <label class=" label">Agency (%)</label>\n        <input name="agency_percentage" type="number" autocomplete="off" placeholder="" formControlName="agency_percentage" class="form-control"> \n      </div>\n\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="next-button" (click)="nextBank()" type="button" expand="block">Next</button>\n      </div>\n\n\n    </div>\n\n    <!---------  Bank Flag  ---------> \n    <div *ngIf="bankFlag">\n      <div class="width-full">\n      <label class="fonts-size">Bank Details</label>\n      </div>\n      <div class="form-group">\n        <label class=" label">Bank Name</label>\n        <input name="account_holder_name" type="text" placeholder="" formControlName="account_holder_name" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.account_holder_name.invalid && (addForm.controls.account_holder_name.dirty || addForm.controls.account_holder_name.touched))">\n        <div *ngIf="addForm.controls[\'account_holder_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'account_holder_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Account no </label>\n        <input name="account_number" type="text" autocomplete="off" placeholder="" formControlName="account_number" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.account_number.invalid && (addForm.controls.account_number.dirty || addForm.controls.account_number.touched))">\n        <div *ngIf="addForm.controls[\'account_number\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 16 letters.</label>\n        </div>\n      </div>\n        \n      <div class="form-group">\n        <label class=" label">Confirm account no </label>\n        <input name="confirm_account_number" autocomplete="off" type="text" placeholder="" (change)="confirmAccount()" formControlName="confirm_account_number" class="form-control"> \n      </div>\n      <div *ngIf="acountNo" class="error-msg"><label>Your account no and confirm account no do not match.</label></div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.confirm_account_number.invalid && (addForm.controls.confirm_account_number.dirty || addForm.controls.confirm_account_number.touched))">\n        <div *ngIf="addForm.controls[\'confirm_account_number\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 16 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Ifsc code </label>\n        <input name="ifsc" type="text" autocomplete="off" placeholder="" formControlName="ifsc" class="form-control upper"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.ifsc.invalid && (addForm.controls.ifsc.dirty || addForm.controls.ifsc.touched))">\n        <div *ngIf="addForm.controls[\'ifsc\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 11 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'ifsc\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 11 letters.</label>\n        </div>\n      </div>\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="preAgency()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="nextAddress()" type="button" expand="block">Next</button>\n</div>\n    </div>\n\n    <!------------ Address Flag  ---------->\n    <div *ngIf="addressFlag">\n      <div class="width-full">\n      <label class="fonts-size">Address Information </label>\n      </div><br>\n      <div formArrayName="address" *ngFor="let item of addForm.get(\'address\').controls; let i = index;">\n        <div [formGroupName]="i">\n          <div class="form-group">\n            <label class=" label">Address line 1 <span style="color:red">*</span></label>\n            <input type="text" formControlName="address_line_1" autocomplete="off" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.address_line_1.invalid && (item.controls.address_line_1.dirty || item.controls.address_line_1.touched))">\n            <div *ngIf="item.controls[\'address_line_1\'].hasError(\'required\')">\n              <label>Address line 1 is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'address_line_1\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <label class=" label">Address line 2 <span style="color:red">*</span></label>\n            <input type="text" formControlName="address_line_2" autocomplete="off" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.address_line_2.invalid && (item.controls.address_line_2.dirty || item.controls.address_line_2.touched))">\n            <div *ngIf="item.controls[\'address_line_2\'].hasError(\'required\')">\n              <label>Address line 2 is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'address_line_2\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">City <span style="color:red">*</span></label>\n            <input id="City" type="text" placeholder="Search City"  formControlName="city" class="form-control" #search2>            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.city.invalid && (item.controls.city.dirty || item.controls.city.touched))">\n            <div *ngIf="item.controls[\'city\'].hasError(\'required\')">\n              <label>City is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'city\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">State <span style="color:red">*</span></label>\n            <input id="State" placeholder="Search State"  type="text" formControlName="state" class="form-control" #search3>            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.state.invalid && (item.controls.state.dirty || item.controls.state.touched))">\n            <div *ngIf="item.controls[\'state\'].hasError(\'required\')">\n              <label>State is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'state\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">Pincode <span style="color:red">*</span></label>\n            <input type="text" OnlyNumber="true" autocomplete="off" formControlName="pincode" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.pincode.invalid && (item.controls.pincode.dirty || item.controls.pincode.touched))">\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'required\')">\n              <label>Pincode is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'maxlength\')">\n              <label>Maximum length is upto 2 letters.</label>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="nextBank()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="nextLocation()" type="button" expand="block">Next</button>\n</div>\n    </div>\n\n    <!------------ Location Flag  ---------->\n    <div *ngIf="locationFlag">\n      <div class="width-full">\n      <label class="fonts-size">Location Allotment </label>\n      </div>\n\n      <div class="form-group">\n        <input #search name="location" id="Location" type="text" placeholder="Search Location" formControlName="location" class="form-control"> \n      </div>\n<div class="width-full">\n      <ion-row right>  \n        <ion-col text-right>   \n          <button ion-button (click)="getLocation($event)"><ion-icon name="locate"></ion-icon></button>\n        </ion-col> \n      </ion-row>\n\n      <google-maps (googleAddress)="addressData($event)"></google-maps>\n      </div>\n      <br>\n\n\n      <div class="form-group">\n        <label class=" label">Location Restriction (meters)</label>\n        <input name="location_restriction" type="number" placeholder="" formControlName="location_restriction" class="form-control"> \n      </div>\n      <div class="form-group">\n        <label class=" label">Latitude </label>\n        <input name="latitude" type="text" placeholder="" formControlName="latitude" class="form-control"> \n      </div>\n      <div class="form-group">\n        <label class=" label">Longitude </label>\n        <input name="longitude" type="text" placeholder="" formControlName="longitude" class="form-control"> \n      </div>\n\n      <div class="width-full" padding>\n        <!-- <button ion-button size="large" type="submit(" [disabled]="form.invalid" expand="block">Login</button> )-->\n        <button ion-button class="pre-button-n" (click)="nextAddress()" type="button" expand="block">Previous</button>\n        <button ion-button block class="up-button" type="submit" expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Agency</button>\n      </div>\n\n       \n        \n    </div>\n\n    \n\n    \n\n\n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\add-agencies\add-agencies.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_3__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_6__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_10__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_7__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], AddAgenciesPage);
    return AddAgenciesPage;
}());

//# sourceMappingURL=add-agencies.js.map

/***/ }),

/***/ 981:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return GoogleMapsComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__helpers_common__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_event_service__ = __webpack_require__(23);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * Generated class for the GoogleMapsComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var GoogleMapsComponent = /** @class */ (function () {
    function GoogleMapsComponent(events) {
        var _this = this;
        this.events = events;
        this.googleAddress = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.googleAddressForUpdate = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.numDeltas = 100;
        this.delay = 10; //milliseconds
        this.count = 0;
        var latlng = JSON.parse(localStorage.getItem('latlng'));
        if (latlng) {
            this.lat = parseFloat(latlng.lat);
            this.lng = parseFloat(latlng.lng);
        }
        else {
            this.lat = parseFloat("23.8375602");
            this.lng = parseFloat("78.7135212");
            localStorage.setItem('latlng', JSON.stringify({ lat: this.lat, lng: this.lng }));
        }
        // if( latlng ) {
        //   this.setCurrentLocation(latlng.lat, latlng.lng);
        //   console.log("Get...........>>>")
        // }
        this.events.on('location', function () {
            console.log("ok");
            var latlng = JSON.parse(localStorage.getItem('latlng'));
            _this.setCurrentLocation(latlng.lat, latlng.lng);
        });
    }
    GoogleMapsComponent.prototype.setCurrentLocation = function (lat, lng) {
        var _this = this;
        console.log("call setCurrentLocation...........>>>");
        if ('geolocation' in navigator) {
            console.log("If In...........>>>", lat, lng);
            navigator.geolocation.getCurrentPosition(function (position) {
                _this.lat = lat ? lat : position.coords.latitude;
                _this.lng = lng ? lng : position.coords.longitude;
                _this.zoom = 15;
                _this.getGeoLocation(_this.lat, _this.lng);
                localStorage.setItem('latlng', JSON.stringify({ lat: _this.lat, lng: _this.lng }));
            });
        }
    };
    GoogleMapsComponent.prototype.markerDragEnd = function (e) {
        this.markerDraggedAddress(e.coords.lat, e.coords.lng);
        this.getGeoLocation(e.coords.lat, e.coords.lng);
    };
    // Get address from lat and lng
    GoogleMapsComponent.prototype.getGeoLocation = function (lat, lng) {
        var _this = this;
        if (navigator.geolocation) {
            var latlng = new google.maps.LatLng(lat, lng);
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                        var addr1 = __WEBPACK_IMPORTED_MODULE_1__helpers_common__["a" /* CommonHelper */].getGeocodeLocationParts(results[0]);
                        var addr2_1 = __WEBPACK_IMPORTED_MODULE_1__helpers_common__["a" /* CommonHelper */].getAddressParts(addr1);
                        setTimeout(function () {
                            _this.googleAddress.emit(addr2_1);
                            _this.googleAddressForUpdate.emit(addr2_1);
                        }, 2000);
                        var address_line2 = addr2_1.address_line2 ? addr2_1.address_line2 + ', ' : '';
                        _this.address = addr2_1.address_line1 + ', ' + address_line2 + addr2_1.city + ', ' + addr2_1.state + ', ' + addr2_1.country + ', ' + addr2_1.pincode;
                    }
                }
            });
        }
    };
    GoogleMapsComponent.prototype.markerDraggedAddress = function (lat, lng) {
        var _this = this;
        if (navigator.geolocation) {
            var latlng = new google.maps.LatLng(lat, lng);
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'latLng': latlng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[1]) {
                        var addr1 = __WEBPACK_IMPORTED_MODULE_1__helpers_common__["a" /* CommonHelper */].getGeocodeLocationParts(results[0]);
                        var addr2 = __WEBPACK_IMPORTED_MODULE_1__helpers_common__["a" /* CommonHelper */].getAddressParts(addr1);
                        _this.googleAddressForUpdate.emit(addr2);
                        var address_line2 = addr2.address_line2 ? addr2.address_line2 + ', ' : '';
                        _this.address = addr2.address_line1 + ', ' + address_line2 + addr2.city + ', ' + addr2.state + ', ' + addr2.country + ', ' + addr2.pincode;
                    }
                }
            });
        }
    };
    GoogleMapsComponent.prototype.onMapClick = function (result) {
        this.transition(result.coords.lat, result.coords.lng);
    };
    GoogleMapsComponent.prototype.transition = function (lat, lng) {
        this.count = 0;
        this.deltaLat = (lat - this.lat) / this.numDeltas;
        this.deltaLng = (lng - this.lng) / this.numDeltas;
        this.moveMarker();
    };
    GoogleMapsComponent.prototype.moveMarker = function () {
        this.lat += this.deltaLat;
        this.lng += this.deltaLng;
        var latlng = new google.maps.LatLng(this.lat, this.lng);
        // this.marker.setPosition(latlng);
        // if(this.count != this.numDeltas){
        //     this.count++;
        //     setTimeout(this.moveMarker, this.delay);
        // }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
    ], GoogleMapsComponent.prototype, "googleAddress", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"])(),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"])
    ], GoogleMapsComponent.prototype, "googleAddressForUpdate", void 0);
    GoogleMapsComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'google-maps',template:/*ion-inline-start:"D:\truck\src\components\google-maps\google-maps.html"*/'<agm-map [latitude]="lat" [longitude]="lng" (mapClick)="onMapClick($event)">\n  <!-- <agm-marker [latitude]="lat" [longitude]="lng" [markerDraggable]=true (dragEnd)="markerDragEnd($event)">\n  </agm-marker> -->\n\n\n  <agm-circle [latitude]="lat" [longitude]="lng" [radius]="500" [fillColor]="\'red\'"\n    [circleDraggable]="true" [editable]="true">\n    <agm-marker [latitude]="lat" [longitude]="lng" [markerDraggable]=true (dragEnd)="markerDragEnd($event)">\n    </agm-marker>\n  </agm-circle>\n  \n</agm-map>'/*ion-inline-end:"D:\truck\src\components\google-maps\google-maps.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__providers_event_service__["a" /* EventsService */]])
    ], GoogleMapsComponent);
    return GoogleMapsComponent;
}());

//# sourceMappingURL=google-maps.js.map

/***/ }),

/***/ 982:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OnlyNumber; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var OnlyNumber = /** @class */ (function () {
    function OnlyNumber(el) {
        this.el = el;
        this.regexStr = '^[0-9]*$';
    }
    OnlyNumber.prototype.onKeyDown = function (event) {
        var e = event;
        if (this.OnlyNumber) {
            if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) ||
                // Allow: Ctrl+C
                (e.keyCode === 67 && (e.ctrlKey || e.metaKey)) ||
                // Allow: Ctrl+V
                (e.keyCode === 86 && (e.ctrlKey || e.metaKey)) ||
                // Allow: Ctrl+X
                (e.keyCode === 88 && (e.ctrlKey || e.metaKey)) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Boolean)
    ], OnlyNumber.prototype, "OnlyNumber", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["HostListener"])('keydown', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [Object]),
        __metadata("design:returntype", void 0)
    ], OnlyNumber.prototype, "onKeyDown", null);
    OnlyNumber = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[OnlyNumber]'
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
    ], OnlyNumber);
    return OnlyNumber;
}());

//# sourceMappingURL=OnlyNumber.js.map

/***/ }),

/***/ 983:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficOpsDealsTabComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__pages_traffic_operation_traffic_operation__ = __webpack_require__(494);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__pages_traffic_quality_edit_traffic_quality_edit__ = __webpack_require__(495);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the TrafficOpsDealsTabComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficOpsDealsTabComponent = /** @class */ (function () {
    function TrafficOpsDealsTabComponent(fb, navCtrl, app) {
        this.fb = fb;
        this.navCtrl = navCtrl;
        this.app = app;
        this.deal_statuses = [
            "Deal Final",
            "Truck Verification",
            "Bank Details / Loading Status",
            "Recievable advance",
            "Pending POD - T",
            "Pending POD - C",
            "Receivable Balance",
            "Commission"
        ];
        this.isShowing = false;
        this.isEditing = false;
        this.addForm = fb.group({
            vehicleVerification: [false],
            advanceBalanceCompany: [''],
            balFrtCompany: [''],
            advanceBalanceTransporter: [''],
            balFrtTransporter: [''],
            podT: [false],
            podC: [true],
            status: [true]
        });
        // console.log();
        this.list = JSON.parse(localStorage.data);
        var __this = this;
        console.log(this.list);
        app.viewWillEnter.subscribe(function () { return __this.list = JSON.parse(localStorage.data); });
        this.pendingVerification = this.list.filter(function (e) {
            return !e.traffic_operations.document_verification;
        });
        var tmp = [];
        var tmp2 = [];
        this.list = this.list.map(function (e) {
            // tmp.push()   
            e.tmp = [];
            e.traffic_operations.bank_details.forEach(function (k) {
                // tmp.push(k.bank_amount) 
                if (!isNaN(k.bank_amount)) {
                    e.tmp.push(k.bank_amount);
                }
            });
            e.amountTotal = e.tmp.reduce(function (a, b) { return a + b; }, 0);
            return e;
        });
        this.list = this.list.map(function (e) {
            // tmp.push()   
            e.tmp2 = [];
            e.receivable_advance.forEach(function (k) {
                // tmp.push(k.bank_amount)   
                if (!isNaN(k.cheque_amount)) {
                    e.tmp2.push(k.cheque_amount);
                }
            });
            e.amountTotal_recive = e.tmp2.reduce(function (a, b) { return a + b; }, 0);
            return e;
        });
    }
    TrafficOpsDealsTabComponent.prototype.editBoth = function (id, index) {
        localStorage.setItem("index", id);
        localStorage.setItem("selectedIndex", index ? index : 0);
        if (localStorage.quality) {
            this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_4__pages_traffic_quality_edit_traffic_quality_edit__["a" /* TrafficQualityEdit */]);
            return;
        }
        this.navCtrl.push(__WEBPACK_IMPORTED_MODULE_3__pages_traffic_operation_traffic_operation__["a" /* TrafficOperationPage */]);
    };
    TrafficOpsDealsTabComponent.prototype.saveBoth = function () {
        this.isShowing = false;
    };
    TrafficOpsDealsTabComponent.prototype.save = function () {
        this.isEditing = false;
    };
    TrafficOpsDealsTabComponent.prototype.edit = function () {
        this.isEditing = true;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], TrafficOpsDealsTabComponent.prototype, "data", void 0);
    TrafficOpsDealsTabComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-ops-deals-tab',template:/*ion-inline-start:"D:\truck\src\components\traffic-ops-deals-tab\traffic-ops-deals-tab.html"*/'\n  <form [formGroup]="addForm">\n<div class="row" *ngFor="let l of list;let i = index ">\n  <ion-col col-12>\n    <h4>Info</h4>\n    <table class="table table-bordered table-striped">\n      <tr>\n        <th>DF No.</th>\n        <th>DF Date</th>\n        <th>Agency Name</th>\n        <th>Transporter</th>\n        <th>Truck No.</th>\n        <th>Consigner</th>\n        <th>From (LP)</th>\n        <th>TO (ULP)</th>\n        <th>Agency Comm</th>\n        <th>Vechicle Verified</th>\n        <th>POD Receivable</th>\n        <th>POD Submit</th>\n        <th>Action</th>\n      </tr>\n      <tr>\n        <td><span *ngIf="!isEditing">{{l.deal_no}}</span>    <input name="advanceBalanceTransporter" type="text" formControlName="advanceBalanceTransporter" class="form-control" *ngIf="isEditing"/></td>\n        <td><span *ngIf="!isEditing">{{l.deal_date}}</span>    <input name="advanceBalanceTransporter" type="text" formControlName="advanceBalanceTransporter" class="form-control" *ngIf="isEditing"/></td>\n        <td><span *ngIf="!isEditing">{{l.agency_name}}</span>    <input name="advanceBalanceTransporter" type="text" formControlName="advanceBalanceTransporter" class="form-control" *ngIf="isEditing"/></td>\n        <td><span *ngIf="!isEditing">{{l.transporter_name}}</span>     <input name="advanceBalanceTransporter" type="text" formControlName="advanceBalanceTransporter" class="form-control" *ngIf="isEditing"/></td>\n        <td><span *ngIf="!isEditing">{{l.truck_no}}</span>     <input name="advanceBalanceTransporter" type="text" formControlName="advanceBalanceTransporter" class="form-control" *ngIf="isEditing"/></td>\n        <td><span *ngIf="!isEditing">{{l.company_name}}</span>     <input name="advanceBalanceTransporter" type="text" formControlName="advanceBalanceTransporter" class="form-control" *ngIf="isEditing"/></td>\n        <td><span *ngIf="!isEditing">{{l.loading_place}}</span>     <input name="advanceBalanceTransporter" type="text" formControlName="advanceBalanceTransporter" class="form-control" *ngIf="isEditing"/></td>\n        <td><span *ngIf="!isEditing">{{l.unloading_place}}</span>     <input name="advanceBalanceTransporter" type="text" formControlName="advanceBalanceTransporter" class="form-control" *ngIf="isEditing"/></td>\n        <td><span *ngIf="!isEditing">{{l.company_commission}}</span>     <input name="advanceBalanceTransporter" type="text" formControlName="advanceBalanceTransporter" class="form-control" *ngIf="isEditing"/></td>\n        <td>\n          <input name="document_verification" checked="true" type="checkbox" *ngIf="l.traffic_operations.document_verification==true"  disabled="true"/>\n          <input name="document_verification"  type="checkbox" *ngIf="l.traffic_operations.document_verification==false"  disabled="true"/>\n        </td>\n        <td>\n          <input name="document_verification" checked="true" type="checkbox" *ngIf="l.traffic_operations.pod_t_uploaded"  disabled="true"/>\n          <input name="document_verification"  type="checkbox" *ngIf="!l.traffic_operations.pod_t_uploaded"  disabled="true"/>\n\n        </td>\n        <td>\n\n          <input name="document_verification" checked="true" type="checkbox" *ngIf="l.traffic_operations.pod_c_uploaded"  disabled="true"/>\n          <input name="document_verification"  type="checkbox" *ngIf="!l.traffic_operations.pod_c_uploaded"  disabled="true"/>\n\n        </td>\n        <td></td>\n\n        <!-- <td *ngIf="!isEditing"> <button class="btn btn-primary btn-block" (click)="edit()">Edit</button> </td> -->\n        <!-- <td *ngIf="isEditing"> <button class="btn btn-success btn-block" (click)="save()">Save</button> </td> -->\n      </tr>\n\n    \n      <tr *ngIf="!isShowing">\n        <th class="lightBg" colspan="2">Company</th>\n        <th class="lightBg" colspan="2">Fright</th>\n        <th class="lightBg" colspan="2">{{l.transporter_freight}}</th>\n        <th colspan="2">Transporter</th>\n        <th  colspan="2">Fright</th>\n        <th  colspan="2">{{l.transporter_freight}}</th>\n        <th></th>\n      </tr>\n      <tr *ngIf="!isShowing">\n        <th class="lightBg">Cash Advance </th>\n        <th class="lightBg">Diesal Advance</th>\n        <th class="lightBg">Oth Advance</th>\n        <th class="lightBg">Oth Ded.</th>\n        <th class="lightBg">Bal Recived</th>\n        <th class="lightBg">Bal Fright</th>\n          <th>Cash Advance</th>\n        <th>Diesal Advance</th>\n        <th>Oth Advance</th>\n        <th>Oth Ded. / Comm.</th>\n        <th>Bal Paid</th>\n        <th>Bal Fright</th>\n        <th></th>\n      </tr>\n      <tr   >\n        <td class="lightBg">{{l.company_advance}} </td>\n        <td class="lightBg">0 </td>\n        <td class="lightBg">0 </td>\n        <td class="lightBg">0 </td>\n        <td class="lightBg">{{l.amountTotal_recive}} </td>\n        <td class="lightBg">{{(l.transporter_freight)-l.amountTotal_recive}} </td>\n\n        <td>{{l.transporter_advance-l.company_commission}} </td>\n        <td>0 </td>\n        <td>0 </td>\n        <td>{{l.company_commission}} </td>\n        <td>{{l.amountTotal}} </td>\n        <td>{{l.transporter_freight-l.amountTotal}} </td>\n        <td> <button class="btn btn-primary btn-block" (click)="editBoth(i)" >Edit</button> </td>\n\n      </tr>\n      \n        \n\n    </table>\n\n  </ion-col>\n  <ion-col col-12 *ngIf="isShowing">\n\n  <div class="row" >\n  <ion-col col-6>\n    <h4>Company</h4>\n    <table class="table table-bordered">\n      <tr>\n        <td>C-Freight</td>\n        <td>0</td>\n      </tr>\n      <tr>\n        <td>Dec.Adv</td>\n        <td>10000</td>\n      </tr>\n      <tr>\n        <td>Comm</td>\n        <td>1200</td>\n      </tr>\n    </table>\n\n    <div class="form-group">\n      <label class="label">Adv Bal</label>\n      <input name="advanceBalanceCompany" type="text" formControlName="advanceBalanceCompany" class="form-control" /> \n    </div>\n\n    <div class="form-group">\n      <label class="label">Bal Frt</label>\n      <input name="balFrtCompany" type="text" formControlName="balFrtCompany" class="form-control" /> \n    </div>\n  </ion-col>\n  <ion-col col-6>\n    <h4>Transporter</h4>\n    <table class="table table-bordered">\n      <tr>\n        <td>T-Freight</td>\n        <td>0</td>\n      </tr>\n      <tr>\n        <td>Dec.Adv</td>\n        <td>6000</td>\n      </tr>\n      <tr>\n        <td>Comm</td>\n        <td>1200</td>\n      </tr>\n      <tr>\n        <td>Advance</td>\n        <td>5000</td>\n      </tr>\n      <tr>\n        <td>Cash</td>\n        <td>0</td>\n      </tr>\n      <tr>\n        <td>Diesal</td>\n        <td>1000</td>\n      </tr>\n      <tr>\n        <td>POD-T</td>\n        <td>\n          <input name="podT" type="checkbox" disabled="false" formControlName="podT" /> \n        </td>\n      </tr>\n      <tr>\n        <td>POD-C</td>\n        <td><input name="podC" type="checkbox" disabled="false"formControlName="podC" /> </td>\n      </tr>\n    </table>\n\n    <div class="form-group">\n      <label class="label">Adv Bal</label>\n      <input name="advanceBalanceTransporter" type="text" formControlName="advanceBalanceTransporter" class="form-control" /> \n    </div>\n\n    <div class="form-group">\n      <label class="label">Bal Frt</label>\n      <input name="balFrtTransporter" type="text" formControlName="balFrtTransporter" class="form-control" /> \n    </div>\n  </ion-col>\n  </div>\n  <div class="text-center">\n  <div class="btn_block"><button class="btn btn-success btn-block" (click)="saveBoth()">Save</button></div>\n</div>\n  </ion-col>\n\n\n</div>\n  </form>\n'/*ion-inline-end:"D:\truck\src\components\traffic-ops-deals-tab\traffic-ops-deals-tab.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_2_ionic_angular__["b" /* App */]])
    ], TrafficOpsDealsTabComponent);
    return TrafficOpsDealsTabComponent;
}());

//# sourceMappingURL=traffic-ops-deals-tab.js.map

/***/ }),

/***/ 984:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficOpsTrucksVerificationComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__providers_fleet_management__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_traffic__ = __webpack_require__(92);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_toast__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the TrafficOpsTrucksVerificationComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficOpsTrucksVerificationComponent = /** @class */ (function () {
    function TrafficOpsTrucksVerificationComponent(fleetManagement, traffic, toast) {
        this.fleetManagement = fleetManagement;
        this.traffic = traffic;
        this.toast = toast;
    }
    TrafficOpsTrucksVerificationComponent.prototype.ngOnInit = function () {
        this.datas = JSON.parse(localStorage.data)[Number(localStorage.index)];
        this.fetchDocs(JSON.parse(localStorage.data)[Number(localStorage.index)].truck_no);
    };
    TrafficOpsTrucksVerificationComponent.prototype.fetchDocs = function (truckNo) {
        var _this = this;
        console.log(this.datas);
        this.fleetManagement.getfilesList(this.datas.truck_no).subscribe(function (res) {
            var fileList = res.json(); // existing files
            var finalList = [];
            fileList.forEach(function (mf) {
                mf.files.forEach(function (f) {
                    var endDt = __WEBPACK_IMPORTED_MODULE_2_moment__(f.enddate);
                    var today = __WEBPACK_IMPORTED_MODULE_2_moment__();
                    f.is_expired = endDt.isBefore(today);
                    finalList.push(f);
                });
            });
            console.log(finalList);
            _this.fileList = finalList;
        });
    };
    TrafficOpsTrucksVerificationComponent.prototype.documentTypeOkay = function () {
        var _this = this;
        var obj = {
            document_verification: true
        };
        this.traffic.updateDocumentType(this.datas._id, obj).subscribe(function (res) {
            _this.datas.traffic_operations.document_verification = true;
            _this.toast.show({ 'message': 'Updated successfully.' });
            console.log("Okay >>>", _this.datas);
            var dt = JSON.parse(localStorage.data).map(function (e, i) {
                if (i == Number(localStorage.index)) {
                    e.traffic_operations.document_verification = true;
                }
                return e;
            });
            localStorage.data = JSON.stringify(dt);
        }, function (err) {
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
    };
    TrafficOpsTrucksVerificationComponent.prototype.documentTypeNotOkay = function () {
        // console.log("NotOkay");
        var _this = this;
        var obj = {
            document_verification: false
        };
        this.traffic.updateDocumentType(JSON.parse(localStorage.data)[Number(localStorage.index)]._id, obj).subscribe(function (res) {
            _this.datas.traffic_operations.document_verification = false;
            _this.toast.show({ 'message': 'Updated successfully.' });
            console.log("NotOkay >>>", _this.datas);
            var dt = JSON.parse(localStorage.data).map(function (e, i) {
                if (i == Number(localStorage.index)) {
                    e.traffic_operations.document_verification = false;
                }
                return e;
            });
            localStorage.data = JSON.stringify(dt);
        }, function (err) {
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], TrafficOpsTrucksVerificationComponent.prototype, "data", void 0);
    TrafficOpsTrucksVerificationComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-ops-trucks-verification',template:/*ion-inline-start:"D:\truck\src\components\traffic-ops-trucks-verification\traffic-ops-trucks-verification.html"*/'<div class="row">\n    <ion-col col-6>\n        <h4>Documents</h4>\n        <hr>\n        <table class="table table-bordered table-striped">\n            <tr>\n                <th>\n                   Document \n                </th>\n                <th>\n                    Expiry\n                </th>\n            </tr>\n            <tr *ngFor="let doc of fileList">\n                <td>\n                    {{ doc.documentname }}\n                </td>\n                <td [ngClass]="{\'expired\': doc.is_expired}">\n                    {{ doc.enddate | date }}\n                </td>\n            </tr>\n        </table>\n        <p>No documents yet.</p>\n        <p><button class="btn btn-success btn-block" (click)="documentTypeOkay()">Okay</button></p>\n        <p><button class="btn btn-success btn-block" (click)="documentTypeNotOkay()">Not Okay</button></p>\n    </ion-col>\n</div>'/*ion-inline-end:"D:\truck\src\components\traffic-ops-trucks-verification\traffic-ops-trucks-verification.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__providers_fleet_management__["a" /* FleetManagement */],
            __WEBPACK_IMPORTED_MODULE_3__providers_traffic__["a" /* Traffic */],
            __WEBPACK_IMPORTED_MODULE_4__providers_toast__["a" /* ToastProvider */]])
    ], TrafficOpsTrucksVerificationComponent);
    return TrafficOpsTrucksVerificationComponent;
}());

//# sourceMappingURL=traffic-ops-trucks-verification.js.map

/***/ }),

/***/ 985:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficOpsBankDetailComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_traffic__ = __webpack_require__(92);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the TrafficOpsBankDetailComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficOpsBankDetailComponent = /** @class */ (function () {
    function TrafficOpsBankDetailComponent(fb, admin, loader, toast, events, traffic) {
        var _this = this;
        this.fb = fb;
        this.admin = admin;
        this.loader = loader;
        this.toast = toast;
        this.events = events;
        this.traffic = traffic;
        this.isAddnew = false;
        this.datas = [];
        console.log('Hello TrafficOpsBankDetailComponent Component');
        this.text = 'Hello World';
        this.data = JSON.parse(localStorage.data)[Number(localStorage.index)];
        this.datas = JSON.parse(localStorage.data)[Number(localStorage.index)];
        this.datas.traffic_operations.bank_details.map(function (e) {
            console.log(_this.datas.transporter_freight);
            e.final_amount = _this.datas.transporter_freight - e.bank_amount;
            _this.datas.transporter_freight = e.final_amount;
            return e;
        });
        this.addForm = this.fb.group({
            bank_details: [''],
            bank_name: [''],
            account_no: [''],
            ifsc_code: [''],
            bank_amount: [''],
            company_commission: [''],
            diesel_details: [''],
            diesel_name: [''],
            mobile_no: [''],
            serivce_provider: [''],
            diesel_amount: [''],
            loading_confirmed: [false],
        });
    }
    TrafficOpsBankDetailComponent.prototype.ngOnInit = function () {
        console.log("data >>>", this.data);
        this.data = JSON.parse(localStorage.data)[Number(localStorage.index)];
        if (this.data.traffic_operations && this.data.traffic_operations.bank_details) {
            this.addForm.controls['bank_details'].setValue(this.data.traffic_operations.bank_details[localStorage.selectedIndex].bank_details);
            this.addForm.controls['bank_name'].setValue(this.data.traffic_operations.bank_details[localStorage.selectedIndex].bank_name);
            this.addForm.controls['account_no'].setValue(this.data.traffic_operations.bank_details[localStorage.selectedIndex].account_no);
            this.addForm.controls['ifsc_code'].setValue(this.data.traffic_operations.bank_details[localStorage.selectedIndex].ifsc_code);
            this.addForm.controls['bank_amount'].setValue(this.data.traffic_operations.bank_details[localStorage.selectedIndex].bank_amount);
            this.addForm.controls['company_commission'].setValue(this.data.company_commission);
            this.addForm.controls['diesel_details'].setValue(this.data.traffic_operations.bank_details[localStorage.selectedIndex].diesel_details);
            this.addForm.controls['diesel_name'].setValue(this.data.traffic_operations.bank_details[localStorage.selectedIndex].diesel_name);
            this.addForm.controls['mobile_no'].setValue(this.data.traffic_operations.bank_details[localStorage.selectedIndex].mobile_no);
            this.addForm.controls['serivce_provider'].setValue(this.data.traffic_operations.bank_details[localStorage.selectedIndex].serivce_provider);
            this.addForm.controls['diesel_amount'].setValue(this.data.traffic_operations.bank_details[localStorage.selectedIndex].diesel_amount);
            this.addForm.controls['loading_confirmed'].setValue(this.data.traffic_operations.bank_details[localStorage.selectedIndex].loading_confirmed);
        }
    };
    TrafficOpsBankDetailComponent.prototype.save = function () {
        // this.addForm.value
        var _this = this;
        var obj = {
            bank_details: this.addForm.value.bank_details,
            bank_name: this.addForm.value.bank_name,
            account_no: this.addForm.value.account_no,
            ifsc_code: this.addForm.value.ifsc_code,
            bank_amount: this.addForm.value.bank_amount,
            diesel_details: this.addForm.value.diesel_details,
            diesel_name: this.addForm.value.diesel_name,
            mobile_no: this.addForm.value.mobile_no,
            serivce_provider: this.addForm.value.serivce_provider,
            diesel_amount: this.addForm.value.diesel_amount,
        };
        if (this.isAddnew) {
            this.data.traffic_operations.bank_details.push(obj);
        }
        else {
            this.data.traffic_operations.bank_details[localStorage.selectedIndex] = obj;
        }
        console.log(this.data.traffic_operations.bank_details);
        this.traffic.updateBankDetails(this.data._id, this.data.traffic_operations.bank_details).subscribe(function (res) {
            _this.toast.show({ 'message': 'Updated successfully.' });
            console.log("Okay >>>", _this.data);
        }, function (err) {
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
    };
    TrafficOpsBankDetailComponent.prototype.addNew = function () {
        this.isAddnew = true;
        if (this.data.traffic_operations && this.data.traffic_operations.bank_details) {
            this.addForm.controls['bank_details'].setValue("");
            this.addForm.controls['bank_name'].setValue("");
            this.addForm.controls['account_no'].setValue("");
            this.addForm.controls['ifsc_code'].setValue("");
            this.addForm.controls['bank_amount'].setValue("");
            // this.addForm.controls['company_commission'].setValue("");
            this.addForm.controls['diesel_details'].setValue("");
            this.addForm.controls['diesel_name'].setValue("");
            this.addForm.controls['mobile_no'].setValue("");
            this.addForm.controls['serivce_provider'].setValue("");
            this.addForm.controls['diesel_amount'].setValue("");
            this.addForm.controls['loading_confirmed'].setValue("");
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], TrafficOpsBankDetailComponent.prototype, "data", void 0);
    TrafficOpsBankDetailComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-ops-bank-detail',template:/*ion-inline-start:"D:\truck\src\components\traffic-ops-bank-detail\traffic-ops-bank-detail.html"*/'<!-- <table class="table table-bordered">\n  <tbody>\n    <tr>\n        <td class="deal-group" colspan="2"><b>Bank Details</b></td>\n    </tr>\n    <tr>\n        <td class="deal-group">Agency Name</td>\n        <td class="deal-group">Bank Details</td>\n        <td class="company-group">Diesal Details</td>\n        <td class="tp-group"> </td>\n    </tr>\n    <tr>\n        <td class="deal-group">DF No</td>\n        <td class="deal-group">Name</td>\n        <td class="company-group">Name</td>\n        <td class="tp-group"> </td>\n    </tr>\n    <tr>\n        <td class="deal-group">Date</td>\n        <td class="deal-group">Account No</td>\n        <td class="company-group">Mobile No</td>\n        <td class="tp-group"> </td>\n    </tr>\n    <tr>\n        <td class="deal-group">Transporter</td>\n        <td class="deal-group">IFSC Code</td>\n        <td class="company-group">Service Provider</td>\n        <td class="tp-group">Loading</td>\n    </tr>\n    <tr>\n        <td class="deal-group">Truck No</td>\n        <td class="deal-group">Amount</td>\n        <td class="company-group">Amount</td>\n        <td class="tp-group">Confirmed</td>\n    <tr>\n        <td>It Waddammana</td>\n        <td><input type="text"></td>\n        <td><input type="text"></td>\n        <td><input type="checkbox"></td>\n    </tr>\n    <tr>\n        <td>2</td>\n        <td><input type="text"></td>\n        <td><input type="text"></td>\n        <td><input type="checkbox"></td>\n    </tr>\n    <tr>\n        <td>18/09/2018</td>                                                                                         \n        <td><input type="text"></td>\n        <td><input type="text"></td>\n        <td><input type="checkbox"></td>    \n    </tr>\n    <tr>\n        <td>Dinesh Yadav</td>                                                                                         \n        <td><input type="text"></td>\n        <td><input type="text"></td>\n        <td><input type="checkbox"></td>    \n    </tr>\n    <tr>\n        <td>mh31de18</td>\n        <td><input type="text"></td>\n        <td><input type="text"></td>\n        <td><input type="checkbox"></td>\n    </tr>\n  </tbody>\n</table> -->\n\n<form [formGroup]="addForm">\n    <div class="row">\n        <ion-col col-12>\n                <h4 >Bank Details</h4>\n            <div class="form-group">\n                <label class="label">Bank Name</label>\n                <input name="advanceBalanceCompany" formControlName="bank_details" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Customer Name</label>\n                <input name="advanceBalanceCompany" formControlName="bank_name" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Account No</label>\n                <input name="advanceBalanceCompany" formControlName="account_no" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">IFSC Code</label>\n                <input name="advanceBalanceCompany" formControlName="ifsc_code" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Amount</label>\n                <input name="advanceBalanceCompany" formControlName="bank_amount" type="number" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Comm</label>\n                <input name="advanceBalanceCompany" formControlName="company_commission" type="number" class="form-control" /> \n            </div>\n        </ion-col>\n        <ion-col col-12>\n                <h4 >Diesel Details</h4>\n\n            <div class="form-group">\n                <label class="label">Diesel Details</label>\n                <input name="advanceBalanceCompany" formControlName="diesel_details" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Name</label>\n                <input name="advanceBalanceCompany" formControlName="diesel_name" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Mobile NO</label>\n                <input name="advanceBalanceCompany" formControlName="mobile_no" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Serivce Provider</label>\n                <input name="advanceBalanceCompany" formControlName="serivce_provider" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Amount</label>\n                <input name="advanceBalanceCompany" formControlName="diesel_amount" type="number" class="form-control" />\n                <br>\n                <label><input name="podT" type="checkbox" formControlName="loading_confirmed" /> Loading Confirmed</label>\n            </div>\n            \n\n    <table class="table table-bordered table-striped">\n        <tr>\n             <th class="lightBg">Cash Advance </th>\n        <th class="lightBg">Diesal Advance</th>\n        <th class="lightBg">Oth Advance</th>\n        <th class="lightBg">Oth Ded.</th>\n        <th class="lightBg">Bal Recived</th>\n        <th class="lightBg">Bal Fright</th>\n        <th class="lightBg">Action</th>\n        </tr>\n    <tr  *ngFor="let b of datas.traffic_operations.bank_details;let k = index " >\n\n        <td>{{datas.transporter_advance-datas.company_commission}} </td>\n        <td>0 </td>\n        <td>0 </td>\n        <td>{{datas.company_commission}} </td>\n        <td>{{b.bank_amount}} </td>\n        <td>{{b.final_amount}} </td>\n        <td> <button class="btn btn-primary btn-block" (click)="editBoth(i,k)" >Edit</button> </td>\n\n      </tr>\n    </table>\n\n\n            <p><button class="btn btn-success btn-block" (click)="save()">Submit</button></p>\n            <p><button class="btn btn-success btn-block" (click)="addNew()">Add New</button></p>\n        </ion-col>\n    </div>\n</form>'/*ion-inline-end:"D:\truck\src\components\traffic-ops-bank-detail\traffic-ops-bank-detail.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_2__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_6__providers_traffic__["a" /* Traffic */]])
    ], TrafficOpsBankDetailComponent);
    return TrafficOpsBankDetailComponent;
}());

//# sourceMappingURL=traffic-ops-bank-detail.js.map

/***/ }),

/***/ 986:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficOpsReceivableAdvanceComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__providers_traffic__ = __webpack_require__(92);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_fleet_management__ = __webpack_require__(72);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_toast__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




/**
 * Generated class for the TrafficOpsReceivableAdvanceComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficOpsReceivableAdvanceComponent = /** @class */ (function () {
    function TrafficOpsReceivableAdvanceComponent(traffic, toast, fleetManagement) {
        var _this = this;
        this.traffic = traffic;
        this.toast = toast;
        this.fleetManagement = fleetManagement;
        this.saveData = {};
        this.isChange = false;
        this.receivable_advance = {
            diesel: {}
        };
        console.log('Hello TrafficOpsReceivableAdvanceComponent Component');
        this.text = 'Hello World';
        this.data = JSON.parse(localStorage.data)[Number(localStorage.index)];
        this.saveData = JSON.parse(localStorage.data)[Number(localStorage.index)];
        this.saveData.receivable_advance = this.saveData.receivable_advance.map(function (e) {
            e.final_amount = _this.saveData.transporter_freight - e.cheque_amount;
            _this.saveData.transporter_freight = e.final_amount;
            return e;
        });
        if (this.saveData.receivable_advance[0]) {
            this.receivable_advance = this.saveData.receivable_advance[0];
        }
        this.fleetManagement.getPaymentMode().subscribe(function (res) {
            console.log("Okay >>>", JSON.parse(res._body));
            _this.paymentMode = JSON.parse(res._body).results;
        }, function (err) {
            _this.toast.error({ 'message': 'Something went wrong.' });
        });
        this.fleetManagement.getPaymentType().subscribe(function (res) {
            console.log("Okay >>>", JSON.parse(res._body));
            _this.paymentTypes = JSON.parse(res._body).results;
        }, function (err) {
            _this.toast.error({ 'message': 'Something went wrong.' });
        });
    }
    TrafficOpsReceivableAdvanceComponent.prototype.save = function () {
        var _this = this;
        if (!this.isChange) {
            this.saveData.receivable_advance[0] = this.receivable_advance;
        }
        else {
            this.saveData.receivable_advance.push(this.receivable_advance);
        }
        this.traffic.updateReceivableCash(this.saveData._id, this.saveData).subscribe(function (res) {
            _this.toast.show({ 'message': 'Updated successfully.' });
            console.log("Okay >>>", res);
            _this.saveData.receivable_advance.map(function (e) {
                e.final_amount = _this.saveData.transporter_freight - e.cheque_amount;
                _this.saveData.transporter_freight = e.final_amount;
                return e;
            });
        }, function (err) {
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
    };
    TrafficOpsReceivableAdvanceComponent.prototype.change = function () {
    };
    TrafficOpsReceivableAdvanceComponent.prototype.addNew = function () {
        this.isChange = true;
        // this.saveData={}
        // this.saveData.receivable_advance;
        this.receivable_advance = {
            diesel: {}
        };
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], TrafficOpsReceivableAdvanceComponent.prototype, "data", void 0);
    TrafficOpsReceivableAdvanceComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-ops-receivable-advance',template:/*ion-inline-start:"D:\truck\src\components\traffic-ops-receivable-advance\traffic-ops-receivable-advance.html"*/'<!-- <table class="table table-bordered">\n  <tbody>\n    <tr>\n        <td class="deal-group" colspan="2"><b>Bank Details</b></td>\n    </tr>\n    <tr>\n        <td class="deal-group">Agency Name</td>\n        <td class="deal-group">Bank Details</td>\n        <td class="company-group">Diesal Details</td>\n        <td class="tp-group"> </td>\n    </tr>\n    <tr>\n        <td class="deal-group">DF No</td>\n        <td class="deal-group">Name</td>\n        <td class="company-group">Name</td>\n        <td class="tp-group"> </td>\n    </tr>\n    <tr>\n        <td class="deal-group">Date</td>\n        <td class="deal-group">Account No</td>\n        <td class="company-group">Mobile No</td>\n        <td class="tp-group"> </td>\n    </tr>\n    <tr>\n        <td class="deal-group">Transporter</td>\n        <td class="deal-group">IFSC Code</td>\n        <td class="company-group">Service Provider</td>\n        <td class="tp-group">Loading</td>\n    </tr>\n    <tr>\n        <td class="deal-group">Truck No</td>\n        <td class="deal-group">Amount</td>\n        <td class="company-group">Amount</td>\n        <td class="tp-group">Confirmed</td>\n    <tr>\n        <td>It Waddammana</td>\n        <td><input type="text"></td>\n        <td><input type="text"></td>\n        <td><input type="checkbox"></td>\n    </tr>\n    <tr>\n        <td>2</td>\n        <td><input type="text"></td>\n        <td><input type="text"></td>\n        <td><input type="checkbox"></td>\n    </tr>\n    <tr>\n        <td>18/09/2018</td>                                                                                         \n        <td><input type="text"></td>\n        <td><input type="text"></td>\n        <td><input type="checkbox"></td>    \n    </tr>\n    <tr>\n        <td>Dinesh Yadav</td>                                                                                         \n        <td><input type="text"></td>\n        <td><input type="text"></td>\n        <td><input type="checkbox"></td>    \n    </tr>\n    <tr>\n        <td>mh31de18</td>\n        <td><input type="text"></td>\n        <td><input type="text"></td>\n        <td><input type="checkbox"></td>\n    </tr>\n  </tbody>\n</table> -->\n\n<form >\n    <div class="row">\n        <ion-col col-12>\n                <h4 >Company Details</h4>\n            <div class="form-group">\n                <label class="label">Date</label>\n                <input name="deal_date"   [(ngModel)]="saveData.deal_date" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Payment Type</label>\n                <select name="" id="" class="form-control">\n                    <option *ngFor="let type of paymentTypes" value="{{type.name}}">{{type.name}}</option>\n                </select> \n            </div>\n            <div class="form-group">\n                <label class="label">Payment Mode</label>\n                <select name="payment_mode" id="" class="form-control" [(ngModel)]="saveData.payment_mode">\n                    <option *ngFor="let mode of paymentMode" value="{{mode.name}}">{{mode.name}}</option>\n                </select> \n            </div>\n            <div class="form-group">\n                <label class="label">Cheque Name</label>\n                <input name="cheque_name"  type="text" [(ngModel)]="receivable_advance.cheque_name" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Cheque Date</label>\n                <input name="cheque_date" [(ngModel)]="receivable_advance.cheque_date" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Cheque No</label>\n                <input name="cheque_no" [(ngModel)]="receivable_advance.cheque_no"  type="number" class="form-control" /> \n            </div>\n                        <div class="form-group">\n                <label class="label">Bank Name</label>\n                <input name="bank_name" [(ngModel)]="receivable_advance.bank_name" type="text" class="form-control" /> \n            </div>\n\n            <div class="form-group">\n                <label class="label">Amount</label>\n                <input name="cheque_amount"  [(ngModel)]="receivable_advance.cheque_amount" type="number" class="form-control" /> \n            </div>\n        </ion-col>\n        <ion-col col-12>\n                <h4 >Diesal Details</h4>\n\n            <div class="form-group">\n                <label class="label">Service Provider</label>\n                <input name="provider" [(ngModel)]="receivable_advance.diesel.provider"  type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Driver Name</label>\n                <input name="driver_name" [(ngModel)]="receivable_advance.diesel.driver_name"  type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Mobile NO</label>\n                <input name="mobile" [(ngModel)]="receivable_advance.diesel.mobile" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Amount</label>\n                <input name="amount" [(ngModel)]="receivable_advance.diesel.amount"  type="text" class="form-control" /> \n            </div>\n            \n        </ion-col>\n  \n        <ion-col col-12>\n                <h4 >Other Deductions      </h4>\n\n            <div class="form-group">\n                <label class="label">Labour Charges</label>\n                <input name="labour" [(ngModel)]="receivable_advance.labour_charge"  type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Mamul</label>\n                <input name="mamul" [(ngModel)]="receivable_advance.mamul"  type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">Payment Charges</label>\n                <input name="paymentCharge" [(ngModel)]="receivable_advance.payment_charges" type="text" class="form-control" /> \n            </div>\n            <div class="form-group">\n                <label class="label">TDS</label>\n                <input name="tds" [(ngModel)]="receivable_advance.tds"  type="text" class="form-control" /> \n            </div>\n            <p><button class="btn btn-success " (click)="addNew()">+ Add</button></p>            \n        </ion-col>\n\n<table class="table table-bordered table-striped">\n        <tr>\n             <th class="lightBg">Cash Advance </th>\n        <th class="lightBg">Diesal Advance</th>\n        <th class="lightBg">Oth Advance</th>\n        <th class="lightBg">Oth Ded.</th>\n        <th class="lightBg">Bal Recived</th>\n        <th class="lightBg">Bal Fright</th>\n        <th class="lightBg">Action</th>\n        </tr>\n    <tr  *ngFor="let b of saveData.receivable_advance;let k = index " >\n\n        <td>{{saveData.transporter_advance-saveData.company_commission}} </td>\n        <td>0 </td>\n        <td>0 </td>\n        <td>{{saveData.company_commission}} </td>\n        <td>{{b.cheque_amount}} </td>\n        <td>{{b.final_amount}} </td>\n        <td> <button class="btn btn-primary btn-block" (click)="editBoth(i,k)" >Edit</button> </td>\n\n      </tr>\n    </table>\n\n        <ion-col col-12>\n            <p><button class="btn btn-success" (click)="save()">Submit</button></p>            \n        </ion-col>\n\n    \n\n\n    </div>\n</form>'/*ion-inline-end:"D:\truck\src\components\traffic-ops-receivable-advance\traffic-ops-receivable-advance.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__providers_traffic__["a" /* Traffic */],
            __WEBPACK_IMPORTED_MODULE_3__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_2__providers_fleet_management__["a" /* FleetManagement */]])
    ], TrafficOpsReceivableAdvanceComponent);
    return TrafficOpsReceivableAdvanceComponent;
}());

//# sourceMappingURL=traffic-ops-receivable-advance.js.map

/***/ }),

/***/ 987:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficOpsPendingPodTComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__providers_traffic__ = __webpack_require__(92);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_toast__ = __webpack_require__(11);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/**
 * Generated class for the TrafficOpsPendingPodTComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficOpsPendingPodTComponent = /** @class */ (function () {
    function TrafficOpsPendingPodTComponent(toast, traffic) {
        this.toast = toast;
        this.traffic = traffic;
        console.log('Hello TrafficOpsPendingPodTComponent Component');
        this.datas = JSON.parse(localStorage.data)[Number(localStorage.index)];
        this.text = 'Hello World';
    }
    TrafficOpsPendingPodTComponent.prototype.save = function () {
        var _this = this;
        this.traffic.upadtePOD(this.datas._id, this.datas).subscribe(function (res) {
            _this.toast.show({ 'message': 'Updated successfully.' });
            // console.log("Okay >>>", this.datas);
        }, function (err) {
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], TrafficOpsPendingPodTComponent.prototype, "data", void 0);
    TrafficOpsPendingPodTComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-ops-pending-pod-t',template:/*ion-inline-start:"D:\truck\src\components\traffic-ops-pending-pod-t\traffic-ops-pending-pod-t.html"*/'<!-- Generated template for the TrafficOpsTrucksVerificationComponent component -->\n<!-- <table class="table table-bordered">\n  <tbody>\n    <tr>\n        <td class="deal-group" colspan="2"><b>Pending POD - T</b></td>\n    </tr>\n    <tr>\n        <td class="deal-group">Agency Name</td>\n        <td class="deal-group">Transporter</td>\n        <td class="company-group">POD</td>\n    </tr>\n    <tr>\n        <td class="deal-group">DF No</td>\n        <td class="deal-group">Truck Number</td>\n        <td class="company-group">Uploaded</td>\n    </tr>\n    <tr>\n        <td class="deal-group">Date</td>\n        <td class="deal-group">From (LP)</td>\n        <td class="company-group"> </td>\n    </tr>\n    <tr>\n        <td class="deal-group">Due Date</td>\n        <td class="deal-group">To (ULP)</td>\n        <td class="company-group">Submited By</td>\n    </tr>\n    <tr>\n        <td>It Waddammana</td>\n        <td>Dinesh Yadav</td>\n        <td><input type="checkbox"></td>\n    </tr>\n    <tr>\n        <td>2</td>\n        <td>mh31de18</td>\n        <td></td>\n    </tr>\n    <tr>\n        <td>18/09/2018</td>                                                                                         \n        <td>Nagpur (Hingna)</td>\n        <td>Sandesh</td>   \n    </tr>\n    <tr>\n        <td>25/09/2019</td>                                                                                         \n        <td>Patna (patna)</td>\n        <td></td>   \n    </tr>\n  </tbody>\n</table> -->\n<div class="row" *ngIf="datas">\n  <ion-col col-6>\n    <h4>Transporter</h4>\n    <table class="table table-bordered table-striped">\n      <tr>\n        <td>Transporter</td>\n        <td>{{datas.transporter_name}}</td>\n      </tr>\n     \n      <tr>\n        <td> POD Received By</td>\n        <!-- <td>{{datas.traffic_operations.pod_t_uploaded?"":"No POD Uploaded Yet"}}</td> -->\n        <td> <input type="text" name="recived" [(ngModel)]="datas.traffic_operations.pod_recived"></td>\n      </tr>\n     \n      <tr>\n        <td>POD Uploaded</td>\n        <td><input type="checkbox" [(ngModel)]="datas.traffic_operations.pod_t_uploaded" ngChecked="datas.traffic_operations.pod_t_uploaded"></td>\n      </tr>\n    </table>\n    <p><button class="btn btn-success btn-block" (click)="save()">Update Posting</button></p>\n  </ion-col>\n  <ion-col col-6>\n    <h4>Company</h4>\n    <table class="table table-bordered">\n       <tr>\n        <td>POD Submitted By</td>\n        <td><input type="checkbox" [(ngModel)]="datas.traffic_operations.pod_c_uploaded" ngChecked="datas.traffic_operations.pod_c_uploaded"></td>\n        <td> <input type="text" [(ngModel)]="datas.traffic_operations.submitted_by"></td>\n      </tr>\n    </table>\n    <p><button class="btn btn-success btn-block" (click)="save()">Update Posting</button></p>\n  </ion-col>\n</div>'/*ion-inline-end:"D:\truck\src\components\traffic-ops-pending-pod-t\traffic-ops-pending-pod-t.html"*/
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_1__providers_traffic__["a" /* Traffic */]])
    ], TrafficOpsPendingPodTComponent);
    return TrafficOpsPendingPodTComponent;
}());

//# sourceMappingURL=traffic-ops-pending-pod-t.js.map

/***/ }),

/***/ 988:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficOpsPendingPodCComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * Generated class for the TrafficOpsPendingPodCComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficOpsPendingPodCComponent = /** @class */ (function () {
    function TrafficOpsPendingPodCComponent() {
        console.log('Hello TrafficOpsPendingPodCComponent Component');
        this.text = 'Hello World';
        this.data = JSON.parse(localStorage.data)[Number(localStorage.index)];
    }
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], TrafficOpsPendingPodCComponent.prototype, "data", void 0);
    TrafficOpsPendingPodCComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-ops-pending-pod-c',template:/*ion-inline-start:"D:\truck\src\components\traffic-ops-pending-pod-c\traffic-ops-pending-pod-c.html"*/'<div class="row">\n  <ion-col col-4>\n    <h4>Info</h4>\n    <table class="table table-bordered table-striped">\n      <tr>\n        <td>Agency Name</td>\n        <td>{{data.agency_name}}</td>\n      </tr>\n     \n      <tr>\n        <td>DF No</td>\n        <td>{{data.deal_no}}</td>\n      </tr>\n     \n      <tr>\n        <td>Date</td>\n        <td>{{data.deal_date}}</td>\n      </tr>\n      <tr>\n        <td>Due Date</td>\n        <td>22/10/2019</td>\n      </tr>\n    </table>\n\n  </ion-col>\n  <ion-col col-4>\n    <h4>Transporter</h4>\n    <table class="table table-bordered">\n       <tr>\n        <td>Consignor</td>\n        <td>{{data.company_name}}</td>\n      </tr>\n      <tr>\n        <td>Pay.Mode</td>\n        <td>{{data.payment_mode}}</td>\n      </tr>\n       <tr>\n        <td>Truck No</td>\n        <td>{{data.truck_no}}</td>\n      </tr>\n      <tr>\n        <td>From (LP)</td>\n        <td>{{data.from}}</td>\n      </tr>\n      <tr>\n        <td>To (ULP)</td>\n        <td>{{data.to}}</td>\n      </tr>\n    </table>\n  </ion-col>\n  <ion-col col-4>\n    <p>Pod Submitted by: Sandesh</p>\n    <p><label><input name="podC" type="checkbox" formControlName="podC" />POD Uploaded</label></p>\n    <p><button class="btn btn-success btn-block">Update Posting</button></p>\n  </ion-col>\n</div>'/*ion-inline-end:"D:\truck\src\components\traffic-ops-pending-pod-c\traffic-ops-pending-pod-c.html"*/
        }),
        __metadata("design:paramtypes", [])
    ], TrafficOpsPendingPodCComponent);
    return TrafficOpsPendingPodCComponent;
}());

//# sourceMappingURL=traffic-ops-pending-pod-c.js.map

/***/ }),

/***/ 989:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficOpsReceivableBalanceComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * Generated class for the TrafficOpsReceivableBalanceComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficOpsReceivableBalanceComponent = /** @class */ (function () {
    function TrafficOpsReceivableBalanceComponent() {
        console.log('Hello TrafficOpsReceivableBalanceComponent Component');
        this.text = 'Hello World';
    }
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Object)
    ], TrafficOpsReceivableBalanceComponent.prototype, "data", void 0);
    TrafficOpsReceivableBalanceComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-ops-receivable-balance',template:/*ion-inline-start:"D:\truck\src\components\traffic-ops-receivable-balance\traffic-ops-receivable-balance.html"*/'<div class="row">\n    <ion-col col-3>\n        <h4>Info</h4>\n        <table class="table table-bordered table-striped">\n            <tr>\n                <td>Agency Name</td>\n                <td>{{data.agency_name}}</td>\n            </tr>\n            <tr>\n                <td>Consignor</td>\n                <td>{{data.company_name}}</td>\n            </tr>\n            <tr>\n                <td>DF No / Date</td>\n                <td>{{data.deal_no}} - {{data.deal_date}}</td>\n            </tr>\n            <tr>\n                <td>Balance Freight</td>\n                <td>20000</td>\n            </tr>\n            <tr>\n                <td>Balance Amount</td>\n                <td>0</td>\n            </tr>\n        </table>\n    </ion-col>\n    <ion-col col-4>\n        <div class="form-group">\n            <label class="label">Cheque Name</label>\n            <input name="advanceBalanceCompany" type="text" class="form-control" /> \n        </div>\n        <div class="form-group">\n            <label class="label">Payment Mode</label>\n            <input name="advanceBalanceCompany" type="text" class="form-control" /> \n        </div>\n        <div class="form-group">\n            <label class="label">Chq No / UTr no</label>\n            <input name="advanceBalanceCompany" type="text" class="form-control" /> \n        </div>\n        <div class="form-group">\n            <label class="label">Chq Date</label>\n            <input name="advanceBalanceCompany" type="text" class="form-control" /> \n        </div>\n        <div class="form-group">\n            <label class="label">Bank Name</label>\n            <input name="advanceBalanceCompany" type="text" class="form-control" /> \n        </div>\n        <div class="form-group">\n            <label class="label">Cheque amount</label>\n            <input name="advanceBalanceCompany" type="text" class="form-control" /> \n        </div>\n    </ion-col>\n    <ion-col col-4>\n        <h4>Other Deductions</h4>\n        <hr>\n        <div class="form-group">\n            <label class="label">Labour charge</label>\n            <input name="advanceBalanceCompany" type="text" class="form-control" /> \n        </div>\n        <div class="form-group">\n            <label class="label">Mamul</label>\n            <input name="advanceBalanceCompany" type="text" class="form-control" /> \n        </div>\n        <div class="form-group">\n            <label class="label">Payment charges</label>\n            <input name="advanceBalanceCompany" type="text" class="form-control" /> \n        </div>\n        <div class="form-group">\n            <label class="label">TDS</label>\n            <input name="advanceBalanceCompany" type="text" class="form-control" /> \n        </div>\n        <p><strong>Total Amount: 20000</strong></p>\n        \n        <p><button class="btn btn-success btn-block">Submit</button></p>\n    </ion-col>\n</div>'/*ion-inline-end:"D:\truck\src\components\traffic-ops-receivable-balance\traffic-ops-receivable-balance.html"*/
        }),
        __metadata("design:paramtypes", [])
    ], TrafficOpsReceivableBalanceComponent);
    return TrafficOpsReceivableBalanceComponent;
}());

//# sourceMappingURL=traffic-ops-receivable-balance.js.map

/***/ }),

/***/ 990:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficOpsCommissionComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * Generated class for the TrafficOpsCommissionComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficOpsCommissionComponent = /** @class */ (function () {
    function TrafficOpsCommissionComponent() {
        console.log('Hello TrafficOpsCommissionComponent Component');
        this.text = 'Hello World';
    }
    TrafficOpsCommissionComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-ops-commission',template:/*ion-inline-start:"D:\truck\src\components\traffic-ops-commission\traffic-ops-commission.html"*/'<!-- Generated template for the TrafficOpsTrucksVerificationComponent component -->\n<table class="table table-bordered">\n  <tbody>\n    <tr>\n        <td class="deal-group" colspan="2"><b>Commission</b></td>\n    </tr>\n    <tr>\n        <td class="deal-group">Agency Name</td>\n        <td class="deal-group">Salesman</td>\n        <td class="company-group">DF No</td>\n        <td class="company-group">Date</td>\n        <td class="company-group">Truck No</td>\n        <td class="company-group">Clearing</td>\n    </tr>\n    <tr>\n        <td>It Waddammana</td>\n        <td>Sandesh</td>\n        <td>2</td>\n        <td>18/09/2019</td>\n        <td>mh31de18</td>\n        <td>600</td>\n    </tr>\n  </tbody>\n</table>'/*ion-inline-end:"D:\truck\src\components\traffic-ops-commission\traffic-ops-commission.html"*/
        }),
        __metadata("design:paramtypes", [])
    ], TrafficOpsCommissionComponent);
    return TrafficOpsCommissionComponent;
}());

//# sourceMappingURL=traffic-ops-commission.js.map

/***/ }),

/***/ 991:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficQcDealsTabComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * Generated class for the TrafficQcDealsTabComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficQcDealsTabComponent = /** @class */ (function () {
    function TrafficQcDealsTabComponent() {
        console.log('Hello TrafficQcDealsTabComponent Component');
        this.text = 'Hello World';
    }
    TrafficQcDealsTabComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-qc-deals-tab',template:/*ion-inline-start:"D:\truck\src\components\traffic-qc-deals-tab\traffic-qc-deals-tab.html"*/'<!-- Generated template for the TrafficQcDealsTabComponent component -->\n<div>\n  {{text}}\n</div>\n'/*ion-inline-end:"D:\truck\src\components\traffic-qc-deals-tab\traffic-qc-deals-tab.html"*/
        }),
        __metadata("design:paramtypes", [])
    ], TrafficQcDealsTabComponent);
    return TrafficQcDealsTabComponent;
}());

//# sourceMappingURL=traffic-qc-deals-tab.js.map

/***/ }),

/***/ 992:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficQcPayableAdvanceComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * Generated class for the TrafficQcPayableAdvanceComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficQcPayableAdvanceComponent = /** @class */ (function () {
    function TrafficQcPayableAdvanceComponent() {
        console.log('Hello TrafficQcPayableAdvanceComponent Component');
        this.text = 'Hello World';
    }
    TrafficQcPayableAdvanceComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-qc-payable-advance',template:/*ion-inline-start:"D:\truck\src\components\traffic-qc-payable-advance\traffic-qc-payable-advance.html"*/'<!-- Generated template for the TrafficQcPayableAdvanceComponent component -->\n<div>\n  {{text}}\n</div>\n'/*ion-inline-end:"D:\truck\src\components\traffic-qc-payable-advance\traffic-qc-payable-advance.html"*/
        }),
        __metadata("design:paramtypes", [])
    ], TrafficQcPayableAdvanceComponent);
    return TrafficQcPayableAdvanceComponent;
}());

//# sourceMappingURL=traffic-qc-payable-advance.js.map

/***/ }),

/***/ 993:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficQcReceivableAdvanceComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * Generated class for the TrafficQcReceivableAdvanceComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficQcReceivableAdvanceComponent = /** @class */ (function () {
    function TrafficQcReceivableAdvanceComponent() {
        console.log('Hello TrafficQcReceivableAdvanceComponent Component');
        this.text = 'Hello World';
    }
    TrafficQcReceivableAdvanceComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-qc-receivable-advance',template:/*ion-inline-start:"D:\truck\src\components\traffic-qc-receivable-advance\traffic-qc-receivable-advance.html"*/'<!-- Generated template for the TrafficQcReceivableAdvanceComponent component -->\n<div>\n  {{text}}\n</div>\n'/*ion-inline-end:"D:\truck\src\components\traffic-qc-receivable-advance\traffic-qc-receivable-advance.html"*/
        }),
        __metadata("design:paramtypes", [])
    ], TrafficQcReceivableAdvanceComponent);
    return TrafficQcReceivableAdvanceComponent;
}());

//# sourceMappingURL=traffic-qc-receivable-advance.js.map

/***/ }),

/***/ 994:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficQcReceivableBalanceComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * Generated class for the TrafficQcReceivableBalanceComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficQcReceivableBalanceComponent = /** @class */ (function () {
    function TrafficQcReceivableBalanceComponent() {
        console.log('Hello TrafficQcReceivableBalanceComponent Component');
        this.text = 'Hello World';
    }
    TrafficQcReceivableBalanceComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-qc-receivable-balance',template:/*ion-inline-start:"D:\truck\src\components\traffic-qc-receivable-balance\traffic-qc-receivable-balance.html"*/'<!-- Generated template for the TrafficQcReceivableBalanceComponent component -->\n<div>\n  {{text}}\n</div>\n'/*ion-inline-end:"D:\truck\src\components\traffic-qc-receivable-balance\traffic-qc-receivable-balance.html"*/
        }),
        __metadata("design:paramtypes", [])
    ], TrafficQcReceivableBalanceComponent);
    return TrafficQcReceivableBalanceComponent;
}());

//# sourceMappingURL=traffic-qc-receivable-balance.js.map

/***/ }),

/***/ 995:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficQcPayableBalanceComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * Generated class for the TrafficQcPayableBalanceComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficQcPayableBalanceComponent = /** @class */ (function () {
    function TrafficQcPayableBalanceComponent() {
        console.log('Hello TrafficQcPayableBalanceComponent Component');
        this.text = 'Hello World';
    }
    TrafficQcPayableBalanceComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-qc-payable-balance',template:/*ion-inline-start:"D:\truck\src\components\traffic-qc-payable-balance\traffic-qc-payable-balance.html"*/'<!-- Generated template for the TrafficQcPayableBalanceComponent component -->\n<div>\n  {{text}}\n</div>\n'/*ion-inline-end:"D:\truck\src\components\traffic-qc-payable-balance\traffic-qc-payable-balance.html"*/
        }),
        __metadata("design:paramtypes", [])
    ], TrafficQcPayableBalanceComponent);
    return TrafficQcPayableBalanceComponent;
}());

//# sourceMappingURL=traffic-qc-payable-balance.js.map

/***/ }),

/***/ 996:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TrafficQcClearingChequesComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

/**
 * Generated class for the TrafficQcClearingChequesComponent component.
 *
 * See https://angular.io/api/core/Component for more info on Angular
 * Components.
 */
var TrafficQcClearingChequesComponent = /** @class */ (function () {
    function TrafficQcClearingChequesComponent() {
        console.log('Hello TrafficQcClearingChequesComponent Component');
        this.text = 'Hello World';
    }
    TrafficQcClearingChequesComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'traffic-qc-clearing-cheques',template:/*ion-inline-start:"D:\truck\src\components\traffic-qc-clearing-cheques\traffic-qc-clearing-cheques.html"*/'<!-- Generated template for the TrafficQcClearingChequesComponent component -->\n<div>\n  {{text}}\n</div>\n'/*ion-inline-end:"D:\truck\src\components\traffic-qc-clearing-cheques\traffic-qc-clearing-cheques.html"*/
        }),
        __metadata("design:paramtypes", [])
    ], TrafficQcClearingChequesComponent);
    return TrafficQcClearingChequesComponent;
}());

//# sourceMappingURL=traffic-qc-clearing-cheques.js.map

/***/ }),

/***/ 997:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddCompanyPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__helpers_common__ = __webpack_require__(31);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};










/**
 * Generated class for the AddCompanyPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddCompanyPage = /** @class */ (function () {
    function AddCompanyPage(navCtrl, navParams, trucks, loader, toast, fb, actionSheetController, modalCtrl, events, mapsAPILoader, ngZone) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.trucks = trucks;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.actionSheetController = actionSheetController;
        this.modalCtrl = modalCtrl;
        this.events = events;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.truckTypes = [];
        this.truckCapacity = [];
        this.truckCapacityList = [];
        this.materialsArray = [];
        this.mainMaterials = [];
        this.mainTruckType = [];
        this.mainCapacity = [];
        this.main = false;
        this.companyFlag = true;
        // bankFlag = false;
        this.addressFlag = false;
        this.locationFlag = false;
        this.requirementFlag = false;
        this.types = [
            { name: 'OPEN', value: 'OPEN' },
            { name: 'CONTAINER', value: 'CONTAINER' },
            { name: 'TRAILER', value: 'TRAILER' },
        ];
        this.capacity = [];
        this.obj = {
            owner_name: '',
            omobile_no_1: '',
            omobile_no_2: '',
            website: '',
            location_allotment: '',
            location_restriction: '',
            latitude: '',
            longitude: '',
            contact_person: '',
            gstin_no: '',
            location: '',
            mobile_no_1: '',
            mobile_no_2: '',
            company_name: '',
            company_requirement: [],
            address: [],
            materials: [],
            truck_types: [],
            capacity: []
        };
        this.submitted = false;
        this.addForm = this.fb.group({
            company_name: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(25)])],
            location: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(25)])],
            gstin_no: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(15), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(15)])],
            contact_person: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(25)])],
            mobile_no_1: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(10)])],
            mobile_no_2: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(10)])],
            owner_name: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(25)])],
            omobile_no_1: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(10)])],
            omobile_no_2: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(10)])],
            location_allotment: [''],
            location_restriction: [''],
            latitude: [''],
            longitude: [''],
            website: [''],
            materials: [''],
            destinations: [''],
            truck_types: [''],
            capacity: [''],
            company_requirement: [''],
            address: this.fb.array([this.createAddressObj()])
        });
        this.getCapacity();
        this.getMaterials();
    }
    AddCompanyPage.prototype.createAddressObj = function () {
        return this.fb.group({
            address_line_1: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(2)])],
            address_line_2: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(2)])],
            city: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(2)])],
            state: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, , __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(2)])],
            pincode: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(6), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(6)])]
        });
    };
    AddCompanyPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddCompanyPage');
    };
    AddCompanyPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_3__home_home__["a" /* HomePage */]);
    };
    AddCompanyPage.prototype.getLocation = function (e) {
        e.preventDefault();
        this.events.broadcast('location');
    };
    Object.defineProperty(AddCompanyPage.prototype, "addressForm", {
        // Get controls for form array for address
        get: function () {
            console.log(">>>>>FormValue", this.addForm.get('address')['controls'][0].controls);
            return this.addForm.get('address')['controls'][0].controls;
        },
        enumerable: true,
        configurable: true
    });
    // Google map address
    AddCompanyPage.prototype.addressData = function (e) {
        // this.addressForm['address_line_1'].setValue(e.address_line1);
        // this.addressForm['address_line_2'].setValue(e.address_line2);
        // this.addressForm['city'].setValue(e.city);
        // this.addressForm['state'].setValue(e.state);
        // this.addressForm['pincode'].setValue(e.pincode);
        // this.obj.address = [];
        // let obj = {
        //   address_line_1: e.address_line1,
        //   address_line_2: e.address_line2,
        //   city: e.city,
        //   state: e.state,
        //   pincode: e.pincode,
        //   address_location: {
        //     type : "Point",
        //     coordinates: []
        //   }
        // }
        // this.obj.address.push(obj);
        // this.obj.address[0].address_location.coordinates = [];
        // this.obj.address[0].address_location.coordinates.push(e.lng);
        // this.obj.address[0].address_location.coordinates.push(e.lat);
    };
    // add requirements modal
    AddCompanyPage.prototype.openRequirementModal = function (e) {
        var _this = this;
        e.preventDefault();
        var modal = this.modalCtrl.create('EditCompanyRequirementsPage', { type: 'add' });
        modal.onDidDismiss(function (data) {
            if (data) {
                _this.obj.company_requirement.push(data.requirementFormData);
            }
        });
        modal.present();
    };
    // update requirement action sheet
    AddCompanyPage.prototype.actionSheetForUpdate = function (companyData, idx) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var actionSheet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.actionSheetController.create({
                            title: 'Actions',
                            buttons: [{
                                    text: 'Edit company requirements',
                                    icon: 'create',
                                    handler: function () {
                                        _this.updateRequirementModal(companyData, idx);
                                    }
                                }, {
                                    text: 'Delete this requirements',
                                    icon: 'trash',
                                    handler: function () {
                                        _this.deleteRequirement(idx);
                                    }
                                }]
                        })];
                    case 1:
                        actionSheet = _a.sent();
                        return [4 /*yield*/, actionSheet.present()];
                    case 2:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    AddCompanyPage.prototype.deleteRequirement = function (idx) {
        var conf = confirm('Are you sure you want to delete this requirements ?');
        if (conf) {
            this.loader.show();
            this.obj.company_requirement.splice(idx, 1);
            this.toast.show({ 'message': 'Deleted successfully.' });
            this.loader.hide();
        }
    };
    // update requirement modal
    AddCompanyPage.prototype.updateRequirementModal = function (companyData, idx) {
        var _this = this;
        var modal = this.modalCtrl.create('EditCompanyRequirementsPage', { data: companyData, index: idx, type: 'edit' });
        modal.onDidDismiss(function (data) {
            console.log(data);
            if (data) {
                _this.requirementFormData = data.requirementFormData;
                _this.idx = data.index;
                _this.obj.company_requirement[idx].material = _this.requirementFormData.material;
                _this.obj.company_requirement[idx].to_destination = _this.requirementFormData.to_destination;
                _this.obj.company_requirement[idx].vehicle_capacity = _this.requirementFormData.vehicle_capacity;
                _this.obj.company_requirement[idx].vehicle_type = _this.requirementFormData.vehicle_type;
            }
        });
        modal.present();
    };
    AddCompanyPage.prototype.save = function (isValid, value) {
        var _this = this;
        this.submitted = true;
        if (isValid) {
            this.obj.contact_person = value.contact_person;
            this.obj.gstin_no = value.gstin_no;
            this.obj.location = value.location;
            this.obj.mobile_no_1 = value.mobile_no_1;
            this.obj.mobile_no_2 = value.mobile_no_2;
            this.obj.company_name = value.company_name;
            this.obj.owner_name = value.owner_name;
            this.obj.omobile_no_1 = value.omobile_no_1;
            this.obj.omobile_no_2 = value.omobile_no_2;
            this.obj.website = value.website;
            this.obj.address = value.address;
            this.obj.location_allotment = value.location_allotment;
            this.obj.location_restriction = value.location_restriction;
            this.obj.latitude = value.latitude;
            this.obj.longitude = value.longitude;
            this.obj.materials = this.mainMaterials;
            this.obj.truck_types = this.mainTruckType;
            this.obj.capacity = this.mainCapacity;
            console.log(">>>>>Ths.obj", this.obj);
            console.log("Form >>>>>", value);
            this.loader.show();
            this.trucks.addCompany(this.obj).subscribe(function (res) {
                _this.loader.hide();
                _this.toast.show({ 'message': 'Added successfully.' });
                _this.navCtrl.setRoot('ManageCompanyListPage');
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }
    };
    AddCompanyPage.prototype.getCapacity = function () {
        var _this = this;
        this.trucks.getCapacityOfTruck().subscribe(function (res) {
            var data = res.json();
            data.results.forEach(function (r) {
                r.capacity.forEach(function (r) {
                    _this.truckCapacity.push(r.ton);
                });
                _this.truckTypes.push({ "name": r.type, "flag": false });
            });
            var newTruckCapacity = Array.from(new Set(_this.truckCapacity));
            console.log('truckTypes >>>>>>> ', _this.truckTypes);
            console.log('Capacity >>>>>>> ', newTruckCapacity.sort(function (a, b) { return a - b; }));
            _this.truckCapacity = [];
            _this.truckCapacity = newTruckCapacity.sort(function (a, b) { return a - b; });
            _this.truckCapacity.forEach(function (r) {
                _this.truckCapacityList.push({ "name": r, "flag": false });
            });
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    AddCompanyPage.prototype.getMaterials = function () {
        var _this = this;
        this.trucks.getMaterials().subscribe(function (res) {
            var data = res.json();
            data.results.forEach(function (r) {
                _this.materialsArray.push({ "name": r.name, "flag": false });
            });
            console.log('Materials data >>>>>>> ', _this.materialsArray);
        }, function (err) {
            console.log(">>>error", err);
        });
    };
    AddCompanyPage.prototype.addMaterials = function (e, m, ind) {
        var _this = this;
        if (e.target.checked) {
            this.mainMaterials.push(m);
            console.log("materials[ind]    >>>>", this.materialsArray[ind]);
            this.materialsArray[ind].flag = true;
        }
        else {
            var i = 0;
            this.mainMaterials.forEach(function (element) {
                if (element == m) {
                    console.log(" IN    >>>>", i);
                    _this.mainMaterials.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.mainMaterials >>>>", this.mainMaterials);
        }
        console.log("materials[ind]    >>>>", this.materialsArray);
    };
    AddCompanyPage.prototype.addTruckType = function (e, tt, ind) {
        var _this = this;
        if (e.target.checked) {
            this.mainTruckType.push(tt);
            this.truckTypes[ind].flag = true;
        }
        else {
            var i = 0;
            this.mainTruckType.forEach(function (element) {
                if (element == tt) {
                    console.log(" IN    >>>>", i);
                    _this.mainTruckType.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.mainTruckType >>>>", this.mainTruckType);
        }
    };
    AddCompanyPage.prototype.addCapacity = function (e, c, ind) {
        var _this = this;
        if (e.target.checked) {
            this.mainCapacity.push(c);
            this.truckCapacityList[ind].flag = true;
        }
        else {
            var i = 0;
            this.mainCapacity.forEach(function (element) {
                if (element == c) {
                    console.log(" IN    >>>>", i);
                    _this.mainCapacity.splice(i, 1);
                }
                i = i + 1;
            });
            console.log("this.mainCapacity >>>>", this.mainCapacity);
        }
    };
    /**
     * Company Info Company Info Company Info Company Info
     * Company Info
     * Company Info
     * Company Info
     * Company Info
     * Company Info
     */
    AddCompanyPage.prototype.preCompany = function () {
        this.companyFlag = true;
        this.addressFlag = false;
        this.locationFlag = false;
        this.requirementFlag = false;
    };
    AddCompanyPage.prototype.nextAddress = function () {
        var _this = this;
        this.companyFlag = false;
        this.addressFlag = true;
        this.locationFlag = false;
        this.requirementFlag = false;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var presentCity = new google.maps.places.Autocomplete(_this.searchElementRefCity.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentCity.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_9__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_9__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('City').value = pre_city;
                        var addr = _this.addForm.get('address');
                        var first = addr.at(0);
                        first.get('city').setValue(pre_city);
                    });
                });
                var presentState = new google.maps.places.Autocomplete(_this.searchElementRefState.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentState.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentState.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_9__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        document.getElementById('State').value = components.administrative_area_level_1;
                        var addr = _this.addForm.get('address');
                        var first = addr.at(0);
                        first.get('state').setValue(components.administrative_area_level_1);
                    });
                });
            });
        }, 2000);
    };
    AddCompanyPage.prototype.nextLocation = function () {
        var _this = this;
        console.log("ok");
        this.companyFlag = false;
        this.addressFlag = false;
        this.locationFlag = true;
        this.requirementFlag = false;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var presentCity = new google.maps.places.Autocomplete(_this.searchElementRef.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentCity.getPlace();
                        var lat = place.geometry.location.lat();
                        var lng = place.geometry.location.lng();
                        localStorage.setItem('latlng', JSON.stringify({
                            lat: lat,
                            lng: lng
                        }));
                        _this.events.broadcast('location');
                        _this.addForm.controls['latitude'].setValue(lat);
                        _this.addForm.controls['longitude'].setValue(lng);
                        var components = __WEBPACK_IMPORTED_MODULE_9__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_9__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('Location').value = pre_city;
                        _this.addForm.controls['location'].setValue(pre_city);
                    });
                });
            });
        }, 4000);
    };
    AddCompanyPage.prototype.nextReq = function () {
        this.companyFlag = false;
        this.addressFlag = false;
        this.locationFlag = false;
        this.requirementFlag = true;
        console.log("materials[ind]    >>>>", this.materialsArray);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchCity"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddCompanyPage.prototype, "searchElementRefCity", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchStatue"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddCompanyPage.prototype, "searchElementRefState", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddCompanyPage.prototype, "searchElementRef", void 0);
    AddCompanyPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-company',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\add-company\add-company.html"*/'<!--\n  Generated template for the AddCompanyPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add Company</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="addForm" (ngSubmit)="save(addForm.valid, addForm.value)">\n\n    <!------------ Company Flag  ---------->\n    <div *ngIf="companyFlag">\n      <div class="width-full">\n      <label class="fonts-size">Company Details </label><br>\n      </div>   \n      <div class="form-group">\n        <label class=" label">Company name <span style="color:red">*</span> </label> \n        <input formControlName="company_name" autocomplete="off" type="text" class="form-control" />\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.company_name.invalid && (addForm.controls.company_name.dirty || addForm.controls.company_name.touched))">\n        <div *ngIf="addForm.controls[\'company_name\'].hasError(\'required\')">\n          <label>Company name is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'company_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'company_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n\n      <!-- <div class="form-group">\n        <label class=" label">Location <span style="color:red">*</span> </label> \n        <input formControlName="location" type="text" class="form-control" />\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.location.invalid && (addForm.controls.location.dirty || addForm.controls.location.touched))">\n        <div *ngIf="addForm.controls[\'location\'].hasError(\'required\')">\n          <label>Location is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'location\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'location\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div> -->\n\n      <div class="form-group">\n        <label class=" label">Gst no</label> \n        <input formControlName="gstin_no" autocomplete="off" type="text" class="form-control" />\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.gstin_no.invalid && (addForm.controls.gstin_no.dirty || addForm.controls.gstin_no.touched))">\n        <!-- <div *ngIf="addForm.controls[\'gstin_no\'].hasError(\'required\')">\n          <label>Gst number is required.</label>\n        </div> -->\n        <div *ngIf="addForm.controls[\'gstin_no\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 15 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'gstin_no\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 15 letters.</label>\n        </div>\n      </div>\n  \n      <!-- ----------------- New -------------- -->\n\n\n      <div class="form-group">\n          <label class=" label">Owner Name <span style="color:red">*</span> </label> \n          <input formControlName="owner_name" autocomplete="off" type="text" class="form-control" />\n        </div>\n        <div class="error-msg" *ngIf="submitted || (addForm.controls.owner_name.invalid && (addForm.controls.owner_name.dirty || addForm.controls.owner_name.touched))">\n          <div *ngIf="addForm.controls[\'owner_name\'].hasError(\'required\')">\n            <label>Owner Name is required.</label>\n          </div>\n          <div *ngIf="addForm.controls[\'owner_name\'].hasError(\'minlength\')">\n            <label>Minimum length is upto 2 letters.</label>\n          </div>\n          <div *ngIf="addForm.controls[\'owner_name\'].hasError(\'maxlength\')">\n            <label>Maximum length is upto 25 letters.</label>\n          </div>\n        </div>\n    \n        <div class="form-group">\n          <label class=" label">Mobile no 1 <span style="color:red">*</span> </label> \n          <input formControlName="omobile_no_1" autocomplete="off" type="text" OnlyNumber="true" class="form-control" />\n        </div>\n        <div class="error-msg" *ngIf="submitted || (addForm.controls.omobile_no_1.invalid && (addForm.controls.omobile_no_1.dirty || addForm.controls.omobile_no_1.touched))">\n          <div *ngIf="addForm.controls[\'omobile_no_1\'].hasError(\'required\')">\n            <label>Mobile number is required.</label>\n          </div>\n          <div *ngIf="addForm.controls[\'omobile_no_1\'].hasError(\'minlength\')">\n            <label>Minimum length is upto 10 letters.</label>\n          </div>\n          <div *ngIf="addForm.controls[\'omobile_no_1\'].hasError(\'maxlength\')">\n            <label>Maximum length is upto 10 letters.</label>\n          </div>\n        </div>\n    \n        <div class="form-group">\n          <label class=" label">Mobile no 2 </label> \n          <input formControlName="omobile_no_2" autocomplete="off" type="text" OnlyNumber="true" class="form-control" />\n        </div>\n        <div class="error-msg" *ngIf="submitted || (addForm.controls.omobile_no_2.invalid && (addForm.controls.omobile_no_2.dirty || addForm.controls.omobile_no_2.touched))">\n          <div *ngIf="addForm.controls[\'omobile_no_2\'].hasError(\'minlength\')">\n            <label>Minimum length is upto 10 letters.</label>\n          </div>\n          <div *ngIf="addForm.controls[\'omobile_no_2\'].hasError(\'maxlength\')">\n            <label>Maximum length is upto 10 letters.</label>\n          </div>\n        </div>\n\n\n        <!-- ------------------------------- -->\n      \n      <div class="form-group">\n        <label class=" label">Contact person <span style="color:red">*</span> </label> \n        <input formControlName="contact_person" autocomplete="off" type="text" class="form-control" />\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.contact_person.invalid && (addForm.controls.contact_person.dirty || addForm.controls.contact_person.touched))">\n        <div *ngIf="addForm.controls[\'contact_person\'].hasError(\'required\')">\n          <label>Contact person name is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'contact_person\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'contact_person\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile no 1 <span style="color:red">*</span> </label> \n        <input formControlName="mobile_no_1" autocomplete="off" type="text" OnlyNumber="true" class="form-control" />\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.mobile_no_1.invalid && (addForm.controls.mobile_no_1.dirty || addForm.controls.mobile_no_1.touched))">\n        <div *ngIf="addForm.controls[\'mobile_no_1\'].hasError(\'required\')">\n          <label>Mobile number is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'mobile_no_1\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'mobile_no_1\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile no 2 </label> \n        <input formControlName="mobile_no_2" autocomplete="off" type="text" OnlyNumber="true" class="form-control" />\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.mobile_no_2.invalid && (addForm.controls.mobile_no_2.dirty || addForm.controls.mobile_no_2.touched))">\n        <div *ngIf="addForm.controls[\'mobile_no_2\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'mobile_no_2\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="next-button" (click)="nextAddress()" type="button" expand="block">Next</button>\n      </div>\n    </div>\n\n    <!------------ Address Flag  ---------->\n    <div *ngIf="addressFlag">\n      <div class="width-full">\n      <label class="fonts-size">Address Information </label>\n      </div><br>\n      <!-- <div formArrayName="address" *ngFor="let item of addForm.get(\'address\').controls; let i = index;">\n        <div [formGroupName]="i">\n          <div class="form-group">\n            <label class=" label">Address line 1</label>\n            <input type="text" formControlName="address_line_1" class="form-control">            \n          </div>\n          \n          <div class="form-group">\n            <label class=" label">Address line 2</label>\n            <input type="text" formControlName="address_line_2" class="form-control">            \n          </div>\n        \n          <div class="form-group">\n            <label class=" label">City</label>\n            <input type="text" formControlName="city" class="form-control">            \n          </div>\n        \n          <div class="form-group">\n            <label class=" label">State</label>\n            <input type="text" formControlName="state" class="form-control">            \n          </div>\n        \n          <div class="form-group">\n            <label class=" label">Pincode</label>\n            <input type="text" OnlyNumber="true" formControlName="pincode" class="form-control">            \n          </div>\n\n        </div>\n      </div> -->\n      <div formArrayName="address" *ngFor="let item of addForm.get(\'address\').controls; let i = index;">\n        <div [formGroupName]="i">\n          <div class="form-group">\n            <label class=" label">Address line 1 <span style="color:red">*</span></label>\n            <input type="text" formControlName="address_line_1" autocomplete="off" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.address_line_1.invalid && (item.controls.address_line_1.dirty || item.controls.address_line_1.touched))">\n            <div *ngIf="item.controls[\'address_line_1\'].hasError(\'required\')">\n              <label>Address line 1 is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'address_line_1\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <label class=" label">Address line 2 <span style="color:red">*</span></label>\n            <input type="text" formControlName="address_line_2" autocomplete="off" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.address_line_2.invalid && (item.controls.address_line_2.dirty || item.controls.address_line_2.touched))">\n            <div *ngIf="item.controls[\'address_line_2\'].hasError(\'required\')">\n              <label>Address line 2 is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'address_line_2\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">City <span style="color:red">*</span></label>\n            <input id="City" type="text" placeholder="Search City" formControlName="city" class="form-control" #searchCity>            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.city.invalid && (item.controls.city.dirty || item.controls.city.touched))">\n            <div *ngIf="item.controls[\'city\'].hasError(\'required\')">\n              <label>City is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'city\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">State <span style="color:red">*</span></label>\n            <input id="State" type="text" placeholder="Search State"  formControlName="state" class="form-control" #searchStatue>            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.state.invalid && (item.controls.state.dirty || item.controls.state.touched))">\n            <div *ngIf="item.controls[\'state\'].hasError(\'required\')">\n              <label>State is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'state\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">Pincode <span style="color:red">*</span></label>\n            <input type="text" OnlyNumber="true" formControlName="pincode" autocomplete="off" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.pincode.invalid && (item.controls.pincode.dirty || item.controls.pincode.touched))">\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'required\')">\n              <label>Pincode is required.</label>\n            </div>\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 6 letters.</label>\n            </div>\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'maxlength\')">\n              <label>Maximum length is upto 6 letters.</label>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="preCompany()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="nextLocation()" type="button" expand="block">Next</button>\n        </div>\n    </div>\n\n    <!------------ Location Flag  ---------->\n    <div *ngIf="locationFlag">\n      <div class="width-full">\n      <label class="fonts-size">Location Allotment </label>\n      </div>\n      <div class="form-group">\n        <input name="location"  id="Location" type="text" placeholder="Search Location" formControlName="location" class="form-control" #search>\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.location.invalid && (addForm.controls.location.dirty || addForm.controls.location.touched))">\n        <div *ngIf="addForm.controls[\'location\'].hasError(\'required\')">\n          <label>Location is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'location\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'location\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n<div class="width-full">\n      <ion-row right>  \n        <ion-col text-right>   \n          <button ion-button (click)="getLocation($event)"><ion-icon name="locate"></ion-icon></button>\n        </ion-col> \n      </ion-row>\n\n      <google-maps (googleAddress)="addressData($event)"></google-maps>\n      <br>\n    </div>\n      <div class="form-group">\n        <label class=" label">Location Restriction (meters)</label>\n        <input name="location_restriction" type="number" placeholder="" formControlName="location_restriction" class="form-control"> \n      </div>\n      <div class="form-group">\n        <label class=" label">Latitude </label>\n        <input name="latitude" type="text" autocomplete="off" placeholder="" formControlName="latitude" class="form-control"> \n      </div>\n      <div class="form-group">\n        <label class=" label">Longitude </label>\n        <input name="longitude" type="text" autocomplete="off" placeholder="" formControlName="longitude" class="form-control"> \n      </div>\n\n      <div class="form-group">\n        <label class=" label">Website</label> \n        <input formControlName="website" autocomplete="off" type="text" class="form-control" />\n      </div>\n      \n      <div *ngFor="let req of obj.company_requirement; let i = index">\n        <ion-item-divider></ion-item-divider>\n        <div *ngIf="req" class="mg-top-10">\n          <br>\n          <label class="fonts-size">Company requirements {{i + 1}}</label>\n          <br>\n          <ion-icon name="more" class="more fright" (click)="actionSheetForUpdate(req, i)"></ion-icon>\n          <p>Material : {{ req.material } </p>\n          <p>Destination : {{ req.to_destination } </p>\n          <p>Vehicle capacity : {{ req.vehicle_capacity } </p>\n          <p>Vehicle type : {{ req.vehicle_type } </p>\n        </div>\n      </div>\n\n      <!-- <ion-row center>  \n        <ion-col text-center>   \n          <button ion-button (click)="openRequirementModal($event)"><ion-icon name="add"></ion-icon> &nbsp;Add more requirements</button>  \n        </ion-col> \n      </ion-row> -->\n\n      <br>\n      <div class="width-full" padding>\n        <!-- <button ion-button size="large" type="submit" [disabled]="form.invalid" expand="block">Login</button> -->\n        \n        \n        <button ion-button class="pre-button-n" (click)="nextAddress()" type="button" expand="block">Previous</button>\n        <button ion-button class="next-button" (click)="nextReq()" type="button" expand="block">Next</button>\n        \n      </div>\n    </div>\n\n    <!------------ Requirements Flag  ---------->\n    <div *ngIf="requirementFlag">\n      <div class="width-full btm-margin">\n      <label class="fonts-size">Add Requirements </label></div><br>\n      <div class="form-group">\n        <div class="width-full">\n        <label class=" label"><b>Select Materials</b></label>\n        </div>\n        <hr>\n        <br>\n        <div *ngFor="let m of materialsArray; let i = index;" padding>\n          <div *ngIf="m.flag">\n            <input type="checkbox" checked="{{m.flag}}" value="m.name" (change)="addMaterials($event, m.name, i)"> &nbsp;{{ m.name }}\n          </div>\n          <div *ngIf="!m.flag">\n            <input type="checkbox"  value="m.name" (change)="addMaterials($event, m.name, i)"> &nbsp;{{ m.name }}\n          </div>\n        </div> \n      </div>\n\n      <div class="form-group">\n        <div class="width-full">\n        <label class=" label"><b>Truck Types</b></label>\n        </div>\n        <hr>\n        <br>\n        <div *ngFor="let tt of truckTypes; let j = index;" padding>\n          <div *ngIf="tt.flag">\n            <input type="checkbox" checked="{{tt.flag}}" value="tt.name" (change)="addTruckType($event, tt.name, j)"> &nbsp;{{ tt.name }}\n          </div>\n\n          <div *ngIf="!tt.flag">\n            <input type="checkbox"  value="tt.name" (change)="addTruckType($event, tt.name, j)"> &nbsp;{{ tt.name }}    \n          </div>\n        </div> \n      </div>\n\n      <div class="form-group">\n        <div class="width-full">        <label class=" label"><b>Capacity </b></label>\n          </div>\n        <hr>\n        <br>\n        <div *ngFor="let c of truckCapacityList; let a = index;" padding>\n          <div *ngIf="c.flag">\n            <input type="checkbox" checked="{{c.flag}}" value="c.name" (change)="addCapacity($event, c.name, a)"> &nbsp;{{ c.name }}\n          </div>\n          <div *ngIf="!c.flag">\n            <input type="checkbox" value="c.name" (change)="addCapacity($event, c.name, a)"> &nbsp;{{ c.name }}\n          </div>\n        </div> \n      </div>\n\n      <br>\n      <div class="width-full" padding>\n        <button ion-button class="pre-button-n" (click)="nextLocation()" type="button" expand="block">Previous</button>\n        <button ion-button block class="up-button" type="submit" expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Company</button>\n      </div>\n    </div>\n\n  </form>\n\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\add-company\add-company.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_6__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_5__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* ActionSheetController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["k" /* ModalController */],
            __WEBPACK_IMPORTED_MODULE_7__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_8__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], AddCompanyPage);
    return AddCompanyPage;
}());

//# sourceMappingURL=add-company.js.map

/***/ }),

/***/ 998:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddDriverPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__helpers_common__ = __webpack_require__(31);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








// import {} from '@types/googlemaps';



// import {googlemaps} from 'googlemaps';
/**
 * Generated class for the AddDriverPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddDriverPage = /** @class */ (function () {
    function AddDriverPage(navCtrl, navParams, trucks, loader, toast, fb, events, mapsAPILoader, ngZone) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.trucks = trucks;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.events = events;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.demo = false;
        this.acountNo = false;
        this.driverFlag = true;
        this.addressFlag = false;
        this.licenceFlag = false;
        this.bankFlag = false;
        this.routeFlag = false;
        this.employeeFlag = false;
        this.paymentFlag = false;
        this.present_address_location = {
            type: "Point",
            coordinates: []
        };
        this.types = ['New Registration', 'Renewal'];
        this.permanent_address_location = {
            type: "Point",
            coordinates: []
        };
        this.submitted = false;
        this.DestinationsArray = [];
        this.getTo = "";
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_8_rxjs__["Observable"].of([]);
            }
        };
        // Search query for Transporter Name list
        this.transporterName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchTransporterName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_8_rxjs__["Observable"].of([]);
            }
        };
        this.formData = new FormData();
        this.addriverForm = this.fb.group({
            driver_name: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(25)])],
            mobile_no_1: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            mobile_no_2: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            adhar_card_no: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(12), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(12)])],
            licence_no: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(15), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(15)])],
            expiry_date: [''],
            account_holder_name: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(25)])],
            account_number: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(16)])],
            confirm_account_number: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(16)])],
            ifsc: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(11), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(11)])],
            present_address: this.fb.array([this.createPresentAddressForm()]),
            permanent_address: this.fb.array([this.createPermanentAddressForm()]),
            // route_desired: this.fb.array([this.routeDesiredForm()]),
            employers_history: this.fb.array([this.employersHistoryForm()]),
            payment_history: this.fb.array([this.paymentHistoryForm()]),
            vehicle_preferred: [''],
            agency_name: [''],
            renewal_date: [''],
            location_to: [''],
            route_desired: ['']
        });
    }
    AddDriverPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddDriverPage');
    };
    AddDriverPage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_9__home_home__["a" /* HomePage */]);
    };
    AddDriverPage.prototype.addToArray = function () {
        var obj = { "location": this.getTo };
        this.DestinationsArray.push(obj);
        this.addriverForm.get('location_to').setValue('');
    };
    AddDriverPage.prototype.removeToArray = function (index) {
        this.DestinationsArray.splice(index, 1);
        console.log("array >>>", this.DestinationsArray);
    };
    AddDriverPage.prototype.ngOnInit = function () {
        // this.mapsAPILoader.load().then(() => {
        //   let presentState = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {
        //     types: ['(cities)' && 'geocode']
        //   });
        //   presentState.addListener("place_changed", () => {
        //     this.ngZone.run(() => {
        //       //get the place result
        //       let place: google.maps.places.PlaceResult = presentState.getPlace();
        //       console.log("place   >>>>>>", place);
        //       console.log("vicinity   >>>>>>", place.vicinity);
        //       (<HTMLInputElement>document.getElementById('city')).value = place.vicinity;
        //       // //verify result
        //       // if (place.geometry === undefined || place.geometry === null) {
        //       //   return;
        //       // }
        //     });
        //   });
        // });
    };
    Object.defineProperty(AddDriverPage.prototype, "routeDesired", {
        // ---------------- routeDesired ---------------- 
        get: function () { return this.addriverForm.get('route_desired'); },
        enumerable: true,
        configurable: true
    });
    AddDriverPage.prototype.routeDesiredForm = function () {
        return this.fb.group({
            location: ['']
        });
    };
    AddDriverPage.prototype.addTo = function () {
        this.route_desired = this.addriverForm.get('route_desired');
        this.route_desired.push(this.routeDesiredForm());
    };
    AddDriverPage.prototype.removeTo = function (index) {
        if (index === 0) {
            this.toast.error({ 'message': 'Cannot remove this form.' });
        }
        else {
            this.route_desired.removeAt(index);
        }
    };
    Object.defineProperty(AddDriverPage.prototype, "employersHistory", {
        // --------------------------------------------
        // ---------------- employersHistoryForm ---------------- 
        get: function () { return this.addriverForm.get('employers_history'); },
        enumerable: true,
        configurable: true
    });
    AddDriverPage.prototype.employersHistoryForm = function () {
        return this.fb.group({
            from: [''],
            to: [''],
            transporter: [''],
            mobile: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(10)])],
            salary: ['']
        });
    };
    AddDriverPage.prototype.addToEmp = function () {
        this.employers_history = this.addriverForm.get('employers_history');
        this.employers_history.push(this.employersHistoryForm());
    };
    AddDriverPage.prototype.removeToEmp = function (index) {
        if (index === 0) {
            this.toast.error({ 'message': 'Cannot remove this form.' });
        }
        else {
            this.employers_history.removeAt(index);
        }
    };
    Object.defineProperty(AddDriverPage.prototype, "paymentHistory", {
        // ------------------------------------------------------
        // ---------------- paymentHistoryForm ---------------- 
        get: function () { return this.addriverForm.get('payment_history'); },
        enumerable: true,
        configurable: true
    });
    AddDriverPage.prototype.paymentHistoryForm = function () {
        return this.fb.group({
            payment_date: [''],
            type: [''],
            amount: ['']
        });
    };
    AddDriverPage.prototype.addToPay = function () {
        this.payment_history = this.addriverForm.get('payment_history');
        this.payment_history.push(this.paymentHistoryForm());
    };
    AddDriverPage.prototype.removeToPay = function (index) {
        if (index === 0) {
            this.toast.error({ 'message': 'Cannot remove this form.' });
        }
        else {
            this.payment_history.removeAt(index);
        }
    };
    // ------------------------------------------------------
    AddDriverPage.prototype.getPresentAddLocation = function (e) {
        e.preventDefault();
        this.events.broadcast('location');
    };
    AddDriverPage.prototype.getPermanentAddLocation = function (e) {
        e.preventDefault();
        this.events.broadcast('location');
    };
    // Create form controls for present address
    AddDriverPage.prototype.createPresentAddressForm = function () {
        return this.fb.group({
            address_line_1: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            address_line_2: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            city: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            state: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            pincode: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(6), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(6)])]
        });
    };
    Object.defineProperty(AddDriverPage.prototype, "presentAddressFormControls", {
        // Get controls for form array for address 
        get: function () {
            return this.addriverForm.get('present_address')['controls'][0].controls;
        },
        enumerable: true,
        configurable: true
    });
    // Set data from google maps for present address
    AddDriverPage.prototype.presentAddressData = function (e) {
        this.formValues = this.addriverForm.value;
        this.presentAddressFormControls['address_line_1'].setValue(e.address_line1);
        this.presentAddressFormControls['address_line_2'].setValue(e.address_line2);
        this.presentAddressFormControls['city'].setValue(e.city);
        this.presentAddressFormControls['state'].setValue(e.state);
        this.presentAddressFormControls['pincode'].setValue(e.pincode);
        this.present_address_location.coordinates = [];
        this.present_address_location.coordinates.push(e.lng);
        this.present_address_location.coordinates.push(e.lat);
        this.formValues.present_address[0].address_location = this.present_address_location;
    };
    // Create form controls for permanent address
    AddDriverPage.prototype.createPermanentAddressForm = function () {
        return this.fb.group({
            address_line_1: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            address_line_2: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            city: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            state: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(2)])],
            pincode: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].minLength(6), __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].maxLength(6)])]
        });
    };
    Object.defineProperty(AddDriverPage.prototype, "permanentAddressFormControls", {
        get: function () {
            return this.addriverForm.get('permanent_address')['controls'][0].controls;
        },
        enumerable: true,
        configurable: true
    });
    // Set data from google maps for permanent address  
    AddDriverPage.prototype.permanentAddressData = function (e) {
        this.formValues = this.addriverForm.value;
        this.permanentAddressFormControls['address_line_1'].setValue(e.address_line1);
        this.permanentAddressFormControls['address_line_2'].setValue(e.address_line2);
        this.permanentAddressFormControls['city'].setValue(e.city);
        this.permanentAddressFormControls['state'].setValue(e.state);
        this.permanentAddressFormControls['pincode'].setValue(e.pincode);
        this.permanent_address_location.coordinates = [];
        this.permanent_address_location.coordinates.push(e.lng);
        this.permanent_address_location.coordinates.push(e.lat);
        this.formValues.permanent_address[0].address_location = this.permanent_address_location;
    };
    AddDriverPage.prototype.driverPhotoSelected = function (event) {
        var fileList = event.target.files;
        if (fileList.length > 0) {
            var file = fileList[0];
            this.formData.append('driver_photo', file, file.name);
        }
    };
    AddDriverPage.prototype.licencePhotoSelected = function (event) {
        var fileList = event.target.files;
        if (fileList.length > 0) {
            var file = fileList[0];
            this.formData.append('licence_photo', file, file.name);
        }
    };
    AddDriverPage.prototype.confirmAccount = function () {
        if (this.addriverForm.value.account_number == this.addriverForm.value.confirm_account_number) {
            console.log("Same");
            this.acountNo = false;
        }
        else {
            console.log("Not Same");
            this.acountNo = true;
        }
    };
    AddDriverPage.prototype.save = function (isValid, value) {
        var _this = this;
        console.log(">>>>>>>>>>COntrols", this.addriverForm);
        this.submitted = true;
        var employersHistoryArray = [];
        var obj;
        this.addriverForm.value.employers_history.forEach(function (r) {
            obj = r;
            // obj.transporter = r.transporter.transport_name
            obj.transporter = r.transporter;
            employersHistoryArray.push(obj);
        });
        if (isValid) {
            this.formData.append('account_holder_name', value.account_holder_name);
            this.formData.append('account_number', value.account_number);
            this.formData.append('adhar_card_no', value.adhar_card_no);
            this.formData.append('confirm_account_number', value.confirm_account_number);
            this.formData.append('driver_name', value.driver_name);
            this.formData.append('expiry_date', value.expiry_date);
            this.formData.append('ifsc', value.ifsc);
            this.formData.append('licence_no', value.licence_no);
            this.formData.append('mobile_no_1', value.mobile_no_1);
            this.formData.append('mobile_no_2', value.mobile_no_2);
            this.formData.append('permanent_address', JSON.stringify(value.permanent_address));
            this.formData.append('present_address', JSON.stringify(value.present_address));
            // this.formData.append('route_desired', JSON.stringify(value.route_desired));
            this.formData.append('route_desired', JSON.stringify(this.DestinationsArray));
            // employers_history: this.fb.array([this.employersHistoryForm()]),
            // payment_history: this.fb.array([this.paymentHistoryForm()]),
            // vehicle_preferred: [''],
            // agency_name: [''],
            // renewal_date: ['']
            this.formData.append('employers_history', JSON.stringify(employersHistoryArray));
            this.formData.append('payment_history', JSON.stringify(value.payment_history));
            this.formData.append('vehicle_preferred', value.vehicle_preferred);
            this.formData.append('agency_name', value.agency_name.agency_name);
            this.formData.append('renewal_date', value.renewal_date);
            this.loader.show();
            this.trucks.addDriver(this.formData).subscribe(function (res) {
                _this.loader.hide();
                console.log("res >>>>>", res);
                // this.navCtrl.push(HomePage);
                _this.addriverForm.reset();
                _this.toast.show({ 'message': 'Added successfully.' });
                _this.navCtrl.setRoot('ManageDriverPage');
            }, function (err) {
                _this.loader.hide();
                _this.toast.error({ 'message': 'Something went wrong.' });
                console.log(">>>>>Err", err);
            });
        }
    };
    AddDriverPage.prototype.preDriver = function () {
        this.driverFlag = true;
        this.addressFlag = false;
        this.licenceFlag = false;
        this.bankFlag = false;
        this.routeFlag = false;
        this.employeeFlag = false;
        this.paymentFlag = false;
    };
    AddDriverPage.prototype.nextAddress = function () {
        var _this = this;
        this.driverFlag = false;
        this.addressFlag = true;
        this.licenceFlag = false;
        this.bankFlag = false;
        this.routeFlag = false;
        this.employeeFlag = false;
        this.paymentFlag = false;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var presentCity = new google.maps.places.Autocomplete(_this.searchElementRef.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentCity.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('presentCity').value = pre_city;
                        // present_address  permanent_address
                        var addr = _this.addriverForm.get('present_address');
                        var first = addr.at(0);
                        first.get('city').setValue(pre_city);
                    });
                });
                var presentState = new google.maps.places.Autocomplete(_this.searchElementRef2.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentState.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentState.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        console.log(components, place);
                        document.getElementById('presentState').value = components.administrative_area_level_1;
                        // present_address  permanent_address
                        var addr = _this.addriverForm.get('present_address');
                        var first = addr.at(0);
                        first.get('state').setValue(components.administrative_area_level_1);
                    });
                });
                var permanentCity = new google.maps.places.Autocomplete(_this.searchElementRef3.nativeElement, {
                    componentRestrictionsaddToArray: { "country": "IN" },
                    types: []
                });
                permanentCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = permanentCity.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('permanentCity').value = pre_city;
                        var addr = _this.addriverForm.get('permanent_address');
                        var first = addr.at(0);
                        first.get('city').setValue(pre_city);
                    });
                });
                var permanentState = new google.maps.places.Autocomplete(_this.searchElementRef4.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                permanentState.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        var place = permanentState.getPlace();
                        var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        document.getElementById('permanentState').value = components.administrative_area_level_1;
                        var addr = _this.addriverForm.get('permanent_address');
                        var first = addr.at(0);
                        first.get('state').setValue(components.administrative_area_level_1);
                    });
                });
            });
        }, 2000);
    };
    AddDriverPage.prototype.nextLicence = function () {
        this.driverFlag = false;
        this.addressFlag = false;
        this.licenceFlag = true;
        this.bankFlag = false;
        this.routeFlag = false;
        this.employeeFlag = false;
        this.paymentFlag = false;
    };
    AddDriverPage.prototype.nextBank = function () {
        this.driverFlag = false;
        this.addressFlag = false;
        this.licenceFlag = false;
        this.bankFlag = true;
        this.routeFlag = false;
        this.employeeFlag = false;
        this.paymentFlag = false;
    };
    AddDriverPage.prototype.nextRoute = function () {
        var _this = this;
        this.driverFlag = false;
        this.addressFlag = false;
        this.licenceFlag = false;
        this.bankFlag = false;
        this.routeFlag = true;
        this.employeeFlag = false;
        this.paymentFlag = false;
        setTimeout(function () {
            var toSearch = new google.maps.places.Autocomplete(_this.searchElementRefTo.nativeElement, {
                componentRestrictions: { "country": "IN" },
                types: []
            });
            toSearch.addListener("place_changed", function () {
                _this.ngZone.run(function () {
                    //get the place result
                    var place = toSearch.getPlace();
                    var components = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].extract_components(place);
                    var to_place = __WEBPACK_IMPORTED_MODULE_10__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                    console.log(components, to_place);
                    document.getElementById('TO').value = to_place;
                    _this.getTo = to_place;
                });
            });
        }, 2000);
    };
    AddDriverPage.prototype.nextEmployee = function () {
        this.driverFlag = false;
        this.addressFlag = false;
        this.licenceFlag = false;
        this.bankFlag = false;
        this.routeFlag = false;
        this.employeeFlag = true;
        this.paymentFlag = false;
    };
    AddDriverPage.prototype.nextPayment = function () {
        this.driverFlag = false;
        this.addressFlag = false;
        this.licenceFlag = false;
        this.bankFlag = false;
        this.routeFlag = false;
        this.employeeFlag = false;
        this.paymentFlag = true;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddDriverPage.prototype, "searchElementRef", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search2"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddDriverPage.prototype, "searchElementRef2", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search3"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddDriverPage.prototype, "searchElementRef3", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search4"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddDriverPage.prototype, "searchElementRef4", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("searchTo"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddDriverPage.prototype, "searchElementRefTo", void 0);
    AddDriverPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-driver',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\add-driver\add-driver.html"*/'<!--\n  Generated template for the AddDriverPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n    <ion-toolbar>\n      <ion-title>Add Driver</ion-title>\n      <ion-buttons end>\n        <button ion-button icon-only (click)="Home()" >\n            <ion-icon name="home" ></ion-icon>\n        </button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n  <form [formGroup]="addriverForm" novalidate>\n\n    <!------------------ Driver Flag ----------------  -->\n    <div *ngIf="driverFlag">\n      <div class="width-full">\n      <label class="fonts-size">Driver Details </label>\n      </div>\n      <div class="form-group">\n        <label class=" label">Driver name <span style="color:red">*</span> </label> \n        <input name="driver_name" type="text" autocomplete="off" formControlName="driver_name" class="form-control" />\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addriverForm.controls.driver_name.invalid && (addriverForm.controls.driver_name.dirty || addriverForm.controls.driver_name.touched))">\n        <div *ngIf="addriverForm.controls[\'driver_name\'].hasError(\'required\')">\n          <label>Driver name is required.</label>\n        </div>\n        <div *ngIf="addriverForm.controls[\'driver_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addriverForm.controls[\'driver_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n      \n      <div class="form-group">\n        <label class=" label">Driver photo </label>\n        <input type="file" class="form-control" (change)="driverPhotoSelected($event)" placeholder="Upload file">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile no 1 <span style="color:red">*</span> </label> \n        <input name="mobile_no_1" type="text" autocomplete="off" OnlyNumber="true" placeholder="" formControlName="mobile_no_1" class="form-control" />\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addriverForm.controls.mobile_no_1.invalid && (addriverForm.controls.mobile_no_1.dirty || addriverForm.controls.mobile_no_1.touched))">\n        <div *ngIf="addriverForm.controls[\'mobile_no_1\'].hasError(\'required\')">\n          <label>Mobile number is required.</label>\n        </div>\n        <div *ngIf="addriverForm.controls[\'mobile_no_1\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addriverForm.controls[\'mobile_no_1\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n      \n      <div class="form-group">\n        <label class=" label">Mobile no 2 </label> \n        <input name="mobile_no_2" type="text" autocomplete="off" OnlyNumber="true" placeholder="" formControlName="mobile_no_2" class="form-control" />\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addriverForm.controls.mobile_no_2.invalid && (addriverForm.controls.mobile_no_2.dirty || addriverForm.controls.mobile_no_2.touched))">\n        <div *ngIf="addriverForm.controls[\'mobile_no_2\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addriverForm.controls[\'mobile_no_2\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n      <div class="form-group">\n          <label class=" label">Aadhar card no </label> \n          <input name="adhar_card_no" type="text" autocomplete="off" placeholder="" formControlName="adhar_card_no" class="form-control" />\n        </div>\n        <div class="error-msg" *ngIf="submitted || (addriverForm.controls.adhar_card_no.invalid && (addriverForm.controls.adhar_card_no.dirty || addriverForm.controls.adhar_card_no.touched))">\n          <div *ngIf="addriverForm.controls[\'adhar_card_no\'].hasError(\'minlength\')">\n            <label>Minimum length is upto 12 letters.</label>\n          </div>\n          <div *ngIf="addriverForm.controls[\'adhar_card_no\'].hasError(\'maxlength\')">\n            <label>Maximum length is upto 12 letters.</label>\n          </div>\n        </div>\n\n      <br>\n      <div class="width-full padding">\n      <button ion-button class="next-button" (click)="nextAddress()" type="button" expand="block">Next</button>\n  </div>\n    </div>\n\n    <!------------------ Address Flag ----------------  -->\n    <div *ngIf="addressFlag">\n      <label class="fonts-size">Address Information</label>\n      <br>\n      <br>\n      <b>Present Address </b>\n      <hr>\n\n      <!-- <ion-row right>  \n        <ion-col text-right>   \n          <button ion-button (click)="getLocation($event)"><ion-icon name="locate"></ion-icon></button>\n        </ion-col> \n      </ion-row>\n\n      <google-maps (googleAddress)="presentAddressData($event)"></google-maps>\n      <br> -->\n\n      <div formArrayName="present_address" *ngFor="let item of addriverForm.get(\'present_address\').controls; let i = index;">\n        <div [formGroupName]="i">\n          <div class="form-group">\n            <label class=" label">Address line 1 </label>\n            <input type="text" formControlName="address_line_1" autocomplete="off" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.address_line_1.invalid && (item.controls.address_line_1.dirty || item.controls.address_line_1.touched))">\n            <!-- <div *ngIf="item.controls[\'address_line_1\'].hasError(\'required\')">\n              <label>Address line 1 is required.</label>\n            </div> -->\n            <div *ngIf="item.controls[\'address_line_1\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <label class=" label">Address line 2 </label>\n            <input type="text" formControlName="address_line_2" autocomplete="off" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.address_line_2.invalid && (item.controls.address_line_2.dirty || item.controls.address_line_2.touched))">\n            <!-- <div *ngIf="item.controls[\'address_line_2\'].hasError(\'required\')">\n              <label>Address line 2 is required.</label>\n            </div> -->\n            <div *ngIf="item.controls[\'address_line_2\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">City </label>\n            <!-- <input type="text" formControlName="city" class="form-control">     -->\n            <!-- (ionChange)="selectPresentCity()"  -->\n            <input id="presentCity"  placeholder="Search City" autocorrect="off" autocapitalize="off" spellcheck="off" type="text" class="form-control" #search formControlName="city">\n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.city.invalid && (item.controls.city.dirty || item.controls.city.touched))">\n            <!-- <div *ngIf="item.controls[\'city\'].hasError(\'required\')">\n              <label>City is required.</label>\n            </div> -->\n            <div *ngIf="item.controls[\'city\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">State</label>\n            <!-- <input type="text" formControlName="state" class="form-control">    -->\n            <!-- (valueSelected)="selectPresentState()"  -->\n            <input id="presentState" placeholder="Search State" autocorrect="off" autocapitalize="off" spellcheck="off" type="text" class="form-control" #search2 formControlName="state">                 \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.state.invalid && (item.controls.state.dirty || item.controls.state.touched))">\n            <!-- <div *ngIf="item.controls[\'state\'].hasError(\'required\')">\n              <label>State is required.</label>\n            </div> -->\n            <div *ngIf="item.controls[\'state\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">Pincode</label>\n            <input type="text" OnlyNumber="true" formControlName="pincode" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.pincode.invalid && (item.controls.pincode.dirty || item.controls.pincode.touched))">\n            <!-- <div *ngIf="item.controls[\'pincode\'].hasError(\'required\')">\n              <label>Pincode is required.</label>\n            </div> -->\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 6 letters.</label>\n            </div>\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'maxlength\')">\n              <label>Maximum length is upto 6 letters.</label>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <br><br>\n      <div class="width-full btm-margin">\n      <b>Permanent Address </b>\n      <hr>\n      </div>\n      \n\n      <!-- <ion-row right>  \n        <ion-col text-right>   \n          <button ion-button (click)="getPermanentAddLocation($event)"><ion-icon name="locate"></ion-icon></button>\n        </ion-col> \n      </ion-row> -->\n\n      <!-- <google-maps (googleAddress)="permanentAddressData($event)"></google-maps>\n      <br> -->\n\n      <div formArrayName="permanent_address" *ngFor="let item of addriverForm.get(\'permanent_address\').controls; let i = index;">\n        <div [formGroupName]="i">\n          <div class="form-group">\n            <label class=" label">Address line 1</label>\n            <input type="text" formControlName="address_line_1" autocomplete="off" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.address_line_1.invalid && (item.controls.address_line_1.dirty || item.controls.address_line_1.touched))">\n            <!-- <div *ngIf="item.controls[\'address_line_1\'].hasError(\'required\')">\n              <label>Address line 1 is required.</label>\n            </div> -->\n            <div *ngIf="item.controls[\'address_line_1\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n\n          <div class="form-group">\n            <label class=" label">Address line 2</label>\n            <input type="text" formControlName="address_line_2" autocomplete="off" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.address_line_2.invalid && (item.controls.address_line_2.dirty || item.controls.address_line_2.touched))">\n            <!-- <div *ngIf="item.controls[\'address_line_2\'].hasError(\'required\')">\n              <label>Address line 2 is required.</label>\n            </div> -->\n            <div *ngIf="item.controls[\'address_line_2\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">City</label>\n            <!-- <input type="text" formControlName="city" class="form-control">             -->\n\n            <input id="permanentCity"  placeholder="Search City" autocorrect="off" autocapitalize="off" spellcheck="off" type="text" class="form-control" #search3 formControlName="city">\n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.city.invalid && (item.controls.city.dirty || item.controls.city.touched))">\n            <!-- <div *ngIf="item.controls[\'city\'].hasError(\'required\')">\n              <label>City is required.</label>\n            </div> -->\n            <div *ngIf="item.controls[\'city\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">State</label>\n            <!-- <input type="text" formControlName="state" class="form-control">     -->\n            <input id="permanentState"  placeholder="Search State" autocorrect="off" autocapitalize="off" spellcheck="off" type="text" class="form-control" #search4 formControlName="state">        \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.state.invalid && (item.controls.state.dirty || item.controls.state.touched))">\n            <!-- <div *ngIf="item.controls[\'state\'].hasError(\'required\')">\n              <label>State is required.</label>\n            </div> -->\n            <div *ngIf="item.controls[\'state\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 2 letters.</label>\n            </div>\n          </div>\n        \n          <div class="form-group">\n            <label class=" label">Pincode</label>\n            <input type="text" OnlyNumber="true" formControlName="pincode" class="form-control">            \n          </div>\n          <div class="error-msg" *ngIf="submitted || (item.controls.pincode.invalid && (item.controls.pincode.dirty || item.controls.pincode.touched))">\n            <!-- <div *ngIf="item.controls[\'pincode\'].hasError(\'required\')">\n              <label>Pincode is required.</label>\n            </div> -->\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'minlength\')">\n              <label>Minimum length is upto 6 letters.</label>\n            </div>\n            <div *ngIf="item.controls[\'pincode\'].hasError(\'maxlength\')">\n              <label>Maximum length is upto 6 letters.</label>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      \n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="preDriver()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="nextLicence()" type="button" expand="block">Next</button>\n</div>\n    </div>\n\n    <!------------------ Licence Flag ----------------  -->\n    <div *ngIf="licenceFlag">\n      <div class="width-full">\n      <label class="fonts-size">Licence Details</label>\n      </div>\n      <div class="form-group">\n        <label class=" label">Licence no <span style="color:red">*</span> </label> \n        <input name="licence_no" type="text" placeholder="" autocomplete="off" formControlName="licence_no" class="form-control upper" />\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addriverForm.controls.licence_no.invalid && (addriverForm.controls.licence_no.dirty || addriverForm.controls.licence_no.touched))">\n        <div *ngIf="addriverForm.controls[\'licence_no\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 15 letters.</label>\n        </div>\n        <div *ngIf="addriverForm.controls[\'licence_no\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 15 letters.</label>\n        </div>\n      </div>\n      \n      <div class="form-group">\n        <label class=" label">Expiry date <span style="color:red">*</span> </label> \n              \n        <ion-item class="form-control">\n            <ion-datetime name="exp_date" displayFormat="DD-MM-YYYY" pickerFormat="DD-MM-YYYY" min="2016" max="2070-10-31" formControlName="expiry_date"></ion-datetime>\n          </ion-item>\n          <div *ngIf="addriverForm.value.licence_no">\n            <!-- <div *ngIf="addriverForm.controls.expiry_date.invalid && (addriverForm.controls.expiry_date.dirty || addriverForm.controls.expiry_date.touched)"> -->\n              <div class="error-msg" *ngIf="addriverForm.controls[\'expiry_date\'].hasError(\'required\') && addriverForm.controls[\'expiry_date\'].touched">\n                <label>Expiry date is required.</label>\n              </div>\n            <!-- </div> -->\n          </div></div>\n\n      <div class="form-group">\n        <label class=" label">Licence photo <span style="color:red">*</span> </label>\n        <input type="file" class="form-control" (change)="licencePhotoSelected($event)" placeholder="Upload file">\n      </div>\n\n      <br>\n      <div class="width-full" >\n      <button ion-button class="pre-button" (click)="nextAddress()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="nextBank()" type="button" expand="block">Next</button>\n</div>\n\n    </div>\n\n    <!------------------ Bank Flag ----------------  -->\n    <div *ngIf="bankFlag">\n      <div class="width-full">\n      <label class="fonts-size">Bank Details</label>\n      </div>\n      <div class="form-group">\n        <label class=" label">Bank Name</label>\n        <input name="account_holder_name" type="text" placeholder="" formControlName="account_holder_name" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addriverForm.controls.account_holder_name.invalid && (addriverForm.controls.account_holder_name.dirty || addriverForm.controls.account_holder_name.touched))">\n        <div *ngIf="addriverForm.controls[\'account_holder_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addriverForm.controls[\'account_holder_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Account no </label>\n        <input name="account_number" type="text" placeholder="" formControlName="account_number" class="form-control"> \n      </div>\n      <div class="error-msg" *ngIf="submitted || (addriverForm.controls.account_number.invalid && (addriverForm.controls.account_number.dirty || addriverForm.controls.account_number.touched))">\n        <div *ngIf="addriverForm.controls[\'account_number\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 16 letters.</label>\n        </div>\n      </div>\n        \n      <div class="form-group">\n        <label class=" label">Confirm account no </label>\n        <input name="confirm_account_number" type="text" placeholder="" (change)="confirmAccount()"  formControlName="confirm_account_number" class="form-control"> \n      </div>\n      <div *ngIf="acountNo" class="error-msg"><label>Your account no and confirm account no do not match.</label></div>\n      <div class="error-msg" *ngIf="submitted || (addriverForm.controls.confirm_account_number.invalid && (addriverForm.controls.confirm_account_number.dirty || addriverForm.controls.confirm_account_number.touched))">\n        <div *ngIf="addriverForm.controls[\'confirm_account_number\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 16 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Ifsc code </label>\n        <input name="ifsc" type="text" placeholder="" formControlName="ifsc" class="form-control upper"> \n      </div>\n     \n      <div class="error-msg" *ngIf="submitted || (addriverForm.controls.ifsc.invalid && (addriverForm.controls.ifsc.dirty || addriverForm.controls.ifsc.touched))">\n        <div *ngIf="addriverForm.controls[\'ifsc\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 11 letters.</label>\n        </div>\n        <div *ngIf="addriverForm.controls[\'ifsc\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 11 letters.</label>\n        </div>\n      </div>\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="nextLicence()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="nextRoute()" type="button" expand="block">Next</button>\n</div>\n    </div>\n\n    <!------------------ Route Flag ----------------  -->\n    <div *ngIf="routeFlag">\n      <div class="width-full">\n      <label class="fonts-size">Route Prefferred</label> \n      </div>\n      <!-- <div formArrayName="route_desired" class="form-group">            \n        <div *ngFor="let r of routeDesired.controls; let i = index;">\n          <div [formGroupName]="i">\n            <ion-grid>\n              <ion-row>\n                <ion-col>\n                  <label class=" label mg-top-13">Location <span style="color:red">*</span> </label>\n                </ion-col>\n                <ion-col>\n                  <ion-row right>\n                    <ion-col text-right>\n                      <button class="btn-size" ion-button color="secondary" (click)="addTo()"><ion-icon name="add"></ion-icon></button>\n                      <button class="btn-size" ion-button color="danger" (click)="removeTo(i)"><ion-icon name="close"></ion-icon></button>\n                    </ion-col>\n                  </ion-row>\n                </ion-col>\n              </ion-row>\n            </ion-grid>\n            <input type="text" formControlName="location" class="form-control" />\n          </div>\n        </div>\n      </div> -->\n\n      <hr>\n      <div class="form-group">\n        <button ion-button (click)="addToArray()" type="button" class="add-al">Add</button>\n        <label class=" label mg-top-13">Location <span style="color:red">*</span></label> \n        <input type="text" id="TO" autocorrect="off" formControlName="location_to" class="form-control" #searchTo />\n      \n        <div *ngFor="let d of DestinationsArray; let i = index" class="margintop15">\n            <ion-row>\n              <ion-col class="col-pad">\n                {{ d.location }}\n              </ion-col>\n            \n              <ion-col>\n                  <button class="btn-size" (click)="removeToArray(i)" ion-button type="button" color="danger"><ion-icon name="close"></ion-icon></button>\n              </ion-col>\n            </ion-row>\n          </div>\n      </div>\n      <hr>\n      <br>\n\n\n      <br>\n      <div class="width-full" padding>\n      <button ion-button class="pre-button" (click)="nextBank()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="nextEmployee()" type="button" expand="block">Next</button>\n</div>\n    </div>\n  \n\n\n\n    <div *ngIf="demo"> \n      <div padding>\n        <button ion-button block size="large" type="button" (click)="save(addriverForm.valid, addriverForm.value)"  expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Driver</button>\n      </div>\n\n    </div>\n    \n\n\n    <!-- ---------------- employersHistoryForm ----------------  -->\n\n    <div *ngIf="employeeFlag">\n      <div class="width-full">\n      <label class="fonts-size">Employers History</label>\n      </div>\n      <div formArrayName="employers_history" class="form-group">            \n        <div *ngFor="let r of employersHistory.controls; let i = index;">\n          <div [formGroupName]="i">\n            <div class="form-group">\n              <label class=" label">From</label>\n              <ion-item class="form-control">\n                <ion-datetime name="from" displayFormat="DD-MM-YYYY" pickerFormat="DD-MM-YYYY" min="1990" max="2050-10-31" formControlName="from"></ion-datetime>\n              </ion-item> \n            </div> \n\n            <div class="form-group">\n              <label class=" label">To</label>\n              <ion-item class="form-control">\n                <ion-datetime name="to" displayFormat="DD-MM-YYYY" pickerFormat="DD-MM-YYYY" min="1990" max="2050-10-31" formControlName="to"></ion-datetime>\n              </ion-item> \n            </div> \n\n            <div class="form-group">\n              <label class=" label">Transporter Name </label>\n              <input name="transporter" type="text" formControlName="transporter" class="form-control" />\n              \n              <!-- <input class="form-control"\n              ng2-auto-complete\n              formControlName="transporter"\n              [source]="transporterName.bind(this)"\n              list-formatter="transport_name" /> -->\n            </div>\n\n            <div class="form-group">\n              <label class=" label">Mobile No</label> \n              <input name="mobile" type="text" formControlName="mobile" class="form-control" />\n            </div>\n\n            <div class="error-msg" *ngIf="submitted || (r.controls.mobile.invalid && (r.controls.mobile.dirty || r.controls.mobile.touched))">\n              <div *ngIf="r.controls[\'mobile\'].hasError(\'minlength\')">\n                <label>Minimum length is upto 10 letters.</label>\n              </div>\n              <div *ngIf="r.controls[\'mobile\'].hasError(\'maxlength\')">\n                <label>Maximum length is upto 10 letters.</label>\n              </div>\n            </div>\n\n            <div class="form-group">\n              <label class=" label">Salary</label> \n              <input name="salary" type="number" formControlName="salary" class="form-control" />\n            </div>\n            \n            <div class="width-full" style="position: relative;">\n            <button class="btn-size" ion-button color="secondary" (click)="addToEmp()"><ion-icon name="add"></ion-icon></button>\n            <button class="btn-size" ion-button color="danger" (click)="removeToEmp(i)"><ion-icon name="close"></ion-icon></button>\n          </div>\n          </div>\n        </div>\n      </div>\n<div class="width-full">\n      <div class="form-group">\n        <label class=" label">Vehicle Preferred</label> \n        <input name="vehicle_preferred" type="text" formControlName="vehicle_preferred" class="form-control" />\n      </div>\n    </div>\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="nextRoute()" type="button" expand="block">Previous</button>\n      <button ion-button class="next-button" (click)="nextPayment()" type="button" expand="block">Next</button>\n</div>\n    </div>\n    \n\n    <!-- ---------------- paymentHistoryForm ----------------  -->\n    <div *ngIf="paymentFlag">\n<div class="width-full">\n        <label class="fonts-size">Payment History</label>\n</div>\n      <div class="form-group">\n        <label class=" label">Agency name</label> \n        <input class="form-control"\n          ng2-auto-complete\n          formControlName="agency_name"\n          [source] = "agencyName.bind(this)"\n          list-formatter="agency_name"/>\n      </div>\n      <div class="width-full">\n      <div formArrayName="payment_history">            \n        <div *ngFor="let r of paymentHistory.controls; let i = index;">\n          <div [formGroupName]="i">\n            <div class="form-group">\n              <label class=" label">Payment Date</label>\n              <ion-item class="form-control">\n                <ion-datetime name="payment_date" displayFormat="DD-MM-YYYY" pickerFormat="DD-MM-YYYY" min="1990" max="2050-10-31" formControlName="payment_date"></ion-datetime>\n              </ion-item> \n            </div> \n\n            <div class="form-group">\n              <label class=" label">Type</label> \n              <select class="form-control drop-down" name="text" formControlName="type" >\n                <option value="">Select Type</option>\n                <option *ngFor="let t of types" [ngValue]="t">{{t}}</option>\n              </select>\n\n              <!-- <input name="type" type="text" formControlName="type" class="form-control" /> -->\n            </div>\n  \n            <div class="form-group">\n              <label class=" label">Amount</label> \n              <input name="amount" type="number" formControlName="amount" class="form-control" />\n            </div>\n            <div class="width-full btm-margin" style="position: relative;">\n            <button class="btn-size" ion-button color="secondary" (click)="addToPay()"><ion-icon name="add"></ion-icon></button>\n            <button class="btn-size" ion-button color="danger" (click)="removeToPay(i)"><ion-icon name="close"></ion-icon></button>\n          </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n      \n\n      <div class="form-group">\n        <label class=" label">Renewal Date</label>\n        <ion-item class="form-control">\n          <ion-datetime name="renewal_date" displayFormat="DD-MM-YYYY" pickerFormat="DD-MM-YYYY" min="1990" max="2050-10-31" formControlName="renewal_date"></ion-datetime>\n        </ion-item> \n      </div>\n      \n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="nextEmployee()" type="button" expand="block">Previous</button>\n</div>\n\n<div class="width-full margintop15">\n    <button ion-button block type="button" (click)="save(addriverForm.valid, addriverForm.value)"  expand="block"><ion-icon name="checkmark-circle"></ion-icon>&nbsp;&nbsp;Add Driver</button>\n</div>\n      <!-- <button ion-button class="next-button" (click)="nextPayment()" type="button" expand="block">Next</button> -->\n\n     \n    </div>\n\n    </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\add-driver\add-driver.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_5__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_4__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_6__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_7__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], AddDriverPage);
    return AddDriverPage;
}());

//# sourceMappingURL=add-driver.js.map

/***/ }),

/***/ 999:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AddEmployeePage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__providers_loader__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_toast__ = __webpack_require__(11);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__ = __webpack_require__(12);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__providers_truck__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__providers_event_service__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__agm_core__ = __webpack_require__(25);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_moment__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__home_home__ = __webpack_require__(9);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__helpers_common__ = __webpack_require__(31);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













/**
 * Generated class for the AddEmployeePage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var AddEmployeePage = /** @class */ (function () {
    // [(ngModel)]="n"
    function AddEmployeePage(navCtrl, navParams, loader, toast, fb, events, trucks, admin, mapsAPILoader, ngZone) {
        var _this = this;
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.loader = loader;
        this.toast = toast;
        this.fb = fb;
        this.events = events;
        this.trucks = trucks;
        this.admin = admin;
        this.mapsAPILoader = mapsAPILoader;
        this.ngZone = ngZone;
        this.categoryArray = ['Office Staff', 'Marketing Staff', 'Driver', 'Traffic', 'Cluster Manager'];
        // reportsArray = [{id: '', name: 'Cluster Manager'}];
        this.reportsArray = [];
        this.submitted = false;
        this.staffFlag = true;
        this.locationFlag = false;
        this.configFlag = false;
        this.dist = false;
        // Search query for Agency Name list
        this.agencyName = function (keyword) {
            if (keyword) {
                // getTruckPositionList
                return _this.trucks.searchAgencyName(keyword).map(function (res) {
                    return res.json();
                });
            }
            else {
                return __WEBPACK_IMPORTED_MODULE_6_rxjs__["Observable"].of([]);
            }
        };
        this.addForm = this.fb.group({
            first_name: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(25)])],
            last_name: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(2), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(25)])],
            mobile_no: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].compose([__WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].minLength(10), __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].maxLength(10)])],
            email: ['', __WEBPACK_IMPORTED_MODULE_4__angular_forms__["Validators"].email],
            category: [''],
            reports_to: [''],
            reward_points: [''],
            from: [''],
            to: [''],
            agency_name: [''],
            work_location: [''],
            location_restriction: [''],
            latitude: [''],
            longitude: [''],
            check_in_out: [false],
            auto_log_out: [false],
            location_restriction_check: [false],
            live_tractrking: [false],
            check_out_reminders: [false],
            distance: [''],
            ideal_marker_time: ['']
        });
        this.getClusterManagersList();
    }
    AddEmployeePage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad AddEmployeePage');
    };
    AddEmployeePage.prototype.getLocation = function (e) {
        e.preventDefault();
        this.events.broadcast('location');
    };
    AddEmployeePage.prototype.getClusterManagersList = function () {
        var _this = this;
        // if( this.addForm.value.category == "Cluster Manager") {
        console.log("Yes...");
        // this.loader.show();
        this.admin.getEmployeesList().subscribe(function (res) {
            // this.loader.hide();
            var data = res.json();
            // this.reportsArray = [];
            // this.reportsArray.push({id: '', name: 'Cluster Manager'});
            data.results.forEach(function (element) {
                if (element.category == "Cluster Manager") {
                    var obj = { id: element._id, name: element.first_name };
                    _this.reportsArray.push(obj);
                }
            });
        }, function (err) {
            _this.loader.hide();
            console.log("error");
        });
        // } else {
        //   console.log("No...");
        //   this.reportsArray = [{id: '', name: 'Cluster Manager'}];
        // }
    };
    AddEmployeePage.prototype.Home = function () {
        this.navCtrl.setRoot(__WEBPACK_IMPORTED_MODULE_11__home_home__["a" /* HomePage */]);
    };
    AddEmployeePage.prototype.save = function () {
        var _this = this;
        var tdDate = __WEBPACK_IMPORTED_MODULE_10_moment__().format('YYYY-MM-DD');
        this.submitted = true;
        console.log("Data >>>", this.addForm);
        var formData = this.addForm.value;
        formData.agency_name = formData.agency_name.agency_name;
        if (formData.from) {
            formData.from = tdDate + "T" + formData.from;
        }
        if (formData.to) {
            formData.to = tdDate + "T" + formData.to;
        }
        console.log("formData >>>>>", formData);
        if (formData.reports_to == "") {
            delete formData.reports_to;
        }
        console.log("formData >>>>>", formData);
        // formData.ideal_marker_time = tdDate + "T" + formData.ideal_marker_time;
        this.loader.show();
        this.admin.addEmployee(formData).subscribe(function (res) {
            _this.loader.hide();
            console.log("res >>>>>", res);
            // this.navCtrl.push(HomePage);
            _this.addForm.reset();
            _this.toast.show({ 'message': 'Added successfully.' });
            _this.navCtrl.setRoot('ManageEmployeesPage');
        }, function (err) {
            _this.loader.hide();
            _this.toast.error({ 'message': 'Something went wrong.' });
            console.log(">>>>>Err", err);
        });
        // }
    };
    AddEmployeePage.prototype.nextStaff = function () {
        this.staffFlag = true;
        this.locationFlag = false;
        this.configFlag = false;
    };
    AddEmployeePage.prototype.nextLocation = function () {
        var _this = this;
        this.staffFlag = false;
        this.locationFlag = true;
        this.configFlag = false;
        setTimeout(function () {
            _this.mapsAPILoader.load().then(function () {
                var presentCity = new google.maps.places.Autocomplete(_this.searchElementRef.nativeElement, {
                    componentRestrictions: { "country": "IN" },
                    types: []
                });
                presentCity.addListener("place_changed", function () {
                    _this.ngZone.run(function () {
                        //get the place result
                        var place = presentCity.getPlace();
                        var lat = place.geometry.location.lat();
                        var lng = place.geometry.location.lng();
                        localStorage.setItem('latlng', JSON.stringify({
                            lat: lat,
                            lng: lng
                        }));
                        _this.events.broadcast('location');
                        _this.addForm.controls['latitude'].setValue(lat);
                        _this.addForm.controls['longitude'].setValue(lng);
                        var components = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].extract_components(place);
                        var pre_city = __WEBPACK_IMPORTED_MODULE_12__helpers_common__["a" /* CommonHelper */].get_sublocality(components);
                        console.log(components, pre_city);
                        document.getElementById('Location').value = pre_city;
                        _this.addForm.controls['work_location'].setValue(pre_city);
                    });
                });
            });
        }, 2000);
    };
    AddEmployeePage.prototype.nextConfig = function () {
        this.staffFlag = false;
        this.locationFlag = false;
        this.configFlag = true;
    };
    AddEmployeePage.prototype.inout = function (event) {
        if (event.checked) {
            this.addForm.value.check_in_out = true;
        }
        else {
            this.addForm.value.check_in_out = false;
        }
    };
    AddEmployeePage.prototype.autoLogOut = function (event) {
        if (event.checked) {
            this.addForm.value.auto_log_out = true;
        }
        else {
            this.addForm.value.auto_log_out = false;
        }
    };
    AddEmployeePage.prototype.locationCheck = function (event) {
        if (event.checked) {
            this.addForm.value.location_restriction_check = true;
        }
        else {
            this.addForm.value.location_restriction_check = false;
        }
    };
    AddEmployeePage.prototype.liveTractrking = function (event) {
        if (event.checked) {
            this.addForm.value.live_tractrking = true;
        }
        else {
            this.addForm.value.live_tractrking = false;
        }
    };
    AddEmployeePage.prototype.checkReminders = function (event) {
        if (event.checked) {
            this.addForm.value.check_out_reminders = true;
            this.dist = true;
        }
        else {
            this.addForm.value.check_out_reminders = false;
            this.dist = false;
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])("search"),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AddEmployeePage.prototype, "searchElementRef", void 0);
    AddEmployeePage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-add-employee',template:/*ion-inline-start:"D:\truck\src\pages\admin-privileges\add-employee\add-employee.html"*/'<!--\n  Generated template for the AddEmployeePage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n  <ion-navbar>\n      <ion-toolbar>\n        <ion-title>Add Employee</ion-title>\n        <ion-buttons end>\n          <button ion-button icon-only (click)="Home()" >\n              <ion-icon name="home" ></ion-icon>\n          </button>\n        </ion-buttons>\n      </ion-toolbar>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n\n  <form [formGroup]="addForm">\n    <!------------------ Staff Flag ----------------  -->\n    <div *ngIf="staffFlag">\n      <div class="width-full">\n      <label class="fonts-size">Staff Details </label>\n      </div>\n      <div class="form-group">\n        <label class=" label">First Name <span style="color:red">*</span></label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="first_name" class="form-control">\n      </div>\n\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.first_name.invalid && (addForm.controls.first_name.dirty || addForm.controls.first_name.touched))">\n        <div *ngIf="addForm.controls[\'first_name\'].hasError(\'required\')">\n          <label>First name is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'first_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'first_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Last Name <span style="color:red">*</span></label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="last_name" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.last_name.invalid && (addForm.controls.last_name.dirty || addForm.controls.last_name.touched))">\n        <div *ngIf="addForm.controls[\'last_name\'].hasError(\'required\')">\n          <label>Last name is required.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'last_name\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 2 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'last_name\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 25 letters.</label>\n        </div>\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Mobile No</label>\n        <input type="text" placeholder="" autocomplete="off" formControlName="mobile_no" class="form-control">\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.mobile_no.invalid && (addForm.controls.mobile_no.dirty || addForm.controls.mobile_no.touched))">\n        <div *ngIf="addForm.controls[\'mobile_no\'].hasError(\'minlength\')">\n          <label>Minimum length is upto 10 letters.</label>\n        </div>\n        <div *ngIf="addForm.controls[\'mobile_no\'].hasError(\'maxlength\')">\n          <label>Maximum length is upto 10 letters.</label>\n        </div>\n      </div>\n\n\n      <div class="form-group">\n        <label class=" label">Email</label>\n        <input type="email" placeholder="" autocomplete="off" formControlName="email" class="form-control" email>\n      </div>\n      <div class="error-msg" *ngIf="submitted || (addForm.controls.email.invalid && (addForm.controls.email.dirty || addForm.controls.email.touched))">\n        <div *ngIf="addForm.controls[\'email\'].errors.email">\n          <label>Invalid email.</label>\n        </div>\n      </div>\n\n      <!-- (change)="getClusterManagersList()" -->\n      <div class="form-group">\n        <label class=" label">Category </label>\n        <select class="form-control drop-down" name="category" formControlName="category" >\n          <option value="">Select category</option>\n          <option *ngFor="let tn of categoryArray" [ngValue]="tn">{{tn}}</option>\n        </select>          \n      </div>\n\n      <div class="form-group">\n        <label class=" label">Reports To </label>\n        <select class="form-control drop-down" name="reports_to" formControlName="reports_to" >\n          <option value="">Select Reports To </option>\n          <option *ngFor="let rp of reportsArray" [ngValue]="rp.id">{{rp.name}}</option>\n        </select>          \n      </div>\n\n      <div class="form-group">\n        <label class=" label">Reward Points </label>\n        <input type="number" placeholder="" autocomplete="off" formControlName="reward_points" class="form-control">\n      </div>\n\n      \n\n      <br>\n      <div class="width-full">\n      <button ion-button class="next-button" (click)="nextLocation()" type="button" expand="block">Next</button>\n        </div>\n\n    </div>\n\n    <!------------------ Location Allotment Flag ----------------  -->\n    <div *ngIf="locationFlag">\n      <div class="width-full">\n      <label class="fonts-size">Location Allotment </label>\n      </div>\n      <br>\n      <br>\n      <div class="width-full">\n      <b>Office Timing </b>\n      </div>\n      <div class="form-group">\n        <label class=" label">From</label>\n      \n      <ion-item class="form-control">\n        <ion-datetime name="from" displayFormat="HH:mm" pickerFormat="HH:mm" formControlName="from"></ion-datetime>\n      </ion-item>\n    </div>\n      <div class="form-group">\n        <label class=" label">To</label>\n      \n      <ion-item class="form-control">\n        <ion-datetime name="to" displayFormat="HH:mm" pickerFormat="HH:mm" formControlName="to"></ion-datetime>\n      </ion-item>\n    </div>\n      <div class="form-group">\n          <label class=" label">Agency Name  <span style="color:red">*</span></label> \n          <input class="form-control"\n            ng2-auto-complete\n            formControlName="agency_name"\n            [source] = "agencyName.bind(this)"\n            list-formatter="agency_name"/>\n        </div>\n\n        <div class="form-group ma-top-24">\n          <input name="work_location" id="Location" type="text" placeholder="Search Location" #search formControlName="work_location" class="form-control">\n        </div>\n        <div class="width-full">\n        <ion-row right>  \n          <ion-col text-right>   \n            <button ion-button (click)="getLocation($event)"><ion-icon name="locate"></ion-icon></button>\n          </ion-col> \n        </ion-row>\n        \n        <google-maps></google-maps>\n        <!-- (googleAddress)="addressData($event)" -->\n        <br>\n      </div>\n        <div class="form-group">\n          <label class=" label">Location Restriction (meters)</label>\n          <input name="location_restriction" type="number" placeholder="" formControlName="location_restriction" class="form-control"> \n        </div>\n        <div class="form-group">\n          <label class=" label">Latitude </label>\n          <input name="latitude" type="text" placeholder="" formControlName="latitude" class="form-control"> \n        </div>\n        <div class="form-group">\n          <label class=" label">Longitude </label>\n          <input name="longitude" type="text" placeholder="" formControlName="longitude" class="form-control"> \n        </div>\n      \n        <br>\n        <div class="width-full">\n        <button ion-button class="pre-button" (click)="nextStaff()" type="button" expand="block">Previous</button>\n        <button ion-button class="next-button" (click)="nextConfig()" type="button" expand="block">Next</button>\n  </div>\n    </div>\n\n\n    <!------------------ Config Flag ----------------  -->\n    <div *ngIf="configFlag">\n      <div class="width-full">\n      <label class="fonts-size">Configuration </label>\n      </div>\n      <br>\n\n      <div>\n            <div class="width-full">\n          <ion-col col-6>\n            <br>\n            Check In/Out \n          </ion-col>\n          <ion-col col-6>\n            <div class="form-group">\n              <ion-toggle formControlName="check_in_out" (ionChange)="inout($event)" color="primary"></ion-toggle>\n            </div>\n          </ion-col>\n          </div>\n\n          <div class="width-full">\n            <ion-col col-6>\n            <br>\n            Auto Log out \n          </ion-col>\n          <ion-col col-6>\n            <div class="form-group">\n              <ion-toggle formControlName="auto_log_out" (ionChange)="autoLogOut($event)" color="primary"></ion-toggle>\n            </div>\n          </ion-col>\n          </div>\n          <div class="width-full">\n          <ion-col col-6>\n            <br>\n            Location Restriction            \n          </ion-col>\n          <ion-col col-6>\n            <div class="form-group">\n              <ion-toggle formControlName="location_restriction_check" (ionChange)="locationCheck($event)" color="primary"></ion-toggle>\n            </div>\n          </ion-col>\n        </div>\n\n           \n      </div>\n      <br>\n<div class="width-full">\n      <b>Tracking</b>\n</div>\n      <div>\n            <div class="width-full">\n          <ion-col col-6>\n            <br>\n            Live Tractrking \n          </ion-col>\n          <ion-col col-6>\n            <div class="form-group">\n              <ion-toggle formControlName="live_tractrking" (ionChange)="liveTractrking($event)" color="primary"></ion-toggle>\n            </div>\n          </ion-col>\n          </div>\n          <div class="width-full">\n          <ion-col col-6>\n            <br>\n            Check Out Reminders \n          </ion-col>\n          <ion-col col-6>\n            <div class="form-group">\n              <ion-toggle formControlName="check_out_reminders" (ionChange)="checkReminders($event)" color="primary"></ion-toggle>\n            </div>\n          </ion-col>\n        </div>\n      </div>\n\n      <div class="form-group" *ngIf="dist">\n        <label class=" label">Distance (mtrs)</label>\n        <input type="number" placeholder="" formControlName="distance" class="form-control">\n      </div>\n\n      <div class="form-group">\n        <label class=" label">Ideal Marker Time (Minutes)</label>\n        <input type="number" placeholder="" formControlName="ideal_marker_time" class="form-control">\n      </div>\n      <!-- <ion-item class="form-control">\n        <ion-datetime name="ideal_marker_time" displayFormat="HH:mm" pickerFormat="HH:mm" formControlName="ideal_marker_time"></ion-datetime>\n      </ion-item> -->\n\n      <br>\n      <div class="width-full">\n      <button ion-button class="pre-button" (click)="nextLocation()" type="button" expand="block">Previous</button>\n      <button ion-button class="up-button" (click)="save(addForm.valid)" type="submit" expand="block">Add Employee</button>\n  </div>\n\n    </div>\n    \n  </form>\n</ion-content>\n'/*ion-inline-end:"D:\truck\src\pages\admin-privileges\add-employee\add-employee.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["m" /* NavController */],
            __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["n" /* NavParams */],
            __WEBPACK_IMPORTED_MODULE_2__providers_loader__["a" /* LoaderProvider */],
            __WEBPACK_IMPORTED_MODULE_3__providers_toast__["a" /* ToastProvider */],
            __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormBuilder"],
            __WEBPACK_IMPORTED_MODULE_8__providers_event_service__["a" /* EventsService */],
            __WEBPACK_IMPORTED_MODULE_7__providers_truck__["a" /* Trucks */],
            __WEBPACK_IMPORTED_MODULE_5__providers_admin_privilege_admin_privilege__["a" /* AdminPrivilegeProvider */],
            __WEBPACK_IMPORTED_MODULE_9__agm_core__["b" /* MapsAPILoader */],
            __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgZone"]])
    ], AddEmployeePage);
    return AddEmployeePage;
}());

//# sourceMappingURL=add-employee.js.map

/***/ })

},[609]);
//# sourceMappingURL=main.js.map